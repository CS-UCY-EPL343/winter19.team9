{"version":3,"sources":["components/common/AnnouncementModal.jsx","components/common/ButtonLoader.jsx","components/assets/img/logos/ffLogoTransparent.png","components/common/Message.jsx","components/common/AnnouncementsPrivateModal.jsx","components/common/MessagesModalAdminCoach.jsx","components/common/MessagesNewModalForm.jsx","components/common/MessageNewModal.jsx","repository.js","components/assets/img/logos/jccLogo.svg","components/assets/img/logos/paypalLogo.svg","components/common/EditAccount.jsx","components/common/ProfileInfo.jsx","components/pages/ProfileAdmin.jsx","components/common/SelectionPT.jsx","components/common/PersonalTrainingCreate.jsx","components/Spinner.jsx","components/common/ToggleModal.jsx","history.js","components/common/SignUp.jsx","components/common/LogIn.jsx","components/common/SignInUpModal.jsx","components/common/Navigation.jsx","components/common/Footer.jsx","components/PageWrapper.jsx","components/common/CarouselHP.jsx","components/common/ServiceGoal.jsx","components/common/Services.jsx","components/common/Announcement.jsx","components/common/AnnouncementsPublic.jsx","components/pages/Home.jsx","components/common/ContactUs.jsx","components/common/TeamMember.jsx","components/common/Team.jsx","components/pages/PrivacyPolicy.jsx","components/pages/AboutUs.jsx","components/common/PaymentModal.jsx","components/common/Event.jsx","components/common/EventsModal.jsx","components/common/AnnouncementCompPub.jsx","components/common/AnnouncementsPrivate.jsx","components/common/MessagesModal.jsx","components/common/SettingsProfile.jsx","components/common/GeneralScheduleModalBody.jsx","components/common/BookClass.jsx","components/common/EnrolledClassSchedule.jsx","components/pages/ProfileUser.jsx","components/common/SelectionPTCoach.jsx","components/common/CoachSchedule.jsx","components/pages/ProfileCoach.jsx","components/pages/Classes.jsx","components/common/ScrollToTop.jsx","components/PrivateRoute.jsx","components/pages/ForgotPassword.jsx","components/pages/VerifyEmail.jsx","components/pages/ResetPassword.jsx","components/common/LineChart.jsx","components/common/PieChart.jsx","components/common/CreateStaffMember.jsx","components/common/StaffList.jsx","components/common/Leader.jsx","components/common/LeaderBoard.jsx","components/common/Graphs.jsx","components/pages/UIDashboard.jsx","components/common/NotFound.jsx","components/common/LoginModal.jsx","components/pages/LoginAndroid.jsx","App.js","serviceWorker.js","index.js","components/assets/img/logos/fitnessFactoryLogo.png"],"names":["AnnouncementModal","props","handleChange","e","setState","target","name","value","onSubmit","preventDefault","announcements","announcement_id","state","title","message","ANNOUNCEMENT_ID","then","res","DeleteAnn","level","toggle","bind","this","prevProps","prevState","snapshot","undefined","isOpen","modal","size","aria-labelledby","centered","className","htmlFor","style","color","type","id","placeholder","defaultValue","required","onChange","onClick","btnCancel","isPrivate","Component","ButtonLoader","data-testid","disabled","loading","icon","faSpinner","spin","loadingText","textIcon","faSearch","text","module","exports","Message","imageURL","$imagePreview","src","alt","image","Buffer","from","toString","outgoing","hasSeen","fromContact","toContact","timestamp","adminAvatar","AnnouncementsPrivateModal","MessagesModalAdminCoach","newModal","onMessageSubmit","contact","createNewMessage","response","newArr","messages","slice","unshift","console","log","Swal","fire","catch","getMessagesMelios","userName","sort","a","b","Message_ID","err","alert","TotalMessages","newMessages","map","msg","makeMessagesRead","toggleTotalMessages","includes","animationIn","index","userLevel","From_level","To_Name","To_Surname","To_level","toUpperCase","From_Name","From_Surname","Timestamp","split","key","Title","MessagesNewModalForm","recipients","rec","AccountID","CoachName","Surname","MessagesNewModal","getCoaches","Modal","ModalHeader","ModalBody","ModalFooter","Button","BASE_URL","logIn","data","axios","post","username","password","localStorage","setItem","token","Date","now","Promise","reject","userData","getItem","isVerified","staffData","getPrivateAnnouncements","getPrivateAnnouncementsAdmin","getTotalPrivateAnnouncements","getPublicAnnouncements","get","getClasses","getClassDay","ClassName","getClassTime","ClassDay","getClassCoach","ClassTime","getUserID","getCoachID","getClassID","removeAnnouncement","deleteAnnouncement","addAnnouncement","addPrivateAnnouncement","updateAnnouncement","allUsersCount","getUserCount","count","getEnrollCount","getPageVisits","allVisitCount","loggedInVisit","updateAboutUsVisit","updateClassesVisit","updateProfileVisit","updateDashboardVisit","updateHomePageVisit","insertCoach","insertAdmin","deleteAdmin","AdminId","deleteCoach","CoachID","countPT","sameUsername","countClasses","postuserData","enrollUser","CLASS_ID","User_ID","unenrollUser","deleteUserData","insertPT","deletePT","getAllCoaches","getPersonalSchedule","getClassSchedule","getCoachTraining","Coach_ID","getCoachClasses","userPic","userDetails","signUp","logOut","removeItem","isAuthenticated","getUserLevel","lastVerify","newPassword","resetPass","sendEmail","error","getCoachInfo","coachID","getMessages","getTotalMessages","getAdmins","getServerConnections","connections","getGenderChart","getClassDaysChart","getPersonalDaysChart","getAgeRange","getCoachesDayWork","getCoachesPersonalWork","validURL","str","RegExp","test","getEvents","getEventsTotal","EditAccount","handleSubmit","confirmPassword","deleted","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","window","location","replace","dismiss","DismissReason","cancel","fillCSV","surname","email","medical_history","phone_number","bdate","age","PT","classes","day","x","time","coach","classname","array","i","length","myKey","push","onValueInput","Test","testSubmit","noValidate","Name","match","Email","checkPhoneNo","number","Phone_Number","file","imagePreviewUrl","flag","csvData","Bdate","Age","dataPT","Medical_History","reload","testLoading","reader","FileReader","files","onloadend","readAsDataURL","accept","_handleImageChange","pattern","maxLength","refreshPage","ProfileInfo","finally","toggleLoading","loadingInfo","secondaryStyle","ProfileAdmin","loadingSearchUser","nameStart","searchResults","toggleMessages","modalMessages","onAnnouncementSubmit","Ann_ID","modalAnnId","ann","onAnnouncementDelete","filter","onAnnouncementSubmit2","prevAnn","TIMESTAMP","toISOString","toggle2","modal2","handleChange2","user","find","usr","updateCoaches","updatePrivateAnnouncements","updateUserPic","resolve","selectedCoaches","toggleAnnouncements","modalAnnouncements","toggleAnnouncements2","modalAnnouncements2","handleDayTimeChange","retrievedCoach","coachIDRet","toggleAnnouncementsData","modalTitle","modalMessage","toggleAnnouncementsData2","personalTraining","trainingScheduleCoach","classSchedule","coachIDAssigned","ownerName","to","aria-label","hidden","readOnly","width","modalSize","modalHeader","modalBody","marginRight","resetOnSubmit","userID","coachIDret","toogle","coaches","SelectionPT","onSubmit2","clearOptions","document","getElementById","coachesRet","PersonalTrainingCreate","toggleModalCoachBooked","toggleModalClassConflict","toggleModalUserBooked","toggleModalIncorrectCoach","coachName","coachBooked","userBooked","incorrectCoach","classConflict","insertDeleteMethodStates","fillTable","refIDs","classesRefIDs","cNames","node","refID","textContent","clear","ret","classRefIDs","forEach","item","TimeCode","DayCode","Time","Day","retCoach","refIDsCoach","String","pos","indexOf","posCoach","splice","Array","keys","toFixed","Spinner","viewBox","cx","cy","r","fill","stroke","strokeWidth","ToggleModal","Comp","navigator","userAgent","React","cloneElement","createBrowserHistory","SignUp","event","formData","calcDate","setCustomValidity","verifyCallback","rotate","fname","lname","confirm_password","gender","submitted","newToken","require","randomBytes","encryptedString","encrypt","dataSign","bDate","verify","hash","countTotal","toggleModal","dDate","ageDif","getFullYear","ValidatorForm","addValidationRule","autoComplete","TextField","bday","InputLabelProps","shrink","FormControl","component","RadioGroup","FormControlLabel","control","Radio","label","elementID","sitekey","render","theme","Signup","dataLogIn","Error","d","Verify","setUserLevel","history","forgotPassword","SignInUpModal","showModal","$","css","show","onHide","Body","LogIn","Navigation","onLogOut","pathname","exact","logo_img","height","data-toggle","data-target","aria-controls","aria-expanded","Footer","stylesheetData","href","v","padding","Icons","PageWrapper","handleClick","on","animate","scrollTop","offset","top","childrenWithProps","Children","children","child","data-hash","ControlledCarousel","handleSelect","selectedIndex","direction","Carousel","activeIndex","onSelect","pauseOnHover","touch","Item","process","Caption","CarouselHp","ServiceGoal","faMedal","faWeightHanging","charAt","Services","services","animationInDelay","position","left","transform","bgImage","Announcement","toggleHover","hover","onSlickRemove","slickRemove","dataStyle","imgStyle","display","isAdder","slickAdd","onMouseOver","onMouseOut","AnnouncementsPublic","_isMounted","prev","l","settings","dots","infinite","speed","slidesToShow","slidesToScroll","centerPadding","centerMode","responsive","breakpoint","Home","ContactUs","trim","phone","status","address","facebook","instagram","frameBorder","scrolling","marginHeight","marginWidth","TeamMember","Team","PrivacyPolicy","AboutUs","PaymentModal","defaultChecked","jccLogo","paypalLogo","Event","active","timeStart","EventsModal","events","date","dateTimeFormat","Intl","DateTimeFormat","weekday","year","month","format","startSplit","start","parseInt","getHours","getMinutes","AnnouncementCompPub","AnnouncementsPrivate","MessagesModal","MessageNewModal","SettingsProfile","context","open","togglePayment","modalPayment","toggleEvents","modalEvents","toggleTotalEvents","TotalEvents","toggleEditAccount","modalEditAccount","TotalAnnouncement","sevenDaysLeft","Count","total","GeneralScheduleModalBody","BookClass","toggleModalGeneral","modalGeneral","handleClass","SelectedClass","handleDay","SelectedDay","handleTime","SelectedTime","handleCoach","SelectedCoach","ClassID","invalid","getSelections","onDelete","EnrolledClassSchedule","ColorLuminance","hex","lum","c","rgb","substr","Math","round","min","max","myRef","createRef","ptIDs","trainingScheduleRet","personalSchedule","cIDs","pIDs","pNames","ClassColors","StateSetter","StateSetterPT","y","z","dataClasses","childNodes","backgroundImage","userSchedule","retPer","p","newList","newList2","newList3","ref","ProfileUser","handleSelections","handlePTClass","EnrollID","SelectionPTCoach","selectionTime","selectionDay","CoachSchedule","toggleModalAnotherClient","toggleModalEmptyCell","toggleModalClientHasClass","toggleModalClientHasClassInsert","clientNames","setAttribute","fullName","ClientRefIDs","ProfileCoach","searchButton","userDropdown","cleared","Classes","ScrollToTop","useLocation","useEffect","scrollTo","PrivateRoute","UserLevel","rest","onMailChange","sendEmailPass","messageFromServer","input","showError","sendingEmail","confirming","VerifyEmail","confirm","secret","params","ResetPassword","getID","isLoading","LineChart","lineChart","labels","percentChange","percentComparison","lastNumber","getChartData","createChart","updateChart","clearInterval","newNumber","randomData","ctx","datasets","backgroundColor","strokeColor","pointColor","borderColor","pointStrokeColor","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","call","chart","tooltip","_active","activePoint","tooltipPosition","topY","legend","bottom","bottomY","chartArea","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","restore","myLineChart","maintainAspectRatio","options","tooltips","enabled","intersect","mode","titleFontSize","titleSpacing","titleMarginBottom","displayColors","elements","point","radius","scales","xAxes","yAxes","self","setInterval","chartSpeed","getData","shift","changeOne","changeTwo","percentComparsion","changeNumber","update","divStyle","background","bgColor","PieChart","myChart","animationTime","timeMS","destroy","hoverBackgroundColor","cutoutPercentage","align","fullWidth","animation","animateScale","duration","CreateStaffMember","staffType","marginTop","marginBottom","StaffList","admins","DeleteCoach","DeleteAdmin","createAdmin","createCoach","Object","defineProperty","getOwnPropertyDescriptor","admin","Gender","Leader","LeaderBoard","sortOrder","sortAsc","num","dataSort","dataTitle","numberComma","leaders","parseFloat","leader","numberWithCommas","Graphs","createGraph","graphData","scale","ticks","beginAtZero","gridLines","zeroLineColor","colors","ys","chart1","getContext","xs","aspectRatio","defaultFontColor","defaultFontSize","UIDashboard","getGraphData","finalCoachData","groupBy","val","coachData","dayIndex","dayToIndex","Participants","firstGraphLoaded","values","indexToDay","selectedGraph","genders","enroll","personal","uiDataPageViews","uiDataUserTypes","handleChart","visitCounts","userCounts","list","keyGetter","Map","collection","set","types","visits","page","views","Number","NotFound","LoginModal","onRadioChange","changeSign","crypto","cryptr","createHmac","digest","onSignUp","repeatedPassword","onClose","med","userVerify","tabIndex","role","aria-hidden","action","method","checked","LoginAndroid","App","Tabletop","init","callback","googleData","readStylesheetInfo","simpleSheet","home","about","footer","jsonData","jsonHome","columnNames","col","jsonClasses","jsonAbout","jsonFooter","path","Boolean","hostname","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.542fd5d7.chunk.js","sourcesContent":["import React, {Component}                                   from 'react';\r\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\n\r\nclass AnnouncementModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title          : '',\r\n      message        : '',\r\n      announcement_id: '',\r\n      // this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID\r\n      // || '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.DeleteAnn = this.DeleteAnn.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      title          : this.props.title || '',\r\n      message        : this.props.message || '',\r\n      announcement_id: this.props.announcement_id || '',\r\n    });\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (!this.props.announcements || !this.props.announcement_id) {\r\n      return;\r\n    }\r\n    if (this.props.announcement_id === prevProps.announcement_id\r\n        || this.props.announcement_id === undefined) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.title !== prevProps.title ||\r\n        this.props.message !== prevProps.message\r\n        || this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID\r\n        !== prevProps.announcements[this.props.announcement_id].ANNOUNCEMENT_ID) {\r\n      this.setState({\r\n        title          : this.props.title || '',\r\n        message        : this.props.message || '',\r\n        announcement_id: this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID\r\n                         || '',\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.announcements && this.props.announcement_id) {\r\n      this.props.onSubmit(this.state.title, this.state.message,\r\n          this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID)\r\n          .then((res) => {\r\n            if (res) {\r\n              // this.setState({title: '', message: '', announcement_id: ''});\r\n            }\r\n          });\r\n    } else {\r\n      this.props.onSubmit(this.state.title, this.state.message).then((res) => {\r\n        if (res) {\r\n          // this.setState({title: '', message: ''});\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // DeleteAnn = (ANNOUNCEMENT_ID) => {\r\n  //     if (this.state.level <= 1) {\r\n  //         return;\r\n  //     }\r\n  //\r\n  //     removeAnnouncement(ANNOUNCEMENT_ID).then(() => {\r\n  //         this.setState({\r\n  //             announcements: this.state.announcements.filter(\r\n  //                 ann => ann.ANNOUNCEMENT_ID\r\n  //                     !== ANNOUNCEMENT_ID),\r\n  //         });\r\n  //     }).catch(err => alert(err));\r\n  //\r\n  // };\r\n\r\n  DeleteAnn = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.level !== -1) {\r\n      this.props.DeleteAnn(this.props.announcement_id).then((res) => {\r\n        if (res) {\r\n          this.props.toggle();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  toggle = () => {\r\n    if (!(this.props.announcements && this.props.announcement_id)) {\r\n      this.setState({title: '', message: ''});\r\n    }\r\n    this.props.toggle();\r\n  };\r\n\r\n  render() {\r\n    // noinspection JSUnresolvedVariable\r\n    return (\r\n        <Modal isOpen = { this.props.modal } toggle = { this.toggle }\r\n               size = { 'md' }\r\n               aria-labelledby = \"contained-modal-title-vcenter\"\r\n               centered\r\n        >\r\n          <ModalHeader toggle = { this.toggle }>Add\r\n                                                Announcement</ModalHeader>\r\n          <ModalBody>\r\n            <form>\r\n              <div className = \"form-group\">\r\n                <label htmlFor = \"ann-modal-title\"\r\n                       className = \"col-form-label\"\r\n                       style = { {color: '#D90429'} }\r\n                >Title:</label>\r\n                <input type = \"text\"\r\n                       className = \"form-control\"\r\n                       id = \"ann-modal-title\"\r\n                       placeholder = \"Enter a title...\"\r\n                       name = \"title\"\r\n                       defaultValue = { this.props.title || '' }\r\n                       required\r\n                       onChange = { this.handleChange }\r\n                />\r\n              </div>\r\n              <div className = \"form-group\">\r\n                <label htmlFor = \"ann-modal-message\"\r\n                       className = \"col-form-label\"\r\n                       style = { {color: '#D90429'} }\r\n                >Message:</label>\r\n                <textarea className = \"form-control\"\r\n                          id = \"ann-modal-message\"\r\n                          placeholder = \"Enter a message...\"\r\n                          name = \"message\"\r\n                          defaultValue = { this.props.message || '' }\r\n                          required\r\n                          onChange = { this.handleChange }\r\n                />\r\n              </div>\r\n            </form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick = { this.toggle }>{ this.props.btnCancel\r\n                                                || 'Cancel' }</Button>\r\n            <Button onClick = { this.onSubmit }>{ 'Submit' }</Button>\r\n            { this.props.isPrivate &&\r\n              <Button onClick = { this.DeleteAnn }>{ 'Delete' }</Button> }\r\n          </ModalFooter>\r\n        </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnnouncementModal;","import React, {Component} from 'react';\r\nimport '../assets/styles/ButtonLoader.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner, faSearch} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ButtonLoader extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.onClick ?\r\n                    (\r\n                        <button data-testid={'button'} className={'loading-button' + (this.props.className\r\n                            || '')}\r\n                                disabled={this.props.loading}\r\n                                type={this.props.type || 'button'}\r\n                                onClick={this.props.onClick}\r\n                        >\r\n                            {this.props.loading && (\r\n                                <FontAwesomeIcon icon={faSpinner}\r\n                                                 size={this.props.size || 'sm'}\r\n                                                 spin\r\n                                />\r\n                            )}\r\n                            {this.props.loading &&\r\n                            <span>{this.props.loadingText}</span>}\r\n                            {!this.props.loading && <span>{this.props.textIcon\r\n                                ? <FontAwesomeIcon icon={faSearch}\r\n                                                   size={this.props.size || 'sm'}\r\n                                />\r\n                                : this.props.text}</span>}\r\n                        </button>\r\n                    ) :\r\n                    (\r\n                        <button data-testid={'button'} className={'loading-button' + (this.props.className\r\n                            || '')}\r\n                                disabled={this.props.loading}\r\n                                type={this.props.type || 'button'}\r\n                        >\r\n                            {this.props.loading && (\r\n                                <FontAwesomeIcon icon={faSpinner}\r\n                                                 size={this.props.size || 'sm'}\r\n                                                 spin\r\n                                />\r\n                            )}\r\n                            {this.props.loading &&\r\n                            <span>{this.props.loadingText}</span>}\r\n                            {!this.props.loading && <span>{this.props.textIcon\r\n                                ? <FontAwesomeIcon icon={faSearch}\r\n                                                   size={this.props.size || 'sm'}\r\n                                />\r\n                                : this.props.text}</span>}\r\n                        </button>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ButtonLoader;","module.exports = __webpack_public_path__ + \"static/media/ffLogoTransparent.9f75a55d.png\";","import React, {Component} from 'react';\r\nimport '../assets/styles/Message.css';\r\nimport adminAvatar        from '../assets/img/logos/fitnessFactoryLogo.png';\r\n\r\nclass Message extends Component {\r\n  render() {\r\n    let imageURL = 'https://www.w3schools.com/howto/img_avatar.png';\r\n    let $imagePreview = <img src = { imageURL }\r\n                             className = { 'img-left' }\r\n                             alt = { 'Profile Avatar' }\r\n    />;\r\n    if (this.props.image) {\r\n      imageURL =\r\n          'data:image/png;base64,' + new Buffer.from(this.props.image,\r\n          'binary').toString(\r\n          'base64');\r\n      $imagePreview = (<img src = { imageURL }\r\n                            className = { 'img-left' }\r\n                            alt = { 'Profile Avatar' }\r\n      />);\r\n    }\r\n\r\n    return (\r\n        <div className = { `msg-card \r\n            ${ this.props.outgoing ? 'left' : 'right' } \r\n            ${ this.props.hasSeen ? '' : 'new-msg' }` }\r\n        >\r\n          {/*{ !this.props.outgoing && !this.props.hasSeen &&*/ }\r\n          {/*  <i className = \"fa fa-plus-circle\" /> }*/ }\r\n          { this.props.outgoing ?\r\n              <div className = \"msg-data\">\r\n                <div className={'msg-header'}>\r\n                  { $imagePreview }\r\n                  <h2 className = \"card-title\">\r\n                    { this.props.title }\r\n                  </h2>\r\n                </div>\r\n                <div className = \"msg-content right\">\r\n                  <h5 className = \"msg-contact\">\r\n                    From: { this.props.fromContact }\r\n                  </h5>\r\n                  <h5 className = \"msg-contact\">\r\n                    To: { this.props.toContact }\r\n                  </h5>\r\n                  <p className = \"card-text\">\r\n                    { this.props.message }\r\n                  </p>\r\n                </div>\r\n                <p className = \"msg-timestamp left\">{ this.props.timestamp }</p>\r\n              </div>\r\n              :\r\n              <div className = \"msg-data\">\r\n                <div className={'msg-header left'}>\r\n                  < img src = { adminAvatar }\r\n                        className = { 'img-right' }\r\n                        alt = 'Avatar'\r\n                  />\r\n                  <h2 className = \"card-title right\">\r\n                    { this.props.title }\r\n                  </h2>\r\n                </div>\r\n                <div className = \"msg-content left\">\r\n                  <h5 className = \"msg-contact\">\r\n                    From: { this.props.fromContact }\r\n                  </h5>\r\n                  <h5 className = \"msg-contact\">\r\n                    To: { this.props.toContact }\r\n                  </h5>\r\n                  <p className = \"card-text\">\r\n                    { this.props.message }\r\n                  </p>\r\n                </div>\r\n                <p className = \"msg-timestamp right\">{ this.props.timestamp }</p>\r\n              </div>\r\n          }\r\n        </div>\r\n    )\r\n        ;\r\n  }\r\n}\r\n\r\nexport default Message;","import React, {Component}                                   from 'react';\r\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\n\r\nclass AnnouncementsPrivateModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title  : this.props.title || '',\r\n      message: this.props.message || '',\r\n      // announcement_id :\r\n      // this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID\r\n      // || '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.title, this.state.message).then((res) => {\r\n      if(res) {\r\n        this.toggle();\r\n      }\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({title: '', message: ''});\r\n    this.props.toggle();\r\n  };\r\n\r\n  render() {\r\n    // noinspection JSUnresolvedVariable\r\n    return (\r\n        <Modal isOpen = { this.props.modal } toggle = { this.toggle }\r\n               size = { 'md' }\r\n               aria-labelledby = \"contained-modal-title-vcenter\"\r\n               centered\r\n        >\r\n          <ModalHeader toggle = { this.toggle }>Add\r\n                                                      Announcement</ModalHeader>\r\n          <ModalBody>\r\n            <form>\r\n              <div className = \"form-group\">\r\n                <label htmlFor = \"ann-modal-title\"\r\n                       className = \"col-form-label\"\r\n                       style = { {color: '#D90429'} }\r\n                >Title:</label>\r\n                <input type = \"text\"\r\n                       className = \"form-control\"\r\n                       id = \"ann-modal-title\"\r\n                       placeholder = \"Enter a title...\"\r\n                       name = \"title\"\r\n                       defaultValue = { this.props.title || '' }\r\n                       required\r\n                       onChange = { this.handleChange }\r\n                />\r\n              </div>\r\n              <div className = \"form-group\">\r\n                <label htmlFor = \"ann-modal-message\"\r\n                       className = \"col-form-label\"\r\n                       style = { {color: '#D90429'} }\r\n                >Message:</label>\r\n                <textarea className = \"form-control\"\r\n                          id = \"ann-modal-message\"\r\n                          placeholder = \"Enter a message...\"\r\n                          name = \"message\"\r\n                          defaultValue = { this.props.message || '' }\r\n                          required\r\n                          onChange = { this.handleChange }\r\n                />\r\n              </div>\r\n            </form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick = { this.toggle }>{ this.props.btnCancel\r\n                                                      || 'Cancel' }</Button>\r\n            <Button onClick = { this.onSubmit }>{ 'Submit' }</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnnouncementsPrivateModal;","import React, {Component} from 'react';\r\nimport '../assets/styles/MessagesModal.css';\r\nimport Message            from './Message';\r\nimport {\r\n  createNewMessage,\r\n  getMessagesMelios,\r\n  makeMessagesRead,\r\n}                         from '../../repository';\r\nimport MessageNewModal    from './MessageNewModal';\r\nimport Swal               from 'sweetalert2';\r\nimport Spinner            from '../Spinner';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\n\r\nclass MessagesModalAdminCoach extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      newModal: false,\r\n      loading : [true, false],\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onMessageSubmit = this.onMessageSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // const data = {username: this.props.username};\r\n    getMessagesMelios(this.props.userName).then(response => {\r\n      this.setState({\r\n        messages: response.messages[0].sort(\r\n            function(a, b) {\r\n              // noinspection JSUnresolvedVariable\r\n              return b.Message_ID\r\n                     - a.Message_ID;\r\n            }),\r\n      });\r\n    }).then(() => {\r\n      let loading = this.state.loading;\r\n      loading[0] = false;\r\n      this.setState({loading});\r\n    }).catch(err => alert(err));\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.TotalMessages > 0) {\r\n      // noinspection JSUnresolvedVariable\r\n      const newMessages = this.state.messages.slice(0,\r\n          this.props.TotalMessages).map(msg => msg.Message_ID);\r\n      makeMessagesRead(newMessages).then(() => {\r\n        this.props.toggleTotalMessages();\r\n      }).catch(err => alert(err));\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({newModal: !this.state.newModal});\r\n  };\r\n\r\n  onMessageSubmit = (e, title, message, contact) => {\r\n    e.preventDefault();\r\n    createNewMessage({title, message, contact}).then(response => {\r\n      this.toggle();\r\n      let newArr = this.state.messages.slice(0);\r\n      newArr.unshift(response[0]);\r\n      this.setState({messages: newArr});\r\n      console.log(response);\r\n      if (response[0]) {\r\n        Swal.fire(\r\n            'Message sent successfully',\r\n            '',\r\n            'success',\r\n        ).then();\r\n      } else {\r\n        Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ).then();\r\n      }\r\n    }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ).then());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div id = { 'MessagesModal' }>\r\n          { this.state.loading.includes(true) ?\r\n              <Spinner style = { {\r\n                'height'         : '250px',\r\n                'backgroundColor': 'transparent',\r\n              } }\r\n              />\r\n              :\r\n              <>\r\n                <button className = { 'new-msg-btn btn btn-primary btn-xl text-uppercase' }\r\n                        onClick = { this.toggle }\r\n                >\r\n                  New Message\r\n                </button>\r\n                <div id = \"message-container\"\r\n                     className = \"container-fluid mt-2\"\r\n                >\r\n                  <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                    { this.state.messages.map(\r\n                        (msg, index) => {\r\n                          // noinspection JSUnresolvedVariable\r\n                          const outgoing = this.props.userLevel\r\n                                           === msg.From_level;\r\n                          // noinspection JSUnresolvedVariable\r\n                          const toContact = `${ msg.To_Name } ${ msg.To_Surname } - ${ msg.To_level.toUpperCase() }`;\r\n                          // noinspection JSUnresolvedVariable\r\n                          const fromContact = `${ msg.From_Name } ${ msg.From_Surname } - ${ msg.From_level.toUpperCase() }`;\r\n                          const timestamp = msg.Timestamp.split(/[T.]+/)[0]\r\n                                            + ' '\r\n                                            + msg.Timestamp.split(/[T.]+/)[1];\r\n                          // noinspection JSUnresolvedVariable\r\n                          return (\r\n                              <div className = { 'messageDiv' } key = { index }>\r\n                                { this.props.TotalMessages > 0 &&\r\n                                  this.props.TotalMessages === index &&\r\n                                  < div className = 'new-msg-line'>\r\n                                    New Messages Above\r\n                                  </div> }\r\n                                <Message\r\n                                    key = { msg.Message_ID }\r\n                                    title = { msg.Title }\r\n                                    message = { msg.Message }\r\n                                    toContact = { toContact }\r\n                                    fromContact = { fromContact }\r\n                                    outgoing = { outgoing }\r\n                                    timestamp = { timestamp }\r\n                                    hasSeen = { msg.hasSeen }\r\n                                    image = { this.state.image }\r\n                                />\r\n                              </div>\r\n                          );\r\n                        })\r\n                    }\r\n                  </AnimatedOnScroll>\r\n                </div>\r\n              </>\r\n          }\r\n\r\n          <MessageNewModal onSubmit = { this.onMessageSubmit }\r\n                           toggle = { this.toggle }\r\n                           modal = { this.state.newModal }\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessagesModalAdminCoach;","import React, {Component} from 'react';\r\n\r\nclass MessagesNewModalForm extends Component {\r\n    render() {\r\n        // noinspection JSUnresolvedVariable\r\n        return (\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"ann-modal-to\"\r\n                           className=\"col-form-label\"\r\n                           style={{color: '#D90429'}}\r\n                    >To:</label>\r\n                    <select id=\"ann-modal-to\"\r\n                            name=\"contact\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Select recipient...\"\r\n                            required\r\n                            onChange={this.props.handleChange}\r\n                    >\r\n                        <option value=''>\r\n                            Select recipient...\r\n                        </option>\r\n                        {this.props.recipients.map((rec, index) => {\r\n                            // noinspection JSUnresolvedVariable\r\n                            return <option key={index}\r\n                                           value={rec.AccountID}\r\n                            >\r\n                                {`${rec.CoachName} ${rec.Surname} - ${rec.level.toUpperCase()}`}\r\n                            </option>;\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"ann-modal-title\"\r\n                           className=\"col-form-label\"\r\n                           style={{color: '#D90429'}}\r\n                    >Title:</label>\r\n                    <input type=\"text\"\r\n                           className=\"form-control\"\r\n                           id=\"ann-modal-title\"\r\n                           placeholder=\"Enter a title...\"\r\n                           name=\"title\"\r\n                           value={this.props.title}\r\n                           required\r\n                           onChange={this.props.handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"ann-modal-message\"\r\n                           className=\"col-form-label\"\r\n                           style={{color: '#D90429'}}\r\n                    >Message:</label>\r\n                    <textarea className=\"form-control\"\r\n                              id=\"ann-modal-message\"\r\n                              placeholder=\"Enter a message...\"\r\n                              name=\"message\"\r\n                              value={this.props.message}\r\n                              required\r\n                              onChange={this.props.handleChange}\r\n                    />\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessagesNewModalForm;","import React, {Component} from 'react';\r\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\nimport MessagesNewModalForm from \"./MessagesNewModalForm\";\r\nimport Swal from \"sweetalert2\";\r\nimport {getCoaches} from \"../../repository\";\r\n\r\nclass MessagesNewModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            message: '',\r\n            recipients: [],\r\n            contact: '',\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        getCoaches().then(response => {\r\n            this.setState({recipients: response});\r\n        }).catch(err => alert(err));\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.title || !this.state.message || !this.state.contact) {\r\n            Swal.fire(\r\n                'Please fill in all boxes',\r\n                '',\r\n                'error',\r\n            ).then();\r\n            return;\r\n        }\r\n        this.props.onSubmit(e, this.state.title, this.state.message,\r\n            this.state.contact);\r\n        this.setState({title: '', message: '', contact: ''});\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            title: '',\r\n            message: '',\r\n            contact: '',\r\n        });\r\n        this.props.toggle();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.modal} toggle={this.toggle}\r\n                   size={'md'}\r\n                   aria-labelledby=\"contained-modal-title-vcenter\"\r\n                   centered\r\n            >\r\n                <ModalHeader toggle={this.toggle}>New Message</ModalHeader>\r\n                <ModalBody>\r\n                    <MessagesNewModalForm handleChange={this.handleChange} {...this.state} />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button onClick={this.toggle}>{this.props.btnCancel\r\n                    || 'Cancel'}</Button>\r\n                    <Button onClick={this.onSubmit}>{'Submit'}</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessagesNewModal;","import axios from 'axios';\r\n\r\n// const BASE_URL = 'http://localhost:5000';\r\nconst BASE_URL = 'https://europe-west1-ffnbackend-d46c6.cloudfunctions.net/app';\r\n\r\n// const BASE_URL = 'http://10.16.22.2:5000';  // For Android use your IPv4\r\n\r\n\r\nexport function logIn(data) {\r\n  // console.log(data);\r\n  return axios.post(`${ BASE_URL }/api/auth`, {\r\n    name    : data.username,\r\n    password: data.password,\r\n  }).then(response => {\r\n    localStorage.setItem('x-access-token', response.data.token);\r\n    // noinspection JSCheckFunctionSignatures\r\n    localStorage.setItem('x-access-token-expiration',\r\n        Date.now() + 2 * 60 * 60 * 1000);\r\n    return response.data;\r\n  }).catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n// noinspection JSUnusedLocalSymbols,JSUnusedGlobalSymbols\r\nexport function images(file) {\r\n  return axios.post('/api/getProfilePic', {emp_id: 5});\r\n}\r\n\r\nexport function userData() {\r\n  return axios.post(`${ BASE_URL }/api/user/data`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function isVerified() {\r\n  return axios.post(`${ BASE_URL }/api/user/isVerified`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject(\r\n          'Error when get is Verified from database!!'));\r\n}\r\n\r\nexport function staffData() {\r\n  return axios.post(`${ BASE_URL }/api/staff/data`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getPrivateAnnouncements() {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response)\r\n      .catch(() => Promise.reject(\r\n          'Error when get private Announcements from database!!'));\r\n}\r\n\r\nexport function getPrivateAnnouncementsAdmin(username) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/admin/private`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    username        : username,\r\n  }).then(response => response).catch(() => Promise.reject(\r\n      'Error when get private Announcements from database!!'));\r\n}\r\n\r\nexport function getTotalPrivateAnnouncements() {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private/total`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function getPublicAnnouncements() {\r\n  return axios.get(`${ BASE_URL }/api/announcements/public`)\r\n      .then(response => response);\r\n}\r\n\r\nexport function getDayCode() {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/BookClass/ClassDayCode`,\r\n          {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getTimeCode() {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/BookClass/ClassTimeCode`,\r\n          {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClasses() {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassName`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClassName(ClassID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/BookClass/ClassNames`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        ClassID         : ClassID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClassDay(ClassName) {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassDay`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    ClassName       : ClassName,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClassTime(ClassName, ClassDay) {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassTime`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    ClassName       : ClassName,\r\n    ClassDay        : ClassDay,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClassCoach(ClassName, ClassDay, ClassTime) {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassCoach`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    ClassName       : ClassName,\r\n    ClassDay        : ClassDay,\r\n    ClassTime       : ClassTime,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getUserID() {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/UserID`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed user!'));\r\n}\r\n\r\nexport function getCoachID() {\r\n  return axios.post(`${ BASE_URL }/api/CoachSchedule/CoachID`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed user!'));\r\n}\r\n\r\n// export function getCoachID(ClassName, ClassDay, ClassTime) {\r\n//     return axios\r\n//         .post(`${BASE_URL}/api/BookClass/CoachID`, {'x-access-token':\r\n// localStorage.getItem('x-access-token'), ClassName: ClassName, ClassDay:\r\n// ClassDay, ClassTime: ClassTime}) .then(response => response.data) .catch(err\r\n// => Promise.reject('Authentication Failed!')) }\r\n\r\nexport function getClassID(ClassName, ClassDay, ClassTime, CoachName) {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassID`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    ClassName       : ClassName,\r\n    ClassDay        : ClassDay,\r\n    ClassTime       : ClassTime,\r\n    CoachName       : CoachName,\r\n  })\r\n      .then(response => response)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function removeAnnouncement(id) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/remove`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'), id: id,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function deleteAnnouncement(id) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private/delete`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    announcement_id : id,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function addAnnouncement(title, message) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/public/add`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    title           : title,\r\n    message         : message,\r\n  })\r\n      .then(response => response)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function addPrivateAnnouncement(title, message, username) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private/add`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    title           : title,\r\n    message         : message,\r\n    username        : username,\r\n  })\r\n      .then(response => response)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function updateAnnouncement(announcement_id, title, message) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private/update`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    title           : title,\r\n    message         : message,\r\n    announcement_id : announcement_id,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function allUsersCount() {\r\n  return axios.get(`${ BASE_URL }/api/user/type/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Failed!!!'));\r\n}\r\n\r\nexport function getUserCount() {\r\n  return axios.get(`${ BASE_URL }/api/user/count`)\r\n      .then(response => response.data.count[0].count);\r\n}\r\n\r\nexport function getEnrollCount() {\r\n  return axios.get(`${ BASE_URL }/api/enroll/count`)\r\n      .then(response => response.data.count[0].count);\r\n}\r\n\r\nexport function getPageVisits() {\r\n  return axios.get(`${ BASE_URL }/api/page/visits/count`)\r\n      .then(response => response.data.count[0].count);\r\n}\r\n\r\nexport function allVisitCount() {\r\n  return axios.get(`${ BASE_URL }/api/visit/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('HomePage Count Failed!!!'));\r\n}\r\n\r\nexport function loggedInVisit() {\r\n  return axios.post(`${ BASE_URL }/api/logged/visit/count`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => {});\r\n}\r\n\r\nexport function updateAboutUsVisit() {\r\n  return axios.post(`${ BASE_URL }/api/AboutUs/visit/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('HomePage Count Failed!!!'));\r\n}\r\n\r\nexport function updateClassesVisit() {\r\n  return axios.post(`${ BASE_URL }/api/Classes/visit/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('HomePage Count Failed!!!'));\r\n}\r\n\r\nexport function updateProfileVisit() {\r\n  return axios.post(`${ BASE_URL }/api/profile/visit/count`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Profile Count Failed!!!'));\r\n}\r\n\r\nexport function updateDashboardVisit() {\r\n  return axios.post(`${ BASE_URL }/api/dashboard/visit/count`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Profile Count Failed!!!'));\r\n}\r\n\r\nexport function updateHomePageVisit() {\r\n  return axios.post(`${ BASE_URL }/api/homepage/visit/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('HomePage Count Failed!!!'));\r\n}\r\n\r\nexport function insertCoach(data) {\r\n  return axios.post(`${ BASE_URL }/api/coach/insert`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('insert coach failed.'));\r\n}\r\n\r\nexport function insertAdmin(data) {\r\n  return axios.post(`${ BASE_URL }/api/admin/insert`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Insert Admin failed.'));\r\n}\r\n\r\nexport function deleteAdmin(AdminId) {\r\n  return axios.post(`${ BASE_URL }/api/admin/delete`, {AdminId: AdminId})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Delete Admin Failed.'));\r\n}\r\n\r\nexport function deleteCoach(CoachID) {\r\n  return axios.post(`${ BASE_URL }/api/coach/delete`, {CoachID: CoachID})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Delete Coach Failed.'));\r\n}\r\n\r\nexport function countPT(AccountID) {\r\n  return axios.post(`${ BASE_URL }/api/coach/countPT`,\r\n      {AccountID: AccountID})\r\n      .then(response => response.data.count[0])\r\n      .catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function sameUsername(username) {\r\n  return axios.post(`${ BASE_URL }/api/same/username`,\r\n      {username: username})\r\n      .then(response => response.data.count[0])\r\n      .catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function countClasses(AccountID) {\r\n  return axios.post(`${ BASE_URL }/api/coach/countClasses`,\r\n      {AccountID: AccountID})\r\n      .then(response => response.data.count[0])\r\n      .catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function postuserData(data) {\r\n  // noinspection JSUnresolvedVariable\r\n  return axios.post(`${ BASE_URL }/api/user/post/data`,\r\n      {'x-access-token': localStorage.getItem('x-access-token'), data: data})\r\n      .then(response => response.message)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function enrollUser(CLASS_ID, User_ID) {\r\n  // noinspection JSUnresolvedVariable\r\n  return axios.post(`${ BASE_URL }/api/BookClass/Enroll`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    CLASS_ID        : CLASS_ID,\r\n    User_ID         : User_ID,\r\n  })\r\n      .then(response => response.message)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function unenrollUser(CLASS_ID, User_ID) {\r\n  // noinspection JSUnresolvedVariable\r\n  return axios\r\n      .post(`${ BASE_URL }/api/BookClass/Unenroll`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        CLASS_ID        : CLASS_ID,\r\n        User_ID         : User_ID,\r\n      })\r\n      .then(response => response.message)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function deleteUserData() {\r\n  return axios.post(`${ BASE_URL }/api/user/delete/data`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  }).then(response => {\r\n    return response.data;\r\n  }).catch(() => Promise.reject('Authentication Failed!'));\r\n\r\n}\r\n\r\n//insert into personal training\r\nexport function insertPT(data) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/insert/PersonalTraining`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        data            : data,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//delete from personal training\r\nexport function deletePT(data) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/delete/PersonalTraining`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        data            : data,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//for coaches for personal training\r\nexport function getAllCoaches() {\r\n  return axios.post(`${ BASE_URL }/api/bookTraining/allCoaches`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//for image from database\r\n// noinspection JSUnusedGlobalSymbols\r\nexport function UserPic(name) {\r\n  return axios.post(`${ BASE_URL }/api/user/UserPic`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    name            : name,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//fetching the data for the personal training schedule\r\nexport function getPersonalTraining(User_ID) {\r\n  return axios.post(`${ BASE_URL }/api/user/getPersonalTraining`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    User_ID         : User_ID,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getPersonalSchedule(User_ID) {\r\n  return axios.post(`${ BASE_URL }/api/user/getPersonalSchedule`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    User_ID         : User_ID,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//Gets the class schedule of the user with the given User_ID\r\nexport function getClassSchedule(User_ID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/user/getClassSchedule`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        User_ID         : User_ID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//fetching the data for the personal training schedule\r\nexport function getCoachTraining(Coach_ID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/coach/getCoachTraining`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        Coach_ID        : Coach_ID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getCoachClasses(Coach_ID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/user/getCoachClasses`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        Coach_ID        : Coach_ID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//fetch pic\r\nexport function userPic(User_ID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/user/userPic`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        User_ID         : User_ID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//mine\r\nexport function userDetails(name) {\r\n  return axios.post(`${ BASE_URL }/api/user/userDetails`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    name            : name,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function signUp(data) {\r\n  return axios.post(`${ BASE_URL }/api/user/insert`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Sign Up failed.'));\r\n}\r\n\r\nexport function logOut() {\r\n  localStorage.removeItem('x-access-token');\r\n  localStorage.removeItem('x-access-token-expiration');\r\n}\r\n\r\nexport function isAuthenticated() {\r\n  return (\r\n      localStorage.getItem('x-access-token') &&\r\n      localStorage.getItem('x-access-token-expiration') > Date.now()\r\n  );\r\n}\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport function hasPermissionFor(user) {\r\n  if (!localStorage.getItem('x-access-token') ||\r\n      !localStorage.getItem('x-access-token-expiration') > Date.now()) {\r\n    return false;\r\n  }\r\n\r\n  return getUserLevel().then(level => {\r\n    if (level === 'admin') {\r\n      return true;\r\n    } else if (level === 'coach' && (\r\n        user === 'coach' || user === 'user')) {\r\n      return true;\r\n    } else {\r\n      return level === 'user' && user === 'user';\r\n    }\r\n  });\r\n}\r\n\r\nexport function getUserLevel() {\r\n  return axios.post(`${ BASE_URL }/api/userLevel`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  }).then(response => response.data.userLevel);\r\n}\r\n\r\nexport function lastVerify(data) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/verifyEmail/:id`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Verification failed.'));\r\n}\r\n\r\nexport function newPassword(data) {\r\n  return axios.post(`${ BASE_URL }/api/reset-password`, data)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function resetPass(data) {\r\n  return axios.post(`${ BASE_URL }/api/resetPassword/:id`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Failed to reset Password'));\r\n}\r\n\r\nexport function sendEmail(data) {\r\n  return axios.post(`${ BASE_URL }/api/email`, data)\r\n      .then(response => response.data)\r\n      .catch(error => error);\r\n}\r\n\r\n//retrieve coach info\r\nexport function getCoachInfo(coachID) {\r\n  return axios.post(`${ BASE_URL }/api/coach/getInfo`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    coachID         : coachID,\r\n\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n// Melios\r\nexport function getMessagesMelios(username) {\r\n  return axios.post(`${ BASE_URL }/api/messages/get2`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    username        : username,\r\n\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getMessages() {\r\n  return axios.post(`${ BASE_URL }/api/messages/get`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function deleteMessage(id) {\r\n  return axios.post(`${ BASE_URL }/api/messages/delete`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'), id,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getTotalMessages() {\r\n  return axios.post(`${ BASE_URL }/api/messages/total`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data.count[0])\r\n      .catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function makeMessagesRead(newMessages) {\r\n  return axios.post(`${ BASE_URL }/api/messages/unread`,\r\n      {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        newMessages     : newMessages,\r\n      }).then(response => response.data).catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function createNewMessage(data) {\r\n  return axios.post(`${ BASE_URL }/api/messages/new`,\r\n      {\r\n        'x-access-token': localStorage.getItem('x-access-token'), data,\r\n      }).then(response => response.data).catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function getCoaches() {\r\n  return axios.get(`${ BASE_URL }/api/coaches/get`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getAdmins() {\r\n  return axios.get(`${ BASE_URL }/api/admins/get`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getServerConnections() {\r\n  return axios.get(`${ BASE_URL }/api/server/connections`)\r\n      .then(response => response.data.connections);\r\n}\r\n\r\nexport function getGenderChart() {\r\n  return axios.get(`${ BASE_URL }/api/chart/pie/gender`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getClassDaysChart() {\r\n  return axios.get(`${ BASE_URL }/api/chart/pie/enroll`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getPersonalDaysChart() {\r\n  return axios.get(`${ BASE_URL }/api/chart/pie/personal`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getAgeRange() {\r\n  return axios.get(`${ BASE_URL }/api/chart/bar/age`)\r\n      .then(response => response.data[0][0]);\r\n}\r\n\r\nexport function getCoachesDayWork() {\r\n  return axios.get(`${ BASE_URL }/api/chart/line/coaches/week-work`)\r\n      .then(response => response.data[0]);\r\n}\r\n\r\nexport function getCoachesPersonalWork() {\r\n  return axios.get(`${ BASE_URL }/api/chart/line/coaches/personal-work`)\r\n      .then(response => response.data[0]);\r\n}\r\n\r\nexport function validURL(str) {\r\n  const pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n                             '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'\r\n                             + // domain name\r\n                             '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4)\r\n                             // address\r\n                             '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and\r\n                             // path\r\n                             '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n                             '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n  return !!pattern.test(str);\r\n}\r\n\r\nexport function getEvents() {\r\n  return axios.post(`${ BASE_URL }/api/events/get`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getEventsTotal() {\r\n  return axios.post(`${ BASE_URL }/api/events/total`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}","module.exports = __webpack_public_path__ + \"static/media/jccLogo.c31e2ec4.svg\";","module.exports = __webpack_public_path__ + \"static/media/paypalLogo.9984b3be.svg\";","import React, {Component} from 'react';\r\nimport {CSVLink}          from 'react-csv';\r\nimport '../assets/styles/EditAccountModal.css';\r\nimport {logOut, userData} from '../../repository';\r\nimport {postuserData}     from '../../repository';\r\nimport {deleteUserData}   from '../../repository';\r\nimport Swal               from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport Spinner            from '../Spinner';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\n\r\nclass EditAccount extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file           : '',\r\n      imagePreviewUrl: '',\r\n      username       : '',\r\n      Email          : '',\r\n      Name           : '',\r\n      Surname        : '',\r\n      password       : '',\r\n      confirmPassword: '',\r\n      image          : '',\r\n      flag           : '1',\r\n      csvData        : [],\r\n      Bdate          : '',\r\n      Age            : '',\r\n      dataPT         : [],\r\n      classes        : [],\r\n      loading        : true,\r\n      Medical_History: '',\r\n      Phone_Number   : '',\r\n    };\r\n    this.onValueInput = this.onValueInput.bind(this);\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    const {password, confirmPassword} = this.state;\r\n    // perform all neccassary validations\r\n    if (password !== confirmPassword) {\r\n      Swal.fire(\r\n          'Passwords don\\'t match',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return 0;\r\n    } else {\r\n      return 1;\r\n    }\r\n\r\n  };\r\n\r\n  refreshPage() {\r\n    // noinspection JSDeprecatedSymbols\r\n    window.location.reload(false);\r\n  }\r\n\r\n  deleted = () => {\r\n    Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteUserData().then(() => {\r\n          Swal.fire(\r\n              'Public Announcement deleted successfully',\r\n              '',\r\n              'success',\r\n          ).then(() => {\r\n            logOut();\r\n            window.location.replace('/');\r\n          });\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Account is safe :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n  };\r\n  fillCSV = (\r\n      name, surname, email, medical_history, phone_number, username, password,\r\n      bdate, age, PT, classes) => {\r\n    // console.log(name);\r\n    //\r\n    // this.state.csvData =[\r\n    //     [\"firstname\", \"lastname\", \"email\",\"username\",\"password\"]];\r\n    // console.log(\"THIS IS THE COACH: \\n\");\r\n    // console.log(PT[0].c);\r\n    let day = '';\r\n    let x = '';\r\n    let time = '';\r\n    let coach = '';\r\n    let classname = '';\r\n    let array = [\r\n      ['Personal Information'], [],\r\n      [\r\n        'Firstname',\r\n        'Lastname',\r\n        'Email',\r\n        'username',\r\n        'password',\r\n        'Phone Number',\r\n        ' Date of Birth',\r\n        'Age',\r\n      ],\r\n      [name, surname, email, username, password, phone_number, bdate, age], [],\r\n      ['Medical History'], [],\r\n      [medical_history],\r\n      ['Personal Training Schedule'], [],\r\n      ['Day', 'Time', 'Coach'],\r\n\r\n    ];\r\n\r\n    for (let i = 0; i < PT.length; i++) {\r\n      x = PT[i];\r\n      for (let myKey in x) {\r\n        if (myKey === 'Day') {\r\n          // noinspection JSUnfilteredForInLoop\r\n          if (x[myKey] === 1) {\r\n            day = 'Monday';\r\n          } else { // noinspection JSUnfilteredForInLoop\r\n            if (x[myKey] === 2) {\r\n              day = 'Tuesday';\r\n            } else { // noinspection JSUnfilteredForInLoop\r\n              if (x[myKey] === 3) {\r\n                day = 'Wednesday';\r\n              } else { // noinspection JSUnfilteredForInLoop\r\n                if (x[myKey] === 4) {\r\n                  day = 'Thursday';\r\n                } else { // noinspection JSAssignmentUsedAsCondition,JSUnfilteredForInLoop\r\n                  if (x[myKey] === 6) {\r\n                    day = 'Saturday';\r\n                  } else {\r\n                    day = 'Sunday';\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else if (myKey === 'Time') {\r\n          // noinspection DuplicatedCode,JSUnfilteredForInLoop\r\n          if (x[myKey] === 1) {\r\n            time = '8:00 - 09:00';\r\n          } else { // noinspection JSUnfilteredForInLoop\r\n            if (x[myKey] === 2) {\r\n              time = '9:00 - 10:00';\r\n            } else { // noinspection JSUnfilteredForInLoop\r\n              if (x[myKey] === 3) {\r\n                time = '10:00 - 11:00';\r\n              } else { // noinspection JSUnfilteredForInLoop\r\n                if (x[myKey] === 4) {\r\n                  time = '11:00 - 12:00';\r\n                } else { // noinspection JSUnfilteredForInLoop\r\n                  if (x[myKey] === 5) {\r\n                    time = '12:00 - 13:00';\r\n                  } else { // noinspection JSUnfilteredForInLoop\r\n                    if (x[myKey] === 6) {\r\n                      time = '13:00 - 14:00';\r\n                    } else { // noinspection JSUnfilteredForInLoop\r\n                      if (x[myKey] === 7) {\r\n                        time = '14:00 - 15:00';\r\n                      } else { // noinspection JSUnfilteredForInLoop\r\n                        if (x[myKey] === 8) {\r\n                          time = '15:00 - 16:00';\r\n                        } else { // noinspection JSUnfilteredForInLoop\r\n                          if (x[myKey] === 9) {\r\n                            time = '16:00 - 17:00';\r\n                          } else { // noinspection JSUnfilteredForInLoop\r\n                            if (x[myKey] === 10) {\r\n                              time = '17:00 - 18:00';\r\n                            } else { // noinspection JSUnfilteredForInLoop\r\n                              if (x[myKey] === 11) {\r\n                                time = '18:00 - 19:00';\r\n                              } else {\r\n                                time = '19:00 - 20:00';\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else if (myKey === 'CoachName') {\r\n          // noinspection JSUnfilteredForInLoop\r\n          coach = x[myKey];\r\n        }\r\n\r\n      }\r\n      array.push([day, time, coach]);\r\n    }\r\n\r\n    array.push([], ['Enrolled Classes Schedule'], [],\r\n        ['Day', 'Time', 'ClassName']);\r\n    for (let i = 0; i < classes.length; i++) {\r\n      x = classes[i];\r\n      for (let myKey in x) {\r\n        if (myKey === 'DayCode') {\r\n          // noinspection JSUnfilteredForInLoop\r\n          if (x[myKey] === 1) {\r\n            day = 'Monday';\r\n          } else { // noinspection JSUnfilteredForInLoop\r\n            if (x[myKey] === 2) {\r\n              day = 'Tuesday';\r\n            } else { // noinspection JSUnfilteredForInLoop\r\n              if (x[myKey] === 3) {\r\n                day = 'Wednesday';\r\n              } else { // noinspection JSUnfilteredForInLoop\r\n                if (x[myKey] === 4) {\r\n                  day = 'Thursday';\r\n                } else { // noinspection JSUnfilteredForInLoop\r\n                  if (x[myKey] === 5) {\r\n                    day = 'Friday';\r\n                  } else { // noinspection JSUnfilteredForInLoop\r\n                    if (x[myKey] === 6) {\r\n                      day = 'Saturday';\r\n                    } else {\r\n                      day = 'Sunday';\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else if (myKey === 'TimeCode') {\r\n          // noinspection DuplicatedCode,JSUnfilteredForInLoop\r\n          if (x[myKey] === 1) {\r\n            time = '8:00 - 09:00';\r\n          } else { // noinspection JSUnfilteredForInLoop\r\n            if (x[myKey] === 2) {\r\n              time = '9:00 - 10:00';\r\n            } else { // noinspection JSUnfilteredForInLoop\r\n              if (x[myKey] === 3) {\r\n                time = '10:00 - 11:00';\r\n              } else { // noinspection JSUnfilteredForInLoop\r\n                if (x[myKey] === 4) {\r\n                  time = '11:00 - 12:00';\r\n                } else { // noinspection JSUnfilteredForInLoop\r\n                  if (x[myKey] === 5) {\r\n                    time = '12:00 - 13:00';\r\n                  } else { // noinspection JSUnfilteredForInLoop\r\n                    if (x[myKey] === 6) {\r\n                      time = '13:00 - 14:00';\r\n                    } else { // noinspection JSUnfilteredForInLoop\r\n                      if (x[myKey] === 7) {\r\n                        time = '14:00 - 15:00';\r\n                      } else { // noinspection JSUnfilteredForInLoop\r\n                        if (x[myKey] === 8) {\r\n                          time = '15:00 - 16:00';\r\n                        } else { // noinspection JSUnfilteredForInLoop\r\n                          if (x[myKey] === 9) {\r\n                            time = '16:00 - 17:00';\r\n                          } else { // noinspection JSUnfilteredForInLoop\r\n                            if (x[myKey] === 10) {\r\n                              time = '17:00 - 18:00';\r\n                            } else { // noinspection JSUnfilteredForInLoop\r\n                              if (x[myKey] === 11) {\r\n                                time = '18:00 - 19:00';\r\n                              } else {\r\n                                time = '19:00 - 20:00';\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else if (myKey === 'Name') {\r\n          // noinspection JSUnfilteredForInLoop\r\n          classname = x[myKey];\r\n        }\r\n\r\n      }\r\n      array.push([day, time, classname]);\r\n    }\r\n\r\n    return array;\r\n\r\n    // return   this.state.csvData =[\r\n    //     [\"Firstname\", \"Lastname\", \"Email\",\"username\",\"password\",\" Date of\r\n    // Birth\",\"Age\"],\r\n    // [name,surname,email,username,password,bdate,age,PT[0].CoachName],\r\n    // [\"Personal Training\"], [\"Day\", \"Time\", \"Coach\"]  ];\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.testLoading) {\r\n      this.setState({loading: false});\r\n    }\r\n    // const {name,surname,email,username,password} = '';\r\n    userData()\r\n        .then(response => {\r\n          console.log(response);\r\n          this.setState(response);\r\n          this.setState({confirmPassword: response.password});\r\n        }).then(() => this.setState({loading: false}));\r\n    //this.props.showUrl(this.props.location.pathname)\r\n    //this.fillCSV(name,surname,email,username,password);\r\n\r\n  }\r\n\r\n  onValueInput = (e) => {\r\n    // if (e.target.value.length === 0) {\r\n    //   this.setState({flag: '0'});\r\n    // } else {\r\n    //   this.setState({flag: '1'});\r\n    // }\r\n\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  Test = () => {\r\n\r\n\r\n    //console.log(this.state.Name);\r\n    // if (this.state.flag === '0') {\r\n    //   Swal.fire(\r\n    //       'Please fill in all boxes',\r\n    //       '',\r\n    //       'error',\r\n    //   ).then();\r\n    // }\r\n    if (this.handleSubmit()) {\r\n      postuserData(this.state)\r\n          .then(() => {\r\n            Swal.fire(\r\n                'Saved Changes',\r\n                '',\r\n                'success',\r\n            ).then();\r\n          }).catch(() => Swal.fire(\r\n          'Something went wrong',\r\n          'Please try again...',\r\n          'error',\r\n      ));\r\n    } else {\r\n      Swal.fire(\r\n          'Passwords do not match',\r\n          'Please try again...',\r\n          'error',\r\n      ).then();\r\n    }\r\n\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(this.props.testSubmit) {\r\n      this.props.testSubmit('Testing');\r\n      return;\r\n    }\r\n\r\n    if ((this.state.noValidate === 1) || !(\r\n        this.state.Name.match(new RegExp('[a-zA-Z ]+')) &&\r\n        this.state.Email.match(\r\n            new RegExp('[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$')) &&\r\n        this.state.Surname.match(new RegExp('^ *[a-zA-Z0-9]+.')) &&\r\n        this.state.username.match(new RegExp('^ *[a-zA-Z0-9]+.')))) {\r\n      Swal.fire(\r\n          'Please fill all the fields Correctly',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return;\r\n    }\r\n    this.Test();\r\n  };\r\n  checkPhoneNo = (number) => {\r\n    if (number === '0') {\r\n      this.setState({Phone_Number: ''});\r\n\r\n    }\r\n    return this.state.Phone_Number;\r\n  };\r\n\r\n  _handleImageChange(e) {\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n\r\n    // noinspection\r\n    // TypeScriptValidateTypes,TypeScriptValidateJSTypes,JSValidateTypes\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        file           : file,\r\n        imagePreviewUrl: reader.result,\r\n      });\r\n\r\n    };\r\n    if (file.size > 5000000) {\r\n      alert('Maximum File Size must be 5Mb!');\r\n      return;\r\n    }\r\n    //let x = this.state.imagePreviewUrl;\r\n    // let byteString = x.split(',')[1];\r\n\r\n    // let blob = base64ToBlob(byteString, 'image/jpg');\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  render() {\r\n\r\n    let imageURL = 'data:image/png;base64,' + new Buffer(this.state.image,\r\n        'binary').toString('base64');\r\n\r\n    let $imagePreview = null;\r\n    if (this.state.image !== '') {\r\n      $imagePreview = (<img src = { imageURL } alt = { 'Profile Avatar' } />);\r\n    }\r\n    if (this.state.imagePreviewUrl) {\r\n      $imagePreview = (<img src = { this.state.imagePreviewUrl }\r\n                            alt = { 'Profile Avatar' }\r\n      />);\r\n    }\r\n\r\n    return (\r\n        <div className = \"container\" id = \"EditModal\">\r\n          { this.state.loading ?\r\n              <Spinner style = { {\r\n                'height'         : '250px',\r\n                'backgroundColor': 'transparent',\r\n              } }\r\n              /> :\r\n              <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                <div className = \"text-center\">\r\n                  <div className = \"avatar-upload\">\r\n                    <div className = \"avatar-edit\">\r\n                      <input type = 'file'\r\n                             id = \"imageUpload\"\r\n                             accept = \".png, .jpg, .jpeg\"\r\n                             onChange = { (e) => this._handleImageChange(e) }\r\n\r\n                      />\r\n                      <label htmlFor = \"imageUpload\" />\r\n                    </div>\r\n                    <div className = \"avatar-preview\">\r\n                      <div id = \"imagePreview\">{ $imagePreview }</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <form className = \"form-horizontal needs-validation\"\r\n                      noValidate = \"novalidate\"\r\n                      onSubmit = { this.onSubmit }\r\n                >\r\n                  <h3>Personal info</h3>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-lg-6 control-label\">First\r\n                                                                name:</label>\r\n                    <input className = \"form-control first-name-field\"\r\n                           name = { 'Name' }\r\n                           placeholder = { 'Enter name' }\r\n                           onChange = { this.onValueInput }\r\n                           type = \"text\"\r\n                           defaultValue = { this.state.Name }\r\n                           required = \"required\"\r\n                           pattern = \"[a-zA-Z ]+\"\r\n                    /> <span className = \"message\" />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-lg-6 control-label\">Last\r\n                                                                name:</label>\r\n                    <input className = \"form-control last-name-field\"\r\n                           name = { 'Surname' }\r\n                           placeholder = { 'Enter surname' }\r\n                           onChange = { this.onValueInput }\r\n                           type = \"text\"\r\n                           defaultValue = { this.state.Surname }\r\n                           required = \"required\"\r\n                           pattern = \"[a-zA-Z ]+\"\r\n                    /> <span className = \"message\" />\r\n                  </div>\r\n\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-lg-3 control-label\">Email:</label>\r\n                    <input className = \"form-control email-field\"\r\n                           name = { 'Email' }\r\n                           placeholder = { 'Enter email' }\r\n                           onChange = { this.onValueInput }\r\n                           type = \"text\"\r\n                           defaultValue = { this.state.Email }\r\n                           required = \"required\"\r\n                           pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                    /> <span className = \"message\" />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-md-6 control-label\">Phone\r\n                                                                Number:</label>\r\n                    <input className = \"form-control tel-field\"\r\n                           name = { 'Phone_Number' }\r\n                           placeholder = { 'Enter phone number' }\r\n                           onChange = { this.onValueInput }\r\n                           type = \"text\"\r\n                           defaultValue = { this.checkPhoneNo(\r\n                               this.state.Phone_Number) }\r\n                           pattern = \"[0-9]{8}|[0-9]{11}\"\r\n                        //required = \"required\"\r\n                    /> <span className = \"message\" />\r\n                  </div>\r\n\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-md-3 control-label\">Username:</label>\r\n                    <input className = \"form-control username-field\"\r\n                           name = { 'username' }\r\n                           placeholder = { 'Enter username' }\r\n                           onChange = { this.onValueInput }\r\n                           type = \"text\"\r\n                           defaultValue = { this.state.username }\r\n                           pattern = \"[a-zA-Z0-9 ]+\"\r\n                           required = \"required\"\r\n                    /> <span className = \"message\" />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-md-3 control-label\">Password:</label>\r\n                    <input className = \"form-control\"\r\n                           name = { 'password' }\r\n                           placeholder = { 'Enter password' }\r\n                           onChange = { this.onValueInput }\r\n                           type = \"password\"\r\n                           defaultValue = { this.state.password }\r\n                           required = \"required\"\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-md-6 control-label\">Confirm\r\n                                                                password:</label>\r\n                    <input className = \"form-control\"\r\n                           name = { 'confirmPassword' }\r\n                           placeholder = { 'Confirm password' }\r\n                           onChange = { this.onValueInput }\r\n                           type = \"password\"\r\n                           defaultValue = { this.state.confirmPassword }\r\n                           required = \"required\"\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-lg-6 control-label\">Add Medical\r\n                                                                History:</label>\r\n                    <textarea maxLength = \"400\"\r\n                              className = \"form-control last-name-field\"\r\n                              placeholder = { 'Enter medical history' }\r\n                              name = { 'Medical_History' }\r\n                              onChange = { this.onValueInput }\r\n                              defaultValue = { this.state.Medical_History }\r\n                              pattern = \"[a-zA-Z ]+\"\r\n\r\n                    /> <span className = \"message\" />\r\n                  </div>\r\n                  <div className = \"form-group\" id = \"buttons\">\r\n                    <label className = \"col-md-12 control-label\" id = \"savel\">\r\n                      <input type = \"submit\"\r\n                             data-testid={'button'}\r\n                             className = \"btn btn-primary\"\r\n                             defaultValue = \"Save Changes\"\r\n                             id = \"save\"\r\n                      />\r\n                    </label>\r\n                    <label className = \"col-md-12 control-label\" id = \"resetl\">\r\n                      <input onClick = { this.refreshPage }\r\n                             data-testid={'button-reset'}\r\n                             type = \"submit\"\r\n                             className = \"btn btn-default\"\r\n                             value = \"Reset\"\r\n                             id = \"reset\"\r\n                      />\r\n                      <input type = \"submit\"\r\n                             data-testid={'button-delete'}\r\n                             className = \"btn btn-default\"\r\n                             defaultValue = \"Delete Account\"\r\n                             id = \"delete\"\r\n                             onClick = { this.deleted }\r\n                      />\r\n\r\n                    </label>\r\n\r\n                    { !this.props.testLoading &&\r\n                      <label id = \"csv\">\r\n                        <CSVLink data = { this.fillCSV(this.state.Name,\r\n                            this.state.Surname, this.state.Email,\r\n                            this.state.Medical_History, this.state.Phone_Number,\r\n                            this.state.username, this.state.password,\r\n                            this.state.Bdate, this.state.Age, this.props.dataPT,\r\n                            this.props.classes) }\r\n                        >Download my Data</CSVLink>\r\n                      </label>\r\n                    }\r\n                  </div>\r\n                </form>\r\n              </AnimatedOnScroll>\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditAccount;","import React, {Component} from 'react';\r\nimport {userData}         from '../../repository';\r\nimport Spinner            from '../Spinner';\r\n\r\nclass ProfileInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name    : '',\r\n      Surname : '',\r\n      username: '',\r\n      image   : '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    userData()\r\n        .then(response => {\r\n          this.setState(response);\r\n        }).finally(() => this.props.toggleLoading());\r\n\r\n  }\r\n\r\n  render() {\r\n    let {image} = this.state;\r\n    let imageURL = 'https://www.w3schools.com/howto/img_avatar.png';\r\n    let $imagePreview = <img src = { imageURL } alt = { 'Profile Avatar' } />;\r\n    if (image !== '') {\r\n      imageURL =\r\n          'data:image/png;base64,' + new Buffer.from(image, 'binary').toString(\r\n          'base64');\r\n      $imagePreview = (<img src = { imageURL } alt = { 'Profile Avatar' } />);\r\n    }\r\n\r\n    const name = this.state.Name + ' ' + this.state.Surname;\r\n    return (\r\n        <div className = \"col-lg-4 col-md-12 col-sm-12\">\r\n          <div className = \"profile block\" id = \"profileBlock\">\r\n            <br />\r\n            { this.props.loadingInfo ?\r\n                <Spinner secondaryStyle = { true }\r\n                         style = { {\r\n                           'height'         : 'auto',\r\n                           'backgroundColor': 'transparent',\r\n                         } }\r\n                />\r\n                :\r\n                <div className = \"profile-picture big-profile-picture clear\">\r\n                  {/*<img id = \"profpic\" width = \"150px\" alt = \"Member Name\"*/ }\r\n                  {/*     src = { image }*/ }\r\n                  {/*/>*/ }\r\n                  <div className = \"avatar-preview d-flex justify-content-center\">\r\n                    <div id = \"imagePreview\">\r\n                      { $imagePreview }\r\n                    </div>\r\n                  </div>\r\n                  <div className = \"middleEdit\" id = \"Edit-Add\">\r\n                    <div className = \"mytext\">Add/Edit<br />\r\n                                              Profile Picture\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            }\r\n            <div className = \"user-name\">{ name }</div>\r\n            <div className = \"profile-description\">\r\n              <p className = \"scnd-font-color\">Welcome to your Fitness Factory\r\n                                               Profile!</p>\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileInfo;","import React, {Component}        from 'react';\r\n// noinspection ES6CheckImport\r\nimport {Redirect}                from 'react-router-dom';\r\nimport '../assets/styles/adminCoachProfile.css';\r\nimport {\r\n  getPrivateAnnouncementsAdmin,\r\n  userDetails,\r\n  updateAnnouncement,\r\n  deleteAnnouncement,\r\n  addPrivateAnnouncement,\r\n  getAllCoaches,\r\n  loggedInVisit,\r\n  updateProfileVisit,\r\n  userPic,\r\n  getCoachInfo,\r\n  getClassSchedule,\r\n  getTotalMessages,\r\n  staffData,\r\n}                                from '../../repository';\r\nimport AnnouncementModal         from '../common/AnnouncementModal';\r\nimport {Button}                  from 'reactstrap';\r\nimport Box                       from '../common/SelectionPT';\r\nimport Timetable                 from '../common/PersonalTrainingCreate';\r\nimport AnnouncementsPrivateModal from '../common/AnnouncementsPrivateModal';\r\nimport Swal                      from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport ButtonLoader              from '../common/ButtonLoader';\r\nimport Spinner                   from '../Spinner';\r\nimport ToggleModal               from '../common/ToggleModal';\r\nimport MessagesModalAdminCoach   from '../common/MessagesModalAdminCoach.jsx';\r\n\r\nclass ProfileAdmin extends Component {\r\n\r\n  // noinspection DuplicatedCode\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nameStart            : '',\r\n      Name                 : '',\r\n      Surname              : '',\r\n      Email                : '',\r\n      username             : '',\r\n      searchResults        : [],\r\n      announcements        : [],\r\n      modal                : false,\r\n      modal2               : false,\r\n      modalTitle           : '',\r\n      modalMessage         : '',\r\n      modalAnnId           : '',\r\n      day                  : '',\r\n      time                 : '',\r\n      flag                 : false,\r\n      image                : '',\r\n      User_ID              : '',\r\n      personalTraining     : [],\r\n      selectedCoaches      : [],\r\n      Coach_ID             : '',\r\n      loadingSearchUser    : false,\r\n      loadingInfo          : false,\r\n      trainingScheduleCoach: [],\r\n      classSchedule        : [],\r\n      coachIDAssigned      : '',\r\n      coachIDRet           : '',\r\n      TotalMessages        : 0,\r\n      ownerName            : '',\r\n    };\r\n\r\n    this.toggleAnnouncementsData = this.toggleAnnouncementsData.bind(this);\r\n    this.onAnnouncementSubmit = this.onAnnouncementSubmit.bind(this);\r\n    this.toggleAnnouncementsData2 = this.toggleAnnouncementsData2.bind(this);\r\n    this.onAnnouncementSubmit2 = this.onAnnouncementSubmit2.bind(this);\r\n    this.handleDayTimeChange = this.handleDayTimeChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.toggleAnnouncements = this.toggleAnnouncements.bind(this);\r\n    this.toggleAnnouncements2 = this.toggleAnnouncements2.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChange2 = this.handleChange2.bind(this);\r\n    this.onAnnouncementDelete = this.onAnnouncementDelete.bind(this);\r\n    this.toggleMessages = this.toggleMessages.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    loggedInVisit().then();\r\n    updateProfileVisit().then();\r\n    staffData().then(response => {\r\n      // this.setState({image: response.image});\r\n      this.setState({ownerName: response.username});\r\n    });\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({loadingSearchUser: true}, () => {\r\n      userDetails(this.state.nameStart)\r\n          .then(response => {\r\n            this.setState({searchResults: response, loadingSearchUser: false});\r\n          });\r\n    });\r\n  };\r\n\r\n  toggleMessages = () => {\r\n    this.setState({modalMessages: !this.state.modalMessages});\r\n  };\r\n\r\n  onAnnouncementSubmit = async(Title, Message, Ann_ID) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === this.state.announcements[this.state.modalAnnId].Title\r\n        && Message\r\n        === this.state.announcements[this.state.modalAnnId].Message) {\r\n      Swal.fire(\r\n          'Please give new data to update',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === '' || Message === '') {\r\n      Swal.fire(\r\n          'Please fill in all boxes',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await updateAnnouncement(Ann_ID, Title, Message).then(response => {\r\n      this.setState({\r\n        announcements: this.state.announcements.map(ann => {\r\n          let x = ann;\r\n          if (ann.ANNOUNCEMENT_ID === response.ANNOUNCEMENT_ID) {\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Title = Title;\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Message = Message;\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Ann_ID = Ann_ID;\r\n          }\r\n          return x;\r\n        }),\r\n      });\r\n      this.toggle();\r\n    }).then(() => {\r\n      flag = true;\r\n      Swal.fire(\r\n          'Private Announcement was updated successfully',\r\n          '',\r\n          'success',\r\n      );\r\n      this.toggle();\r\n    }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ));\r\n\r\n    return flag;\r\n  };\r\n\r\n  onAnnouncementDelete = async(ANNOUNCEMENT_ID) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then(async(result) => {\r\n      if (result.value) {\r\n        await deleteAnnouncement(\r\n            this.state.announcements[ANNOUNCEMENT_ID].ANNOUNCEMENT_ID)\r\n            .then(() => {\r\n              this.setState({\r\n                announcements: this.state.announcements.filter(\r\n                    ann => ann.ANNOUNCEMENT_ID\r\n                           !== this.state.announcements[ANNOUNCEMENT_ID].ANNOUNCEMENT_ID),\r\n              }, () => Swal.fire(\r\n                  'Private Announcement deleted successfully',\r\n                  '',\r\n                  'success',\r\n              ));\r\n              flag = true;\r\n            })\r\n            .catch(() => Swal.fire(\r\n                'Something went wrong',\r\n                'Please try again...',\r\n                'error',\r\n            ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Private Announcement is safe :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n\r\n    return flag;\r\n  };\r\n\r\n  onAnnouncementSubmit2 = async(Title, Message) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (!this.state.username || this.state.username === '') {\r\n      Swal.fire(\r\n          'Please select a user first',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === '' || Message === '') {\r\n      Swal.fire(\r\n          'Please fill in all boxes',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await addPrivateAnnouncement(Title, Message, this.state.username)\r\n        .then(response => {\r\n          let prevAnn = this.state.announcements.slice(0);\r\n          prevAnn.push(\r\n              {\r\n                ANNOUNCEMENT_ID: response.data.ANNOUNCEMENT_ID,\r\n                Title          : Title,\r\n                Message        : Message,\r\n                TIMESTAMP      : new Date().toISOString(),\r\n              });\r\n          this.setState({announcements: prevAnn});\r\n        }).then(() => {\r\n          flag = true;\r\n          Swal.fire(\r\n              'Private Announcement added successfully',\r\n              '',\r\n              'success',\r\n          );\r\n          this.toggle2();\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n\r\n    return flag;\r\n  };\r\n\r\n  toggle = () => {\r\n    if (this.state.level <= 1) {\r\n      return;\r\n    }\r\n\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  toggle2 = () => {\r\n    if (this.state.level <= 1) {\r\n      return;\r\n    }\r\n\r\n    this.setState({modal2: !this.state.modal2});\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({nameStart: e.target.value});\r\n  };\r\n\r\n  handleChange2 = (e) => {\r\n    const username = e.target.value;\r\n    const user = this.state.searchResults.find(\r\n        usr => usr.username === username);\r\n    if (!user) {\r\n      return null;\r\n    }\r\n\r\n    this.setState({loadingInfo: true}, async() => {\r\n      await this.updateCoaches(user, username);\r\n      await this.updatePrivateAnnouncements(username);\r\n      await this.updateUserPic(user);\r\n      this.setState({loadingInfo: false});\r\n    });\r\n  };\r\n\r\n  updateUserPic = async(user) => {\r\n    return new Promise((resolve) => {\r\n      userPic(user.User_ID).then(response => {\r\n        this.setState({image: ''}, () => {\r\n          if (response[0] !== undefined) {\r\n            this.setState({image: response[0].image});\r\n          }\r\n        });\r\n        return resolve();\r\n      });\r\n      getTotalMessages().then(response => {\r\n        this.setState(\r\n            {TotalMessages: response.TotalMessages});\r\n      });\r\n    });\r\n\r\n  };\r\n\r\n  updateCoaches = async(user, username) => {\r\n    return new Promise((resolve) => {\r\n      this.setState({\r\n        Name   : user.Name,\r\n        Surname: user.Surname,\r\n        Email  : user.Email,\r\n        username,\r\n        // image: user.image,\r\n        User_ID: user.User_ID,\r\n      }, () => {\r\n        getAllCoaches().then(response => {\r\n          this.setState({selectedCoaches: response});\r\n        });\r\n\r\n      });\r\n      return resolve();\r\n    });\r\n  };\r\n\r\n  updatePrivateAnnouncements = async(username) => {\r\n    return new Promise((resolve) => {\r\n      getPrivateAnnouncementsAdmin(username).then(response => {\r\n        this.setState({announcements: response.data.announcements});\r\n      });\r\n      return resolve();\r\n    });\r\n  };\r\n\r\n  toggleAnnouncements = () => {\r\n    this.setState({modalAnnouncements: !this.state.modalAnnouncements});\r\n  };\r\n\r\n  toggleAnnouncements2 = () => {\r\n    this.setState({modalAnnouncements2: !this.state.modalAnnouncements2});\r\n  };\r\n\r\n  handleDayTimeChange = (day, time, flag, Coach_ID) => {\r\n    this.setState({day, time, flag, Coach_ID}, () => {\r\n    });\r\n  };\r\n\r\n  retrievedCoach = (coachID) => {\r\n    if (coachID !== '') {\r\n      this.setState({coachIDRet: coachID}, () => {\r\n        getCoachInfo(coachID).then(response => {\r\n          this.setState({selectedCoaches: response.messages});\r\n        });\r\n      });\r\n    } else {\r\n      getClassSchedule(this.state.User_ID).then(response => {\r\n        if (response !== []) {\r\n          getAllCoaches().then(response => {\r\n            this.setState({selectedCoaches: response});\r\n          });\r\n        }\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n  toggleAnnouncementsData = (e) => {\r\n    const x = this.state.announcements[e.target.id - 100];\r\n    if (x === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      modalTitle  : x.Title,\r\n      modalMessage: x.Message,\r\n      modalAnnId  : e.target.id - 100,\r\n    }, () => {\r\n      this.toggleAnnouncements();\r\n    });\r\n  };\r\n\r\n  toggleAnnouncementsData2 = () => {\r\n    this.toggleAnnouncements2();\r\n  };\r\n\r\n  render() {\r\n    let {image} = this.state;\r\n    let imageURL = 'https://www.w3schools.com/howto/img_avatar.png';\r\n    let $imagePreview = <img src = { imageURL } alt = { 'Profile' } />;\r\n    if (image !== '') {\r\n      imageURL =\r\n          'data:image/png;base64,' + new Buffer.from(image, 'binary').toString(\r\n          'base64');\r\n      $imagePreview = (<img src = { imageURL } alt = { 'Profile' } />);\r\n    }\r\n\r\n    return (\r\n        <div id = 'profile' className = \"\">\r\n          { (this.props.userLevel === 'admin') ? '' : <Redirect to = \"/\" /> }\r\n          <div className = \"container-back\">\r\n            <div className = \"row\">\r\n              <div className = \"col-md-4\">\r\n                <h4>Search for Client:</h4>\r\n                <form className = \"adminViewClient\">\r\n                  <div className = \"d-flex bd-highlight\">\r\n                    <div className = \"p-lg-2 flex-fill w-100\">\r\n                      <input className = \"h-100 w-100 m-0\"\r\n                             name = { 'Name' }\r\n                             onChange = { this.handleChange }\r\n                             type = \"text\"\r\n                             placeholder = \"Search\"\r\n                             aria-label = \"Search\"\r\n                             id = \"searchClient\"\r\n                      />\r\n                    </div>\r\n                    <div className = \"p-sm-1 flex-fill bd-highlight \">\r\n                      <ButtonLoader text = { '' }\r\n                                    textIcon = { true }\r\n                                    loadingText = { '' }\r\n                                    size = { 'lg' }\r\n                                    type = { 'submit' }\r\n                                    onClick = { this.onSubmit }\r\n                                    loading = { this.state.loadingSearchUser }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <br />\r\n                <div className = \"form-group\">\r\n                  <label htmlFor = \"userList\"><h6>Clients Retrieved:</h6>\r\n                  </label>\r\n                  <select className = \"form-control\"\r\n                          name = { 'username' }\r\n                          id = \"userList\"\r\n                          onChange = { this.handleChange2 }\r\n                          required\r\n                  >\r\n                    <option value = \"\" hidden>Client List Generated</option>\r\n                    { this.state.searchResults.map((res, index) => {\r\n                      return <option value = { res.username } key = { index }>\r\n                        { res.Name } { res.Surname } { res.username }\r\n                      </option>;\r\n                    })\r\n                    }\r\n\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className = \"col-md-4\">\r\n                <h4>Client Details:</h4>\r\n                <div className = \"avatar-preview d-flex justify-content-center\">\r\n                  <div id = \"imagePreview\">\r\n                    { this.state.loadingInfo ?\r\n                        <Spinner secondaryStyle = { true }\r\n                                 style = { {\r\n                                   'height'         : 'auto',\r\n                                   'backgroundColor': 'transparent',\r\n                                 } }\r\n                        />\r\n                        :\r\n                        $imagePreview\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <form id = \"clientDetails\">\r\n                  <div className = \"form-group\">\r\n                    <label htmlFor = \"nameInput\">Name</label>\r\n                    <input type = \"name\"\r\n                           className = \"form-control\"\r\n                           id = \"nameInput\"\r\n                           value = { this.state.Name }\r\n                           readOnly\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label htmlFor = \"nameInput\">Surname</label>\r\n                    <input type = \"surname\"\r\n                           className = \"form-control\"\r\n                           id = \"surnameInput\"\r\n                           value = { this.state.Surname }\r\n                           readOnly\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label htmlFor = \"exampleInputEmail1\">Email address</label>\r\n                    <input type = \"email\"\r\n                           className = \"form-control\"\r\n                           id = \"exampleInputEmail1\"\r\n                           value = { this.state.Email }\r\n                           readOnly\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"usernameIn\">Username</label>\r\n                    <input type = \"username\"\r\n                           className = \"form-control\"\r\n                           id = \"usernameIn\"\r\n                           value = { this.state.username }\r\n                           readOnly\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                            onClick = { this.toggleMessages }\r\n                            style = { {width: '100%'} }\r\n                    >\r\n                      <i className = \"scnd-font-color fa fa-envelope\" /> Exchange\r\n                                                                         Messages\r\n                                                                         with\r\n                                                                         this\r\n                                                                         Client\r\n                      { this.state.TotalMessages > 0 &&\r\n                        <div className = \"menu-box-number\">{ this.state.TotalMessages }</div> }\r\n                    </Button>\r\n                    <ToggleModal\r\n                        modal = { this.state.modalMessages }\r\n                        toggle = { this.toggleMessages }\r\n                        modalSize = { 'md' }\r\n                        modalHeader = { 'Messages' }\r\n                        modalBody = {\r\n                          <MessagesModalAdminCoach\r\n                              userName = { this.state.ownerName }\r\n                              userLevel = { this.props.userLevel }\r\n                              TotalMessages = { this.state.TotalMessages }\r\n                              toggleTotalMessages = { this.toggleTotalMessages }\r\n                          /> }\r\n                    />\r\n                  </div>\r\n\r\n                </form>\r\n              </div>\r\n              <div className = \"col-md-4\">\r\n                <label htmlFor = \"comment\"><h4>Announcements:</h4></label>\r\n\r\n                <div className = \"menu-box-tab menu-text\" id = \"EditAnns\">\r\n                  { this.state.announcements.sort(\r\n                      function(a, b) {\r\n                        return b.ANNOUNCEMENT_ID\r\n                               - a.ANNOUNCEMENT_ID;\r\n                      }).map((ann, index) => {\r\n                    return <Button className = \"nav-link menu-box-tab menu-text\"\r\n                                   onClick = { this.toggleAnnouncementsData.bind(\r\n                                       this) } id = { index + 100 }\r\n                                   key = { index }\r\n                    ><i style = { {marginRight: 10 + 'px'} }\r\n                        className = \"scnd-font-color fa fa-tasks\"\r\n                    />\r\n                      { ann.Title }{ <p> (</p> }{ ann.TIMESTAMP[0] }\r\n                      { ann.TIMESTAMP[1] }{ ann.TIMESTAMP[2] }{ ann.TIMESTAMP[3] }{ ann.TIMESTAMP[4] }{ ann.TIMESTAMP[5] }\r\n                      { ann.TIMESTAMP[6] }{ ann.TIMESTAMP[7] } { ann.TIMESTAMP[8] }{ ann.TIMESTAMP[9] }{\r\n                        <p\r\n                            id = \"extra\"\r\n                        >)</p> }\r\n                    </Button>;\r\n                  }) }\r\n\r\n                </div>\r\n                <Button id = \"addAnn\"\r\n                        className = { ' edit nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleAnnouncements2 }\r\n                >\r\n                  <i style = { {marginRight: 10 + 'px'} }\r\n                     className = \"scnd-font-color fa fa-tasks\"\r\n                  /> Add Announcement\r\n                </Button>\r\n\r\n                {/*<AnnouncementModal onSubmit = { this.onAnnouncementSubmit }*/ }\r\n                {/*                   toggle = { this.toggleAnnouncements }*/ }\r\n                {/*                   modal = { this.state.modalAnnouncements }*/ }\r\n                {/*                   announcements = { this.state.announcements }*/ }\r\n                {/*                   title = { this.state.modalTitle }*/ }\r\n                {/*                   message = { this.state.modalMessage }*/ }\r\n                {/*                   announcement_id = { this.state.modalAnnId }*/ }\r\n                {/*/>*/ }\r\n                <AnnouncementsPrivateModal\r\n                    onSubmit = { this.onAnnouncementSubmit2 }\r\n                    toggle = { this.toggleAnnouncements2 }\r\n                    modal = { this.state.modalAnnouncements2 }\r\n                    resetOnSubmit = { true }\r\n                />\r\n                <AnnouncementModal onSubmit = { this.onAnnouncementSubmit }\r\n                                   DeleteAnn = { this.onAnnouncementDelete }\r\n                                   toggle = { this.toggleAnnouncements }\r\n                                   modal = { this.state.modalAnnouncements }\r\n                                   announcements = { this.state.announcements }\r\n                                   title = { this.state.modalTitle }\r\n                                   message = { this.state.modalMessage }\r\n                                   announcement_id = { this.state.modalAnnId }\r\n                                   isPrivate = { true }\r\n                />\r\n\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div className = \"row\">\r\n              <div id = \"timeTableHeading\">Create Personal Training Schedule\r\n              </div>\r\n              <div className = \"col-md-8\">\r\n                <Timetable day = { this.state.day }\r\n                           time = { this.state.time }\r\n                           flag = { this.state.flag }\r\n                           coachID = { this.state.Coach_ID }\r\n                           userID = { this.state.User_ID }\r\n                           coachIDret = { this.retrievedCoach }\r\n                />\r\n              </div>\r\n              <div className = \"col-md-4\">\r\n                <Box toogle = { this.handleDayTimeChange }\r\n                     coaches = { this.state.selectedCoaches }\r\n                     coachID = { this.state.coachIDRet }\r\n                     userID = { this.state.User_ID }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default ProfileAdmin;","import React, {Component} from 'react';\r\nimport '../assets/styles/BookDropdown.css'\r\n\r\nclass SelectionPT extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            day: '',\r\n            time: '',\r\n            flag: false,\r\n            Coach_ID: '',\r\n            coaches: []\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onSubmit2 = this.onSubmit2.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.clearOptions = this.clearOptions.bind(this);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value});\r\n    };\r\n\r\n\r\n    onSubmit = () => {\r\n        this.setState({flag: true},\r\n            () => {\r\n                this.props.toogle(this.state.day, this.state.time, this.state.flag, this.state.Coach_ID);\r\n            });\r\n    };\r\n\r\n    onSubmit2 = () => {\r\n        this.setState({flag: false},\r\n            () => {\r\n                this.props.toogle(this.state.day, this.state.time, this.state.flag, this.state.Coach_ID);\r\n            });\r\n    };\r\n\r\n    clearOptions() {\r\n        const timeNode = document.getElementById('TimePers');\r\n        timeNode.value = 0;\r\n        const dayNode = document.getElementById('DayPers');\r\n        dayNode.value = 0;\r\n        const coachNode = document.getElementById('CoachPers');\r\n        coachNode.value = 0;\r\n    }\r\n\r\n    // noinspection JSUnusedLocalSymbols\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.coaches !== this.props.coaches || prevProps.coachesRet !== this.props.coachesRet\r\n            || prevProps.coachID !== this.props.coachID\r\n           || prevProps.userID !== this.props.userID) {\r\n            (async () => {\r\n                if (prevProps.userID !== this.props.userID) {\r\n                    await this.clearOptions();\r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"form\" id=\"backBox\">\r\n                    <h3 id=\"bmiHeading\"><b>C</b>hoose <b>D</b>ay and <b>T</b>ime</h3>\r\n                    <div className=\"row\" id=\"first-row\">\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <label htmlFor=\"DropDays\">Day:</label>\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"day\" id=\"DayPers\"\r\n                                    onChange={this.handleChange} required>\r\n                                <option value=\"0\" hidden>Day Option</option>\r\n                                <option value=\"1\">Monday</option>\r\n                                <option value=\"2\">Tuesday</option>\r\n                                <option value=\"3\">Wednesday</option>\r\n                                <option value=\"4\">Thursday</option>\r\n                                <option value=\"5\">Friday</option>\r\n                                <option value=\"6\">Saturday</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <label htmlFor=\"DropClass\">Time:</label>\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"time\" id=\"TimePers\"\r\n                                    onChange={this.handleChange} required>\r\n                                <option value=\"0\" hidden>Time Option</option>\r\n                                <option value=\"1\">08:00-09:00</option>\r\n                                <option value=\"2\">09:00-10:00</option>\r\n                                <option value=\"3\">10:00-11:00</option>\r\n                                <option value=\"4\">11:00-12:00</option>\r\n                                <option value=\"5\">12:00-13:00</option>\r\n                                <option value=\"6\">13:00-14:00</option>\r\n                                <option value=\"7\">14:00-15:00</option>\r\n                                <option value=\"8\">15:00-16:00</option>\r\n                                <option value=\"9\">16:00-17:00</option>\r\n                                <option value=\"10\">17:00-18:00</option>\r\n                                <option value=\"11\">18:00-19:00</option>\r\n                                <option value=\"12\">19:00-20:00</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row hidden\">\r\n                        <div className=\"col-md-12 RowBlock\">   {/*justify-content-center*/}\r\n                            <label htmlFor=\"DropClass\">Coach:</label>\r\n\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"Coach_ID\" id=\"CoachPers\"\r\n                                    onChange={this.handleChange} required>\r\n                                <option value=\"0\" hidden>Select a Coach</option>\r\n\r\n                                {this.props.coaches.map((res, index) => {\r\n                                    return <option value={res.Coach_ID} key={index}>\r\n                                        {res.CoachName} {res.Surname}\r\n                                    </option>\r\n                                })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <button type=\"button\" className=\"RowButton\" onClick={this.onSubmit}>Submit</button>\r\n                        </div>\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <button type=\"button\" className=\"RowButton\" onClick={this.onSubmit2}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectionPT;","import React, {Component} from 'react';\r\nimport '../assets/styles/PersonalTrainingTimetable.css';\r\nimport {\r\n  insertPT, deletePT, getCoachTraining, getClassSchedule, getPersonalSchedule,\r\n}                         from '../../repository';\r\nimport Swal               from \"sweetalert2\";\r\n\r\nclass PersonalTrainingCreate extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.state = {\r\n      personalTraining     : [],\r\n      classSchedule        : [],\r\n      trainingScheduleCoach: [],\r\n      Coach_ID             : '',\r\n      User_ID              : '',\r\n      coachBooked          : false,\r\n      userBooked           : false,\r\n      incorrectCoach       : false,\r\n      classConflict        : false,\r\n      coachName            : '',\r\n    };\r\n\r\n    this.insertDeleteMethodStates = this.insertDeleteMethodStates.bind(this);\r\n    this.fillTable = this.fillTable.bind(this);\r\n  }\r\n\r\n  // Modals for error messages in case of wrong input.\r\n  toggleModalCoachBooked = () => {\r\n    Swal.fire(\r\n        'The coach has another scheduled client at this time.',\r\n        '',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalClassConflict = () => {\r\n    Swal.fire(\r\n        'The user has a registered class at that time.',\r\n        '',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalUserBooked = () => {\r\n    Swal.fire(\r\n        'The user has another class or personal training at this time.',\r\n        '',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalIncorrectCoach = () => {\r\n    Swal.fire(\r\n        'The coach registered for personal training to this user is ' + this.state.coachName + '.',\r\n        'Please log in and try again...',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  //method responsible for displaying the enrolled classes and personal\r\n  // training according to the user data from the database\r\n  fillTable(refIDs, classesRefIDs, cNames, coaches) {\r\n    let node;\r\n    for (let i = 1; i <= 6; i++) {\r\n      for (let x = 1; x <= 12; x++) {\r\n        let refID = '';\r\n        if (x < 10) {\r\n          refID = i + '.0' + x;\r\n        } else {\r\n          refID = i + '.' + x;\r\n        }\r\n        if (refIDs.includes(refID)) {\r\n          node = document.getElementById(refID);\r\n          node.className = 'blackBackSelected';\r\n        } else {\r\n          if (classesRefIDs.includes(refID)) {\r\n            node = document.getElementById(refID);\r\n            node.className = 'classesBackground';\r\n          } else {\r\n            if (coaches.includes(refID)) {\r\n              node = document.getElementById(refID);\r\n              node.className = 'coachBooked';\r\n            } else {\r\n              node = document.getElementById(refID);\r\n              node.className = '';\r\n              node.textContent = '';\r\n            }\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  insertDeleteMethodStates() {\r\n    this.setState({\r\n      // refIDs: x,\r\n      User_ID : this.props.userID,\r\n      Coach_ID: this.props.coachID,\r\n      time    : this.props.time,\r\n      day     : this.props.day,\r\n    }, () => {\r\n      if (this.props.flag === true) {\r\n        insertPT(this.state).then();\r\n      } else {\r\n        deletePT(this.state).then();\r\n      }\r\n    });\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.day !== this.props.day || prevProps.time !== this.props.time\r\n        || prevProps.flag !== this.props.flag\r\n        || prevProps.coachID !== this.props.coachID || prevProps.userID\r\n        !== this.props.userID) {\r\n      console.clear();\r\n      (async() => {\r\n        let refID = '';\r\n\r\n        // ************************* Clearing the arrays\r\n        // ***************************\r\n        let personalTraining = [];\r\n        let classSchedule = [];\r\n\r\n        if (this.props.userID !== '') {\r\n          await getPersonalSchedule(this.props.userID).then(response => {\r\n            personalTraining = response;\r\n          });\r\n          await getClassSchedule(this.props.userID).then(response => {\r\n            classSchedule = response;\r\n\r\n          });\r\n        }\r\n\r\n        // ************************* Filling the arrays\r\n        // *************************** ------------------------- Class Schedule\r\n        // -------------------------------\r\n        let ret = [...classSchedule];\r\n        let classRefIDs = [];\r\n        let cNames = [];\r\n        // for loop for traversing fetched data for ClassSchedule and filling\r\n        // tables accordingly\r\n        ret.forEach((item) => {\r\n              if (item.TimeCode < 10) {\r\n                refID = item.DayCode + '.0' + item.TimeCode;\r\n              } else {\r\n                refID = item.DayCode + '.' + item.TimeCode;\r\n              }\r\n              if (!classRefIDs.includes(refID)) {\r\n                classRefIDs.push(refID);\r\n                cNames.push(item.Name);\r\n              }\r\n\r\n            },\r\n        );\r\n\r\n        // ------------------------ Personal Training --------------------------\r\n        ret = [...personalTraining];\r\n        refID = '';\r\n        let coachID = '';\r\n        let refIDs = [];\r\n        let coachName = '';\r\n        ret.forEach((item) => {\r\n              if (item.Time < 10) {\r\n                refID = item.Day + '.0' + item.Time;\r\n              } else {\r\n                refID = item.Day + '.' + item.Time;\r\n              }\r\n              // Create a new array based on current state:\r\n              coachID = item.Coach_ID;\r\n              coachName = item.CoachName + ' ' + item.Surname;\r\n              if (!refIDs.includes(refID)) {\r\n                refIDs.push(refID);\r\n              }\r\n            },\r\n        );\r\n\r\n        this.setState({coachName: coachName});\r\n        // this.setState({Coach_ID: coachID});\r\n        this.props.coachIDret(coachID);\r\n\r\n\r\n        // -------------- Filling the CoachRefIDs ----------------------------\r\n        // This will be used to prevent coach from having two personal training\r\n        // sessions at the same time\r\n        let trainingScheduleCoach = [];\r\n        // trainingScheduleCoach =  await this.fetchingCoachSchedule(coachID);\r\n\r\n        await getCoachTraining(coachID).then(response => {\r\n          trainingScheduleCoach = response;\r\n        });\r\n\r\n        let retCoach = [...trainingScheduleCoach];\r\n\r\n        refID = '';\r\n        let refIDsCoach = [];\r\n\r\n        retCoach.forEach((coach) => {\r\n              if (coach.Time < 10) {\r\n                refID = coach.Day + '.0' + coach.Time;\r\n              } else {\r\n                refID = coach.Day + '.' + coach.Time;\r\n              }\r\n              // Create a new array based on current state:\r\n              if (!refIDsCoach.includes(refID)) {\r\n                refIDsCoach.push(refID);\r\n              }\r\n            },\r\n        );\r\n\r\n        // ************ Printing the filled tables on the site **************\r\n\r\n        let time = this.props.time;\r\n        let day = this.props.day;\r\n\r\n        // ********************** Getting day and time from box selection\r\n        // *********************\r\n        if (this.props.time < 10) {\r\n          refID = day + '.0' + time;\r\n        } else {\r\n          refID = day + '.' + time;\r\n        }\r\n        if (prevProps.userID !== this.props.userID || (prevProps.day\r\n                                                       === this.props.day\r\n                                                       && prevProps.time\r\n                                                       === this.props.time\r\n                                                       && prevProps.coachID\r\n                                                       === this.props.coachID\r\n                                                       && prevProps.flag\r\n                                                       === this.props.flag)) {\r\n          refID = '';\r\n        }\r\n\r\n        if (!refIDs.includes(refID) && !refIDsCoach.includes(refID)\r\n            && this.props.flag === true && String(this.props.coachID) !== ''\r\n            && (String(coachID) === String(this.props.coachID) || String(\r\n                coachID) === '') && refID !== '' && !classRefIDs.includes(\r\n                refID)) {\r\n          refIDs.push(refID);\r\n          refIDsCoach.push(coachID);\r\n          await this.insertDeleteMethodStates(String(coachID),\r\n              String(this.props.coachID));\r\n        } else {\r\n          let pos = refIDs.indexOf(refID);\r\n          let posCoach = refIDsCoach.indexOf(refID);\r\n          if (refIDs.includes(refID) && this.props.flag === false && String(\r\n              this.props.coachID) !== ''\r\n              && (String(coachID) === String(this.props.coachID) || String(\r\n                  coachID) === '') && refID !== '') {\r\n\r\n            refIDs.splice(pos, 1);\r\n            refIDsCoach.splice(posCoach, 1);\r\n            await this.insertDeleteMethodStates(String(coachID),\r\n                String(this.props.coachID));\r\n          } else {\r\n\r\n            if ((refIDs.includes(refID) || classRefIDs.includes(refID))\r\n                && this.props.flag === true) {\r\n              this.toggleModalUserBooked();\r\n              coachID = '';\r\n            }\r\n\r\n            if (classRefIDs.includes(refID) && this.props.flag === false) {\r\n              this.toggleModalClassConflict();\r\n              coachID = '';\r\n            }\r\n            if (refIDsCoach.includes(refID) && !refIDs.includes(refID)\r\n                && this.props.flag === true && String(coachID)\r\n                === this.props.coachID) {\r\n              this.toggleModalCoachBooked();\r\n            }\r\n\r\n            if (String(coachID) !== String(this.props.coachID) && String(\r\n                coachID) !== '' && prevProps.userID === this.props.userID) { //\r\n              this.toggleModalIncorrectCoach();\r\n            }\r\n          }\r\n\r\n        }\r\n        await this.fillTable(refIDs, classRefIDs, cNames, refIDsCoach);\r\n\r\n      })();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = { 'container' }>\r\n          <div className = \"row\">\r\n            <div className = \"timetable\">\r\n              <div className = \"week-names\">\r\n                <div>monday</div>\r\n                <div>tuesday</div>\r\n                <div>w/day</div>\r\n                <div>thursday</div>\r\n                <div>friday</div>\r\n                <div>saturday</div>\r\n                <div className = \"weekend\">sunday</div>\r\n              </div>\r\n              <div className = \"time-interval\">\r\n                <div>8:00 - 09:00</div>\r\n                <div>09:00 - 10:00</div>\r\n                <div>10:00 - 11:00</div>\r\n                <div>11:00 - 12:00</div>\r\n                <div>12:00 - 13:00</div>\r\n                <div>13:00 - 14:00</div>\r\n                <div>14:00 - 15:00</div>\r\n                <div>15:00 - 16:00</div>\r\n                <div>16:00 - 17:00</div>\r\n                <div>17:00 - 18:00</div>\r\n                <div>18:00 - 19:00</div>\r\n                <div>19:00 - 20:00</div>\r\n              </div>\r\n              <div className = \"content\">\r\n                { [...Array(6).keys()].map(x => (x + 1.01).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.02).toFixed(2))\r\n                    .map((x, index) =>\r\n                        // <div className={classes.join(' ')} key={index}\r\n                        // id={x}/>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.03).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.04).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.05).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.06).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.07).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.08).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.09).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.10).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.11).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.12).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*<div> <span><small>&emsp;*The personal training sessions registered are represented by: </small></span><p className='smallCellBox'></p></div>*/ }\r\n          <br />\r\n          <div className = { 'row' }>\r\n            <div className = 'col-sm-12 col-md-9 legendsBoxPT'>\r\n              <div className = \"sameRow\">\r\n                <div className = 'smallCellBox' />\r\n                {/*<div className='smallCellBox'></div>*/ }\r\n                <small>&emsp;User Booked</small>\r\n                <div className = 'coachBookedSmall' />\r\n                <small>&emsp;Coach Booked</small>\r\n                <div className = 'classBookedSmall' />\r\n                <small>&emsp;Class Enrolled</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PersonalTrainingCreate;","import React, {Component} from 'react';\r\nimport './assets/styles/Spinner.css';\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    return (\r\n        <div id = \"wrapper\"\r\n             style = { this.props.style || {\r\n               'height'         : '100vh',\r\n               'backgroundColor': '#252830',\r\n             } }\r\n        >\r\n          <div className = { !this.props.secondaryStyle\r\n              ? 'profile-main-loader'\r\n              : 'profile-secondary-loader' }\r\n          >\r\n            <div className = \"loader\">\r\n              <svg className = \"circular-loader\"\r\n                   viewBox = \"25 25 50 50\"\r\n              >\r\n                <circle className = \"loader-path\"\r\n                        cx = \"50\"\r\n                        cy = \"50\"\r\n                        r = \"20\"\r\n                        fill = \"none\"\r\n                        stroke = \"#D90429\"\r\n                        strokeWidth = \"2\"\r\n                />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spinner;","import React                                                  from 'react';\r\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\n\r\nexport default class ToggleModal extends React.Component {\r\n    render() {\r\n        let Comp = this.props.modalBody;\r\n        // noinspection JSUnresolvedVariable\r\n      return (\r\n            <div>\r\n                <Modal isOpen = { this.props.modal } toggle = { this.props.toggle }\r\n                       size = { this.props.modalSize || 'lg' }\r\n                       aria-labelledby = \"contained-modal-title-vcenter\"\r\n                       centered\r\n                >\r\n                    {!(navigator.userAgent.match(/Android/i))     &&\r\n                    <ModalHeader toggle={this.props.toggle}>{this.props.modalHeader}</ModalHeader>\r\n                    }\r\n                    <ModalBody>\r\n                        { React.cloneElement(Comp, {\r\n                            ...this.props\r\n                        }) }\r\n                    </ModalBody>\r\n                    {!(navigator.userAgent.match(/Android/i)) &&\r\n                    <ModalFooter>\r\n                        <Button onClick={this.props.toggle}>{this.props.btnCancel || 'Cancel'}</Button>\r\n                    </ModalFooter>\r\n                    }\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React                  from 'react';\r\nimport {ValidatorForm}        from 'react-material-ui-form-validator';\r\nimport TextField              from '@material-ui/core/TextField';\r\nimport Radio                  from '@material-ui/core/Radio';\r\nimport RadioGroup             from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel       from '@material-ui/core/FormControlLabel';\r\nimport FormControl            from '@material-ui/core/FormControl';\r\nimport Recaptcha              from 'react-recaptcha';\r\nimport Swal                   from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport '../assets/styles/SignInUp.css';\r\nimport {sameUsername, signUp} from '../../repository';\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formData  : {\r\n        fname           : '',\r\n        lname           : '',\r\n        username        : '',\r\n        email           : '',\r\n        password        : '',\r\n        confirm_password: '',\r\n        bdate           : '',\r\n        gender          : '',\r\n        age             : '',\r\n      },\r\n      isVerified: false,\r\n      submitted : false,\r\n      countTotal: 0,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.rotate = this.rotate.bind(this);\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    this.calcDate = this.calcDate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    // noinspection JSUnresolvedFunction\r\n    ValidatorForm.addValidationRule('isPasswordMatch', value => {\r\n      const {formData} = this.state;\r\n      return value === formData.password;\r\n    });\r\n  }\r\n\r\n  handleChange = event => {\r\n    const {formData} = this.state;\r\n    formData[event.target.name] = event.target.value;\r\n    this.setState({formData});\r\n\r\n    if (event.target.name === 'bdate') {\r\n      this.calcDate(event);\r\n    }\r\n\r\n    if (\r\n        event.target.name === 'password' &&\r\n        !event.target.value.match(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/)\r\n    ) {\r\n      event.target.setCustomValidity(\r\n          'Enter a combination of at least 8 numbers, lower and uppercase letters.',\r\n      );\r\n    } else if (\r\n        event.target.name === 'confirm_password' &&\r\n        event.target.value !== this.state.formData.password\r\n    ) {\r\n      event.target.setCustomValidity('Passwords don\\'t match.');\r\n    } else {\r\n      event.target.setCustomValidity('');\r\n    }\r\n  };\r\n\r\n  verifyCallback = response => {\r\n    if (response) {\r\n      this.setState({isVerified: true});\r\n    }\r\n  };\r\n\r\n  rotate = () => {\r\n    this.setState({\r\n      formData  : {\r\n        fname           : '',\r\n        lname           : '',\r\n        username        : '',\r\n        email           : '',\r\n        password        : '',\r\n        confirm_password: '',\r\n        bdate           : '',\r\n        gender          : '',\r\n      },\r\n      isVerified: false,\r\n      submitted : false,\r\n    });\r\n    this.props.rotate();\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(this.props.testSubmit) {\r\n      this.props.testSubmit('Testing');\r\n      return;\r\n    }\r\n    if (\r\n        !this.state.formData.fname ||\r\n        !this.state.formData.lname ||\r\n        !this.state.formData.username ||\r\n        !this.state.formData.bdate ||\r\n        !this.state.formData.gender ||\r\n        !this.state.formData.email.match(\r\n            /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\r\n        ) ||\r\n        !this.state.formData.password.match(\r\n            /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/,\r\n        ) ||\r\n        this.state.formData.confirm_password !== this.state.formData.password\r\n    ) {\r\n      return;\r\n    }\r\n    if (!this.state.isVerified) {\r\n      Swal.fire(\r\n          'Please verify that you are not a robot 🤖!!!',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return;\r\n    }\r\n    // Create output query\r\n    const crypto = require('crypto');\r\n    const newToken = crypto.randomBytes(10).toString('hex');\r\n\r\n    const Crypto = require('cryptr');\r\n    const cryptr = new Crypto('ffn_private_key_!!!!');\r\n\r\n    const encryptedString = cryptr.encrypt(this.state.formData.password);\r\n\r\n    const dataSign = {\r\n      username: this.state.formData.username,\r\n      password: encryptedString,\r\n      fname   : this.state.formData.fname,\r\n      lname   : this.state.formData.lname,\r\n      email   : this.state.formData.email,\r\n      age     : this.state.formData.age,\r\n      gender  : this.state.formData.gender === 'male' ? 1 : 2,\r\n      level   : this.state.formData.level,\r\n      bDate   : this.state.formData.bdate,\r\n      verify  : 0,\r\n      hash    : newToken,\r\n    };\r\n    sameUsername(this.state.formData.username)\r\n        .then(response => {\r\n          this.setState(\r\n              {countTotal: response.countTotal},\r\n              () => {\r\n                if (this.state.countTotal === 1) {\r\n                  Swal.fire(\r\n                      'Someone else have this username!!!',\r\n                      '',\r\n                      'error',\r\n                  ).then(() => {\r\n                  }).catch(() => Swal.fire(\r\n                      'Something go wrong!!',\r\n                      'Please try again...',\r\n                      'error',\r\n                  ));\r\n                } else {\r\n                  signUp(dataSign)\r\n                      .then(() => {\r\n                        Swal.fire(\r\n                            'Successful sign up',\r\n                            'Please proceed to your email, so you can verify your account.',\r\n                            'success',\r\n                        ).then(() => {\r\n                          // Reset\r\n                          this.setState({\r\n                            formData  : {\r\n                              fname           : '',\r\n                              lname           : '',\r\n                              username        : '',\r\n                              email           : '',\r\n                              password        : '',\r\n                              confirm_password: '',\r\n                              bdate           : '',\r\n                              gender          : '',\r\n                            },\r\n                            isVerified: false,\r\n                            submitted : false,\r\n                          }, () => this.props.toggleModal());\r\n                        });\r\n                      }).catch(() => Swal.fire(\r\n                      'Something went wrong',\r\n                      'Please try again...',\r\n                      'error',\r\n                  ));\r\n                }\r\n              },\r\n          );\r\n        });\r\n  };\r\n\r\n  calcDate = (dDate) => {\r\n    let thenD = dDate.target.value;\r\n    let str = thenD.split('-');\r\n    let now = new Date();\r\n    let ageDif = now.getFullYear() - str[0];\r\n\r\n    const {formData} = this.state;\r\n    formData.age = ageDif;\r\n    this.setState({formData});\r\n  };\r\n\r\n  render() {\r\n    // noinspection JSUnresolvedVariable\r\n    return (\r\n        <form id = \"signup\"\r\n              onSubmit = { this.handleSubmit }\r\n              autoComplete = \"off\"\r\n        >\r\n          <h1>Sign up</h1>\r\n          <input\r\n              placeholder = \"First Name\"\r\n              name = \"fname\"\r\n              type = \"text\"\r\n              value = { this.state.formData.fname }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Last Name\"\r\n              name = \"lname\"\r\n              type = \"text\"\r\n              value = { this.state.formData.lname }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Email Address\"\r\n              name = \"email\"\r\n              type = \"email\"\r\n              value = { this.state.formData.email }\r\n              onChange = { this.handleChange }\r\n              pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n              required\r\n          />\r\n          <input\r\n              placeholder = \"Username\"\r\n              name = \"username\"\r\n              type = \"text\"\r\n              value = { this.state.formData.username }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Password\"\r\n              name = \"password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.password }\r\n              required\r\n              pattern = \"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Confirm Password\"\r\n              name = \"confirm_password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.confirm_password }\r\n              required\r\n              pattern = \"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <TextField\r\n              placeholder = \"Birthday\"\r\n              name = \"bdate\"\r\n              type = \"date\"\r\n              value = { this.state.formData.bday }\r\n              InputLabelProps = { {\r\n                shrink: true,\r\n              } }\r\n              onChange = { this.handleChange }\r\n              required\r\n          />\r\n          <br />\r\n          <FormControl component = \"fieldset\">\r\n            {/* <FormLabel component=\"legend\">Gender</FormLabel> */ }\r\n            <RadioGroup\r\n                aria-label = \"gender\"\r\n                name = \"gender\"\r\n                value = { this.state.formData.gender }\r\n                onChange = { this.handleChange }\r\n                className = { 'gender-radio' }\r\n            >\r\n              <FormControlLabel\r\n                  value = \"male\"\r\n                  control = { <Radio required /> }\r\n                  label = \"Male\"\r\n              />\r\n              <FormControlLabel\r\n                  value = \"female\"\r\n                  control = { <Radio required /> }\r\n                  label = \"Female\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Recaptcha\r\n              elementID = { 'g-recaptcha' }\r\n              sitekey = \"6Lf0od8UAAAAAFoog9iFIpVd8rcPxBwHpUKpnCua\"\r\n              size = \"normal\"\r\n              render = \"explicit\"\r\n              theme = \"dark\"\r\n              verifyCallback = { this.verifyCallback }\r\n          />\r\n          <button data-testid={'button'}>Sign up</button>\r\n          <br />\r\n          <span className = \"login rotateForms\" onClick = { this.rotate }>\r\n            <i className = \"fa fa-sign-in\" />\r\n            Sign In\r\n          </span>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React   from 'react';\r\nimport '../assets/styles/SignInUp.css';\r\nimport Swal    from 'sweetalert2';\r\nimport history from '../../history';\r\nimport {isVerified, logIn, logOut} from '../../repository';\r\n\r\nclass Signup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formData: {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      Verify    :0,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.rotate = this.rotate.bind(this);\r\n  }\r\n\r\n  handleChange = event => {\r\n    const {formData} = this.state;\r\n    formData[event.target.name] = event.target.value;\r\n    this.setState({formData});\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n      if(this.props.testSubmit) {\r\n          this.props.testSubmit('Testing');\r\n          return;\r\n      }\r\n\r\n    // const crypto = require('crypto');\r\n    // noinspection JSUnusedLocalSymbols\r\n    // const newToken = crypto.randomBytes(10).toString('hex');\r\n\r\n    const Crypto = require('cryptr');\r\n    const cryptr = new Crypto('ffn_private_key_!!!!');\r\n\r\n    const encryptedString = cryptr.encrypt(this.state.formData.password);\r\n\r\n    const dataLogIn = {\r\n      username: this.state.formData.username,\r\n      password: encryptedString,\r\n    };\r\n\r\n\r\n    // Call for query\r\n    logIn(dataLogIn)\r\n        .then(data => {\r\n          // Error\r\n          if (!data.level) {\r\n            throw Error;\r\n          }\r\n\r\n          // Success\r\n          this.setState({\r\n            formData: {\r\n              username: '',\r\n              password: '',\r\n            },\r\n          }, () => {\r\n           if(data.level==='user'){\r\n                isVerified().then(d => {\r\n                  this.setState({Verify : d.Verify.data[0]},\r\n                      () => {\r\n                          console.log(this.state.Verify);\r\n                          if(this.state.Verify === 1){\r\n                            this.props.toggleModal();\r\n                            this.props.setUserLevel('user');\r\n                            history.push('/user/profile');\r\n                          }else{\r\n                            Swal.fire(\r\n                                'This Account is not Verify yet!!',\r\n                                'Please go to verify!!',\r\n                                'warning',\r\n                            ).then(() => {logOut();});\r\n                          }\r\n                      });\r\n                });\r\n            }else{\r\n              this.props.toggleModal();\r\n              this.props.setUserLevel(data.level);\r\n             history.push('/user/profile');\r\n            }\r\n          });\r\n        }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ));\r\n  };\r\n\r\n  rotate = () => {\r\n    this.setState({\r\n      formData : {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      submitted: false,\r\n    });\r\n    this.props.rotate();\r\n  };\r\n\r\n  forgotPassword = () => {\r\n    history.push('/forgotPassword');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <form id = \"login\"\r\n              onSubmit = { this.handleSubmit }\r\n              autoComplete = \"off\"\r\n        >\r\n          <h1>Sign in</h1>\r\n          <input\r\n              placeholder = \"Username\"\r\n              name = \"username\"\r\n              type = \"text\"\r\n              value = { this.state.formData.username }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Password\"\r\n              name = \"password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.password }\r\n              required\r\n              // pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <p className = { 'forgot-passsword' }\r\n             onClick = { this.forgotPassword }\r\n          >Forgot your password?</p>\r\n          <button data-testid={'button'}>Sign in</button>\r\n          <br />\r\n          <span className = \"login rotateForms\" onClick = { this.rotate }>\r\n            <i className = \"fa fa-user-plus\" />\r\n            Sign up\r\n          </span>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React  from 'react';\r\nimport $      from 'jquery';\r\nimport Modal  from 'react-bootstrap/Modal';\r\nimport Signup from './SignUp';\r\nimport LogIn  from './LogIn';\r\nimport '../assets/styles/SignInUpModal.css';\r\n\r\nclass SignInUpModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showModal: false,\r\n    };\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({showModal: !this.state.showModal});\r\n  };\r\n\r\n  rotate = () => {\r\n    // noinspection JSJQueryEfficiency\r\n    if ($('.flipper').css('transform') === 'none') {\r\n      $('.flipper').css('transform', 'rotateY(180deg)');\r\n    } else {\r\n      $('.flipper').css('transform', '');\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <button className = { 'nav-link login btn btn-secondary' }\r\n                  onClick = { this.toggleModal }\r\n          >\r\n            Login/Register\r\n          </button>\r\n\r\n          <Modal show = { this.state.showModal }\r\n                 onHide = { this.toggleModal }\r\n                 className = { 'sign-in-up-modal' }\r\n                 size = { 'md' }\r\n                 centered\r\n          >\r\n            {/*<Modal.Header closeButton>*/ }\r\n            {/*  <Modal.Title>Modal heading</Modal.Title>*/ }\r\n            {/*</Modal.Header>*/ }\r\n            <Modal.Body>\r\n              <div className = \"flip-container\">\r\n                <div className = \"flipper\">\r\n                  <div className = \"front\">\r\n                    {/* <!-- front content --> */ }\r\n                    <div className = \"card\">\r\n                      <LogIn rotate = { this.rotate }\r\n                             toggleModal = { this.toggleModal }\r\n                             setUserLevel = { this.props.setUserLevel }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className = \"back\">\r\n                    {/* <!-- back content --> */ }\r\n                    <div className = \"card\">\r\n                      <Signup rotate = { this.rotate }\r\n                              toggleModal = { this.toggleModal }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n            {/*<Modal.Footer>*/ }\r\n            {/*  <Button variant = \"secondary\" onClick = { this.toggleModal }>*/ }\r\n            {/*    Close*/ }\r\n            {/*  </Button>*/ }\r\n            {/*  <Button variant = \"primary\" onClick = { this.toggleModal }>*/ }\r\n            {/*    Save Changes*/ }\r\n            {/*  </Button>*/ }\r\n            {/*</Modal.Footer>*/ }\r\n          </Modal>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignInUpModal;\r\n","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n// import ToggleModal                 from './ToggleModal';\r\n// import LoginModal                  from './LoginModal';\r\n// import { Button }                  from 'reactstrap';\r\nimport {isAuthenticated, logOut} from '../../repository';\r\nimport logo_img from '../assets/img/logos/ffLogoTransparent.png';\r\nimport history from '../../history';\r\nimport SignInUpModal from './SignInUpModal';\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  };\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    localStorage.setItem('path', history.location.pathname);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  onLogOut = () => {\r\n    this.setState({userLevel: undefined, modal: false});\r\n    logOut();\r\n    // window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        // Navigation\r\n        <nav className = \"navbar navbar-expand-lg navbar-dark fixed-top\"\r\n             id = \"mainNav\"\r\n        >\r\n          <div className = \"container-fluid mx-auto\">\r\n            <NavLink className = \"navbar-brand\" to = \"/\" exact = { true }>\r\n              <span className = \"gym-name\">Fitness Factory Nicosia&nbsp;</span>\r\n              <img id = { 'logo' }\r\n                   src = { logo_img }\r\n                   alt = 'Logo'\r\n                   height = { 64 }\r\n                   width = { 64 }\r\n              />\r\n            </NavLink>\r\n            <button className = \"navbar-toggler navbar-toggler-right\"\r\n                    type = \"button\"\r\n                    data-toggle = \"collapse\"\r\n                    data-target = \"#navbarResponsive\"\r\n                    aria-controls = \"navbarResponsive\"\r\n                    aria-expanded = \"false\"\r\n                    aria-label = \"Toggle navigation\"\r\n            >\r\n              Menu&nbsp;<i className = \"fa fa-bars\" />\r\n            </button>\r\n            <div className = \"collapse navbar-collapse\" id = \"navbarResponsive\">\r\n              <ul className = \"navbar-nav text-uppercase ml-auto\">\r\n                <li className = \"nav-item\">\r\n                  <NavLink className = \"nav-link\"\r\n                           to = \"/\"\r\n                           exact = { true }\r\n                  >Home</NavLink>\r\n                </li>\r\n                <li className = \"nav-item\">\r\n                  <NavLink className = \"nav-link\"\r\n                           to = \"/classes\"\r\n                  >Classes</NavLink>\r\n                </li>\r\n                { isAuthenticated() &&\r\n                  <>\r\n                    { this.props.userLevel === 'user' &&\r\n                      <li className = \"nav-item\">\r\n                        <NavLink className = \"nav-link\"\r\n                                 to = \"/user/profile\"\r\n                        >Profile</NavLink>\r\n                      </li> }\r\n\r\n                    { this.props.userLevel === 'coach' &&\r\n                      <li className = \"nav-item\">\r\n                        <NavLink className = \"nav-link\"\r\n                                 to = \"/coach/profile\"\r\n                        >Profile</NavLink>\r\n                      </li> }\r\n\r\n                    { this.props.userLevel === 'admin' &&\r\n                      <li className = \"nav-item\">\r\n                        <NavLink className = \"nav-link\"\r\n                                 to = \"/admin/profile\"\r\n                        >Profile</NavLink>\r\n                      </li> }\r\n\r\n                    { this.props.userLevel === 'admin' &&\r\n                      <li className = \"nav-item\">\r\n                        <NavLink className = \"nav-link\"\r\n                                 to = \"/admin/dashboard\"\r\n                        >Dashboard</NavLink>\r\n                      </li> }\r\n                  </>\r\n                }\r\n                <li className = \"nav-item\">\r\n                  <NavLink className = \"nav-link\" to = \"/about\">About\r\n                                                                Us</NavLink>\r\n                </li>\r\n                {\r\n                  (\r\n                      isAuthenticated()) ?\r\n                      <li className = \"nav-item\">\r\n                        <NavLink to = \"/\"\r\n                                 className = { 'nav-link logout btn btn-secondary' }\r\n                                 onClick = { this.onLogOut }\r\n                        >\r\n                          Logout <i className = \"fas fa-sign-out-alt\" />\r\n                        </NavLink>\r\n                      </li>\r\n                      :\r\n                      <li className = \"nav-item\">\r\n                        {/*<Button className = { 'nav-link login btn btn-secondary' }*/ }\r\n                        {/*        onClick = { this.toggle }*/ }\r\n                        {/*>*/ }\r\n                        {/*    Login/Register <i className = \"fas fa-sign-in-alt\" />*/ }\r\n                        {/*</Button>*/ }\r\n                        {/*<ToggleModal*/ }\r\n                        {/*    modal = { this.state.modal }*/ }\r\n                        {/*    toggle = { this.toggle }*/ }\r\n                        {/*    modalSize = { 'md' }*/ }\r\n                        {/*    modalHeader = { 'Login Form' }*/ }\r\n                        {/*    modalBody = { <LoginModal /> }*/ }\r\n                        {/*    setUserLevel = { this.props.setUserLevel }*/ }\r\n                        {/*/>*/ }\r\n                        <SignInUpModal setUserLevel = { this.props.setUserLevel } />\r\n                      </li>\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;","import React, {Component} from 'react';\r\nimport {NavLink}          from 'react-router-dom';\r\nimport '../assets/styles/homePage.css';\r\nimport * as Icons         from '@fortawesome/fontawesome-free-solid';\r\nimport {FontAwesomeIcon}  from '@fortawesome/react-fontawesome';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    // noinspection HtmlUnknownTarget\r\n    return (\r\n        // Footer\r\n        <footer>\r\n          <div id = \"footer\" className = \"information container-fluid\">\r\n            <div className = \"row justify-content-center\">\r\n              <div id = \"socials-footer\"\r\n                   className = \"col-lg-3 col-md-12 col-sm-12\"\r\n              >\r\n                <h2>Get Social</h2>\r\n                <p data-testid = { 'text' }>{ this.props.stylesheetData['social']['text'] }</p>\r\n                <br />\r\n                <p>\r\n                  <a data-testid = { 'facebook' }\r\n                     href = { this.props.stylesheetData['social']['facebook'] }\r\n                  >\r\n                    <i className = \"fa fa-facebook footer-icon\" />\r\n                  </a>\r\n                  <a data-testid = { 'instagram' }\r\n                     href = { this.props.stylesheetData['social']['instagram'] }\r\n                  >\r\n                    <i className = \"fa fa-instagram footer-icon footer-icon-centered\" />\r\n                  </a>\r\n                </p>\r\n              </div>\r\n              <div id = \"about-footer\"\r\n                   className = \"col-lg-3 col-md-12 col-sm-12\"\r\n              >\r\n                <h2>About Us</h2>\r\n                <p>\r\n                  <i className = \"fa fa-map-marker footer-icon\" /> Address:\r\n                  <span data-testid = { 'address' }\r\n                        className = \"about-footer-text\"\r\n                  > { this.props.stylesheetData['about-us']['address'] }</span>\r\n                </p>\r\n                <br />\r\n                <p>\r\n                  <i className = \"fa fa-envelope footer-icon\" /> Questions?\r\n                  <span data-testid = { 'email' }\r\n                        className = \"about-footer-text\"\r\n                  > { this.props.stylesheetData['about-us']['email'] }</span>\r\n                </p>\r\n              </div>\r\n              { !this.props.testLoading &&\r\n                <div id = \"help-footer\"\r\n                     className = \"col-lg-3 col-md-12 col-sm-12\"\r\n                >\r\n                  <h2>Get Help</h2>\r\n                  <div>\r\n                    <p><i className = \"fa fa-home footer-icon\" /> <NavLink\r\n                        className = \"Nav_link\"\r\n                        to = \"/\"\r\n                    >Home Page</NavLink></p>\r\n                  </div>\r\n                  <div>\r\n                    <p><i className = \"fa fa-phone footer-icon\" /> <NavLink\r\n                        className = \"Nav_link\"\r\n                        to = \"/about\"\r\n                    >Contact Us</NavLink></p>\r\n                  </div>\r\n                  <div>\r\n                    <p><i className = \"fa fa-info footer-icon\" /> <NavLink\r\n                        className = \"Nav_link\"\r\n                        to = \"/classes\"\r\n                    >See the classes</NavLink></p>\r\n                  </div>\r\n                </div>\r\n              }\r\n              <div id = \"about-footer\"\r\n                   className = \"col-lg-3 col-md-12 col-sm-12\"\r\n              >\r\n                <h2>About The Club</h2>\r\n                { this.props.stylesheetData['about-club'].map((v, i) => {\r\n                  return (\r\n                      <div data-testid = { 'about-club' }\r\n                           key = { i }\r\n                           style = { {padding: 0} }\r\n                      >\r\n                        <p>{ v }</p>\r\n                      </div>\r\n                  );\r\n                }) }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div id = \"copyrights\" className = \"container-fluid\">\r\n            <div className = \"row justify-content-center\">\r\n              <p><FontAwesomeIcon icon = { Icons.faCopyright }\r\n                                  size = \"sm\"\r\n              /> Copyrights Fitness Factory Nicosia</p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport $ from 'jquery';\r\nimport Navigation from './common/Navigation';\r\nimport Footer from './common/Footer';\r\n\r\nclass PageWrapper extends Component {\r\n\r\n    componentDidMount() {\r\n        this.handleClick();\r\n    }\r\n\r\n    handleClick = () => {\r\n        // Scroll to top\r\n        $('#to-top').on('click', function () {\r\n            let hash = $(this).data('hash');\r\n            if (hash) {\r\n                $('html, body').animate({\r\n                    scrollTop: $(document.getElementById(hash)).offset().top,\r\n                }, 800, function () {\r\n                    window.location.hash = hash;\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        // noinspection JSCheckFunctionSignatures\r\n        const childrenWithProps = React.Children.map(this.props.children, child =>\r\n            React.cloneElement(child, {userLevel: this.props.userLevel}),\r\n        );\r\n        return (\r\n\r\n            <div id=\"top-of-page\">\r\n                {!(navigator.userAgent.match(/Android/i)) &&\r\n                <Navigation userLevel={this.props.userLevel}\r\n                            setUserLevel={this.props.setUserLevel}\r\n                />\r\n                }\r\n\r\n                {childrenWithProps}\r\n\r\n                {!(navigator.userAgent.match(/Android/i)) &&\r\n                <Footer stylesheetData={this.props.stylesheetData['Footer']}/>\r\n                }\r\n\r\n                {/* Back To Top Button */}\r\n                <button data-hash=\"top-of-page\"\r\n                        id=\"to-top\"\r\n                        className=\"button\"\r\n                        type=\"button\"\r\n                >Top\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageWrapper;","import React, {Component} from 'react';\r\nimport {Carousel}         from 'react-bootstrap';\r\nimport {validURL}         from '../../repository';\r\n// Images\r\n\r\nclass ControlledCarousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      index    : 0,\r\n      direction: null,\r\n    };\r\n\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n  }\r\n\r\n  handleSelect = (selectedIndex, e) => {\r\n    this.setState({index: selectedIndex, direction: e.direction});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <Carousel activeIndex = { this.state.index }\r\n                  direction = { this.state.direction }\r\n                  onSelect= { (i,e)=>this.handleSelect(i,e) }\r\n                  pauseOnHover = { true }\r\n                  touch = { true }\r\n        >\r\n          { this.props.stylesheetData['Home']['carousel'].map((item, index) => {\r\n            return (\r\n                <Carousel.Item key = { index }>\r\n                  <img\r\n                      className = \"d-block img-responsive fit-image\"\r\n                      src = { validURL(item.src) ? item.src : process.env.PUBLIC_URL + item.src }\r\n                      alt = { item.label }\r\n                  />\r\n                  <Carousel.Caption>\r\n                    <h3>{ item.label }</h3>\r\n                    <p>{ item.text }</p>\r\n                  </Carousel.Caption>\r\n                </Carousel.Item>\r\n            );\r\n          }) }\r\n        </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\nclass CarouselHp extends Component {\r\n  render() {\r\n    return (\r\n        <ControlledCarousel stylesheetData = { this.props.stylesheetData } />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CarouselHp;","import React, {Component}    from 'react';\r\nimport '../assets/styles/homePage.css';\r\nimport * as Icons            from '@fortawesome/fontawesome-free-solid';\r\nimport {FontAwesomeIcon}     from '@fortawesome/react-fontawesome';\r\nimport {faMedal, faWeightHanging} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ServiceGoal extends Component {\r\n  render() {\r\n    return (\r\n        <div className = { 'col-xl-3 col-lg-6 col-md-6' }>\r\n          <div className = { 'service-box' }>\r\n            <div className = { 'service-box-icon' }>\r\n              {/*<FontAwesome*/ }\r\n              {/*    name={this.props.icon}*/ }\r\n              {/*    size=\"2x\"*/ }\r\n              {/*/>*/ }\r\n              {\r\n                this.props.icon === 'medal' ?\r\n                    <FontAwesomeIcon icon = { faMedal } size = \"2x\" />\r\n                    :\r\n                    this.props.icon === 'weight' ?\r\n                        <FontAwesomeIcon icon = { faWeightHanging } size = \"2x\" />\r\n                        :\r\n                        <FontAwesomeIcon icon = { Icons['fa'\r\n                                                        + this.props.icon.charAt(\r\n                            0).toUpperCase() + this.props.icon.slice(1)] }\r\n                                         size = \"2x\"\r\n                        />\r\n              }\r\n            </div>\r\n            <div className = { 'service-box-content' }>\r\n              <h1 className = { 'service-box-title' }>{ this.props.title }</h1>\r\n              <p>{ this.props.message }</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServiceGoal;","import React, {Component} from 'react';\r\nimport '../assets/styles/homePage.css';\r\nimport ServiceGoal        from './ServiceGoal';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\nimport bgImage            from '../assets/img/logos/ffLogoTransparent.png';\r\n\r\nclass Services extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      services: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({services: this.props.stylesheetData['Home']['services']});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div id = { 'our-services' }>\r\n          <div className = \"container\">\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12\">\r\n                <div className = \"service-title text-center padding-bottom-35\">\r\n                  <p className = \"subtitle\">Service we provide</p>\r\n                  <h1 className = \"title\">Our Services</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          { this.state.services.length === 6 &&\r\n            <div className = { 'service-area' }>\r\n              <div className = { 'container' }>\r\n                <div className = { 'row' }>\r\n                  <AnimatedOnScroll animationInDelay = { 500 }\r\n                                    animationIn = \"zoomInRight\"\r\n                                    style = { {\r\n                                      position : 'absolute',\r\n                                      height   : 650,\r\n                                      width    : 650,\r\n                                      top      : '50%',\r\n                                      left     : '50%',\r\n                                      transform: 'translate(-50%, -50%)',\r\n                                    } }\r\n                  >\r\n                    <img className = { 'bgImage' }\r\n                         src = { bgImage }\r\n                         alt = { 'Background' }\r\n                    />\r\n                  </AnimatedOnScroll>\r\n\r\n                  <AnimatedOnScroll animationIn = \"fadeInLeft\">\r\n                    <div className = { 'col-lg-12' }>\r\n                      <div className = { 'row d-flex justify-content-between' }>\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[0].icon }\r\n                            title = { this.state.services[0].title }\r\n                            message = { this.state.services[0].message }\r\n                        />\r\n\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[1].icon }\r\n                            title = { this.state.services[1].title }\r\n                            message = { this.state.services[1].message }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </AnimatedOnScroll>\r\n\r\n                  <AnimatedOnScroll animationIn = \"fadeInRight\">\r\n                    <div className = { 'col-lg-12' }>\r\n                      <div className = { 'row d-flex justify-content-between' }>\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[2].icon }\r\n                            title = { this.state.services[2].title }\r\n                            message = { this.state.services[2].message }\r\n                        />\r\n\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[3].icon }\r\n                            title = { this.state.services[3].title }\r\n                            message = { this.state.services[3].message }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </AnimatedOnScroll>\r\n\r\n                  <AnimatedOnScroll animationIn = \"fadeInLeft\">\r\n                    <div className = { 'col-lg-12' }>\r\n                      <div className = { 'row d-flex justify-content-between' }>\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[4].icon }\r\n                            title = { this.state.services[4].title }\r\n                            message = { this.state.services[4].message }\r\n                        />\r\n\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[5].icon }\r\n                            title = { this.state.services[5].title }\r\n                            message = { this.state.services[5].message }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </AnimatedOnScroll>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Services;","import React, {Component} from 'react';\r\nimport '../assets/styles/Announcement.css';\r\n\r\nclass Announcement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {hover: false};\r\n        this.toggleHover = this.toggleHover.bind(this);\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState({hover: !this.state.hover});\r\n    };\r\n\r\n    onSlickRemove = () => {\r\n        if (this.props.level !== -1) {\r\n            this.props.slickRemove(this.props.id);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let dataStyle;\r\n        let imgStyle;\r\n        if (this.props.level <= 1) {\r\n            dataStyle = {display: 'block'};\r\n            imgStyle = {display: 'none'};\r\n        }\r\n        return (\r\n            !this.props.isAdder ?\r\n                (\r\n                    <div className = { 'ann-card' }\r\n                         onClick = { this.onSlickRemove }\r\n                         onMouseOver = { this.toggleHover }\r\n                         onMouseOut = { this.toggleHover }\r\n                    >\r\n                        <div className = \"ann-data\" style = { dataStyle }>\r\n                            <h5 data-testid = { 'title' } className = \"card-title\">\r\n                                { this.props.title }\r\n                            </h5>\r\n                            <p data-testid = { 'message' } className = \"card-text\">\r\n                                { this.props.message }\r\n                            </p>\r\n                        </div>\r\n                        { this.props.level >= 2\r\n                          &&\r\n                          <i data-testid = { 'minus' }\r\n                             className = \"fa fa-minus-circle ann-img\"\r\n                             style = { imgStyle }\r\n                          /> }\r\n                    </div>)\r\n                :\r\n                (\r\n                    this.props.level <= 1 ?\r\n                        <div className = \"ann-card-prompt\" />\r\n                        :\r\n                        <div className = \"ann-card\"\r\n                             onClick = { this.props.slickAdd }\r\n                        >\r\n                            <i data-testid = { 'plus' }\r\n                               className = \"fa fa-plus-circle ann-img-plus\"\r\n                            />\r\n                        </div>\r\n                )\r\n        );\r\n    }\r\n}\r\n\r\nexport default Announcement;","import React, {Component} from 'react';\r\nimport Slider             from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport '../assets/styles/AnnouncementsPublic.css';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\nimport Announcement       from './Announcement';\r\nimport AnnouncementModal  from './AnnouncementModal';\r\nimport Swal               from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport {\r\n  getPublicAnnouncements,\r\n  isAuthenticated,\r\n  removeAnnouncement,\r\n  addAnnouncement,\r\n}                         from '../../repository';\r\n\r\nclass AnnouncementsPublic extends Component {\r\n  _isMounted = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      announcements: [],\r\n      modal        : false,\r\n      level        : 0,\r\n    };\r\n    this.slickAdd = this.slickAdd.bind(this);\r\n    this.slickRemove = this.slickRemove.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  // need to see\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    let l = 0;\r\n    if (isAuthenticated()) {\r\n      const level = this.props.userLevel;\r\n      if (level === 'user') {\r\n        l = 1;\r\n      } else if (level === 'coach') {\r\n        l = 2;\r\n      } else if (level === 'admin') {\r\n        l = 3;\r\n      }\r\n    }\r\n    this.setState({level: l});\r\n\r\n    getPublicAnnouncements().then(response => {\r\n      if (this._isMounted) {\r\n        this.setState(\r\n            {announcements: response.data.announcements});\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  toggle = () => {\r\n    if (this.state.level <= 1) {\r\n      return;\r\n    }\r\n\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  slickAdd = async(Title, Message) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === '' || Message === '') {\r\n      Swal.fire(\r\n          'Please fill in all boxes',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let prev = this.state.announcements.length;\r\n    await addAnnouncement(Title, Message).then(response => {\r\n      let prevAnn = this.state.announcements.slice(0);\r\n      prevAnn.push(\r\n          {\r\n            ANNOUNCEMENT_ID: response.data.ANNOUNCEMENT_ID,\r\n            Title          : Title,\r\n            Message        : Message,\r\n          });\r\n      this.setState({announcements: prevAnn});\r\n    }).then(() => {\r\n      Swal.fire(\r\n          'Public Announcement added successfully',\r\n          '',\r\n          'success',\r\n      );\r\n      this.toggle();\r\n    }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ));\r\n    return (prev === (this.state.announcements.length - 1));\r\n  };\r\n\r\n  slickRemove = (ANNOUNCEMENT_ID) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return;\r\n    }\r\n\r\n    Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        removeAnnouncement(ANNOUNCEMENT_ID).then(() => {\r\n          this.setState({\r\n            announcements: this.state.announcements.filter(\r\n                ann => ann.ANNOUNCEMENT_ID\r\n                       !== ANNOUNCEMENT_ID),\r\n          }, () => Swal.fire(\r\n              'Public Announcement deleted successfully',\r\n              '',\r\n              'success',\r\n          ));\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Public Announcement is safe :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const settings = {\r\n      dots          : true,\r\n      infinite      : false,\r\n      speed         : 300,\r\n      slidesToShow  : 4,\r\n      slidesToScroll: 4,\r\n      centerPadding : 0,\r\n      centerMode    : false,\r\n      responsive    : [\r\n        {\r\n          breakpoint: 1024,\r\n          settings  : {\r\n            slidesToShow  : 3,\r\n            slidesToScroll: 3,\r\n            infinite      : true,\r\n            dots          : true,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 800,\r\n          settings  : {\r\n            slidesToShow  : 2,\r\n            slidesToScroll: 2,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 600,\r\n          settings  : {\r\n            slidesToShow  : 1,\r\n            slidesToScroll: 1,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    return (\r\n        <div id = 'AnnouncementsPub'>\r\n          <AnimatedOnScroll animationIn = \"fadeInLeft\">\r\n            <div id = \"ann-container\"\r\n                 className = \"container-fluid mt-2\"\r\n            >\r\n              <h1 className = \"ann-title\">Announcements</h1>\r\n              <div className = \"row\">\r\n                <div className = \"col-lg-12\">\r\n                  <div className = \"ann-cards\">\r\n                    <Slider { ...settings }>\r\n                      {/*//need to see for public*/ }\r\n                      { this.state.announcements.sort(\r\n                          function(a, b) {\r\n                            return b.ANNOUNCEMENT_ID\r\n                                   - a.ANNOUNCEMENT_ID;\r\n                          }).map(ann => {\r\n                        return <Announcement key = { ann.ANNOUNCEMENT_ID }\r\n                                             isAdder = { false }\r\n                                             id = { ann.ANNOUNCEMENT_ID }\r\n                                             title = { ann.Title }\r\n                                             message = { ann.Message }\r\n                                             slickRemove = { this.slickRemove }\r\n                                             level = { this.state.level }\r\n                        />;\r\n                      }) }\r\n                      { this.state.announcements.length === 0\r\n                        &&\r\n                        <Announcement isAdder = { true }\r\n                                      id = { 0 }\r\n                                      slickAdd = { this.toggle }\r\n                                      level = { this.state.level }\r\n                        /> }\r\n                      { this.state.announcements.length <= 1\r\n                        &&\r\n                        <Announcement isAdder = { true }\r\n                                      id = { 0 }\r\n                                      slickAdd = { this.toggle }\r\n                                      level = { this.state.level }\r\n                        /> }\r\n                      { this.state.announcements.length <= 2\r\n                        &&\r\n                        <Announcement\r\n                            isAdder = { true }\r\n                            id = { 0 }\r\n                            slickAdd = { this.toggle }\r\n                            level = { this.state.level }\r\n                        /> }\r\n                      { this.state.level <= 1\r\n                        &&\r\n                        this.state.announcements.length <= 3\r\n                        &&\r\n                        <Announcement\r\n                            isAdder = { true }\r\n                            id = { 0 }\r\n                            slickAdd = { this.toggle }\r\n                            level = { this.state.level }\r\n                        /> }\r\n                      { this.state.level >= 2\r\n                        &&\r\n                        <Announcement isAdder = { true }\r\n                                      id = { 0 }\r\n                                      slickAdd = { this.toggle }\r\n                                      level = { this.state.level }\r\n                        /> }\r\n                    </Slider>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </AnimatedOnScroll>\r\n\r\n          <AnnouncementModal onSubmit = { this.slickAdd }\r\n                             toggle = { this.toggle }\r\n                             modal = { this.state.modal }\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnnouncementsPublic;","import React, {Component}                   from 'react';\r\n// Re-usable components\r\nimport CarouselHp                           from '../common/CarouselHP';\r\nimport Services                             from '../common/Services';\r\nimport logo_img\r\n                                            from '../assets/img/logos/fitnessFactoryLogo.png';\r\nimport AnnouncementsPublic\r\n                                            from '../common/AnnouncementsPublic';\r\nimport {loggedInVisit, updateHomePageVisit} from '../../repository';\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    loggedInVisit().then();\r\n    updateHomePageVisit().then();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <CarouselHp stylesheetData = { this.props.stylesheetData } />\r\n\r\n          <div id = \"author\">\r\n            <img src = { logo_img } alt = { 'author' } />\r\n          </div>\r\n\r\n          <Services stylesheetData = { this.props.stylesheetData } />\r\n\r\n          <AnnouncementsPublic userLevel = { this.props.userLevel } />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport '../assets/styles/About.css';\r\nimport {sendEmail}        from '../../repository';\r\nimport ButtonLoader       from './ButtonLoader';\r\nimport Swal               from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\n\r\nclass ContactUs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name   : '',\r\n      email  : '',\r\n      phone  : '',\r\n      message: '',\r\n      loading: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.value.match() != null) {\r\n      this.setState({[e.target.name]: e.target.value.trim()});\r\n    }\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(this.props.testSubmit) {\r\n      this.props.testSubmit('Testing');\r\n      return;\r\n    }\r\n\r\n    if (!(\r\n        this.state.name.match('[a-zA-Z ]+') &&\r\n        this.state.email.match('[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$') &&\r\n        this.state.phone.match('^ *[0-9]+.*') &&\r\n        this.state.message.match('^ *[a-zA-Z0-9]+.*'))) {\r\n      return;\r\n    }\r\n\r\n    this.setState({loading: true}, () => {\r\n      sendEmail(this.state)\r\n          .then((response) => {\r\n            if (response.status === 'success') {\r\n              Swal.fire(\r\n                  'Message sent successfully',\r\n                  'Check your email inbox for a confirmation.',\r\n                  'success',\r\n              ).then(() => window.location.reload());\r\n            } else {\r\n              Swal.fire(\r\n                  'Something went wrong',\r\n                  'Please try again...',\r\n                  'error',\r\n              ).then();\r\n            }\r\n          })\r\n          .then(() => this.setState({loading: false}))\r\n          .catch(() => Swal.fire(\r\n              'Something went wrong',\r\n              'Please try again...',\r\n              'error',\r\n              ).then(),\r\n          );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <section className = \"page-section\" id = \"contact\">\r\n          <div className = \"container-fluid\">\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12 text-center col-md-12 col-sm-12\">\r\n                <h1 className = \"section-heading\">\r\n                  Let's keep in touch\r\n                </h1>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-3\">\r\n                <h2>Contact Us</h2>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12 col-md-12 col-sm-12 text-center\">\r\n                <form\r\n                    className = \" needs-validation\"\r\n                    id = \"contactForm\"\r\n                    name = \"sentMessage\"\r\n                    // noValidate = \"novalidate\"\r\n                    onSubmit = { this.onSubmit }\r\n                >\r\n                  <div className = \"row mb-4\">\r\n                    <div className = \"col-md-6\">\r\n                      <div className = \"form-group\">\r\n                        <input\r\n                            className = \"form-control\"\r\n                            id = \"name\"\r\n                            name = \"name\"\r\n                            type = \"text\"\r\n                            placeholder = \"Name\"\r\n                            required = \"required\"\r\n                            pattern = \"[a-zA-Z ]+\"\r\n                            onChange = { this.handleChange }\r\n                        />\r\n                        <p className = \"help-block text-danger\" />\r\n                        <div\r\n                            className = \"colored invalid-feedback\"\r\n                        >\r\n                          Please enter your name!\r\n                        </div>\r\n                      </div>\r\n                      <div className = \"form-group\">\r\n                        <input\r\n                            className = \"form-control\"\r\n                            id = \"email\"\r\n                            name = \"email\"\r\n                            type = \"email\"\r\n                            placeholder = \"Email\"\r\n                            required = \"required\"\r\n                            pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                            onChange = { this.handleChange }\r\n                        />\r\n                        <p className = \"help-block text-danger\" />\r\n                        <div className = \"colored invalid-feedback\">\r\n                          Please enter a correct email!\r\n                        </div>\r\n                      </div>\r\n                      <div className = \"form-group\">\r\n                        <input\r\n                            className = \"form-control\"\r\n                            id = \"phone\"\r\n                            name = \"phone\"\r\n                            type = \"tel\"\r\n                            placeholder = \"Phone\"\r\n                            required = \"required\"\r\n                            pattern = \"^ *[0-9]+.*\"\r\n                            onChange = { this.handleChange }\r\n                        />\r\n                        <p className = \"help-block text-danger\" />\r\n                        <div className = \"colored invalid-feedback\">\r\n                          Please enter your phone!\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className = \"col-md-6\">\r\n                      <div className = \"form-group\">\r\n                                            <textarea\r\n                                                className = \"form-control\"\r\n                                                id = \"message\"\r\n                                                name = \"message\"\r\n                                                placeholder = \"Message\"\r\n                                                required = \"required\"\r\n                                                pattern = \"^ *[a-zA-Z0-9]+.*\"\r\n                                                onChange = { this.handleChange }\r\n                                            />\r\n                        <p className = \"help-block text-danger\" />\r\n                        <div\r\n                            className = \"colored invalid-feedback\"\r\n                        >\r\n                          Please enter your message!\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className = \"clearfix\" />\r\n                    <div className = \"col-lg-3 \">\r\n                      <div id = \"success\" />\r\n                      <ButtonLoader loading = { this.state.loading }\r\n                                    text = { 'Submit Message' }\r\n                                    loadingText = { 'Sending Message...' }\r\n                                    type = { 'submit' }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-6 col-md-12 col-sm-12\">\r\n                <h2>Contact Information</h2>\r\n                <p>\r\n                  { ' ' }\r\n                  Address: { this.props.contact.address }\r\n                  <br />\r\n                  Phone: { this.props.contact.phone }\r\n                  <br />\r\n                  Email: { this.props.contact.email }\r\n                  <br />\r\n                </p>\r\n                <br />\r\n                <p>\r\n                  <a href = { this.props.contact.facebook }>\r\n                    <i className = \"fa fa-facebook\" />\r\n                  </a>\r\n                  <a href = { this.props.contact.instagram }>\r\n                    <i className = \"fa fa-instagram\" />\r\n                  </a>\r\n                </p>\r\n              </div>\r\n              <div className = \"col-lg-6 col-md-12 col-sm-12 text-center\">\r\n                <div className = \"mapouter\">\r\n                  <div className = \"gmap_canvas\">\r\n                    <iframe\r\n                        title = \"gmap_canvas\"\r\n                        width = \"550\"\r\n                        height = \"400\"\r\n                        id = \"gmap_canvas\"\r\n                        src = \"https://maps.google.com/maps?q=fitness%20factory%20nicosia&t=&z=13&ie=UTF8&iwloc=&output=embed\"\r\n                        frameBorder = \"0\"\r\n                        scrolling = \"no\"\r\n                        marginHeight = \"0\"\r\n                        marginWidth = \"0\"\r\n                    />\r\n                    <a href = \"https://www.embedgooglemap.net/blog/divi-discount-code-elegant-themes-coupon/\">\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p />\r\n          </div>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactUs;\r\n","import React, {Component} from 'react';\r\nimport {validURL}         from '../../repository';\r\n\r\nclass TeamMember extends Component {\r\n  render() {\r\n    return (\r\n        <li className = { this.props.className }>\r\n          <div className = \"timeline-image\">\r\n            <img className = \"rounded-circle img-fluid\"\r\n                 src = { validURL(this.props.src)\r\n                     ? this.props.src\r\n                     : process.env.PUBLIC_URL + this.props.src }\r\n                 alt = \"\"\r\n            />\r\n          </div>\r\n          <div className = \"timeline-panel\">\r\n            <div className = \"timeline-heading\">\r\n              <h4>{ this.props.name }</h4>\r\n            </div>\r\n            <div className = \"timeline-body\">\r\n              <p className = \"text-muted\">{ this.props.text }</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamMember;","import React, {Component}   from 'react';\r\nimport '../assets/styles/coaches.css';\r\nimport TeamMember           from './TeamMember';\r\nimport {updateClassesVisit} from '../../repository';\r\n\r\nclass Team extends Component {\r\n  componentDidMount() {\r\n    updateClassesVisit().then();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <section className = \"page-section\" id = \"about\">\r\n          <div className = \"container-fluid\">\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12 text-center\">\r\n                <h2 id = \"test\" className = \"section-heading text-uppercase\">\r\n                  Our trainers\r\n                </h2>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12\">\r\n                <ul className = \"timeline\">\r\n\r\n                  { this.props.coaches.map((coach, index) => {\r\n                    return (<TeamMember\r\n                        key = { index }\r\n                        { ...coach }\r\n                    />);\r\n                  }) }\r\n\r\n                  <li className = \"timeline-inverted\">\r\n                    <div className = \"timeline-image\">\r\n                      <h4>Start\r\n                        <br />Your Journey\r\n                        <br />Now!</h4>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Team;","import React, {Component}                  from 'react';\r\n\r\nimport {loggedInVisit} from '../../repository';\r\nimport '../assets/styles/privacy.css'\r\n\r\nclass PrivacyPolicy extends Component {\r\n\r\n    componentDidMount() {\r\n        loggedInVisit().then();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id = { 'privacy-policy' }>\r\n                <h1>Privacy Policy of Fitness Factory Nicosia</h1>\r\n\r\n                <p>Fitness Factory Nicosia operates the <a href=\"http://cproject.in.cs.ucy.ac.cy/ffn_webapp/\">http://cproject.in.cs.ucy.ac.cy/ffn_webapp/</a> website.</p>\r\n\r\n                <p>This page is used to inform website visitors regarding our policies with the collection, use, and disclosure of Personal Information if anyone decided to use our Service, the Fitness Factory Nicosia website.</p>\r\n\r\n                <p>If you choose to use our Service, then you agree to the collection and use of information in relation with this policy. The Personal Information that we collect are used for providing and improving the Service. We will not use or share your information with anyone except as described in this Privacy Policy.</p>\r\n\r\n                <p>The terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, which is accessible at http://cproject.in.cs.ucy.ac.cy/ffn_webapp/, unless otherwise defined in this Privacy Policy. Our Privacy Policy was created with the help of the <a href=\"https://www.privacypolicytemplate.net\">Privacy Policy Template</a> and the <a href=\"https://www.privacy-policy-template.com/\">Online Privacy Policy Template</a>.</p>\r\n\r\n                <h2>Information Collection and Use</h2>\r\n\r\n                <p>For a better experience while using our Service, we may require you to provide us with certain personally identifiable information, including but not limited to your Name, Surname, Medical History, Phone Number, E-mai Address, Date of Birth, username and your Personal Schedule. The information that we collect will be used to contact or identify you.</p>\r\n\r\n                <h2>Log Data</h2>\r\n\r\n                <p>We want to inform you that whenever you visit our Service, we collect information that your browser sends to us that is called Log Data. This Log Data may include information such as your computer’s Internet Protocol (\"IP\") address, browser version, pages of our Service that you visit, the time and date of your visit, the time spent on those pages, and other statistics.</p>\r\n\r\n                <h2>Cookies</h2>\r\n\r\n                <p>Cookies are files with small amount of data that is commonly used an anonymous unique identifier. These are sent to your browser from the website that you visit and are stored on your computer’s hard drive.\r\n                Our website uses these \"cookies\" to collection information and to improve our Service.</p>\r\n\r\n                <p>For more general information on cookies, please read <a href=\"https://www.cookieconsent.com/what-are-cookies/\">\"What Are Cookies\"</a>.</p>\r\n\r\n                <h2>Service Providers</h2>\r\n\r\n                <p>We may employ third-party companies and individuals due to the following reasons:</p>\r\n\r\n                <ul>\r\n                    <li>To facilitate our Service;</li>\r\n                    <li>To provide the Service on our behalf;</li>\r\n                    <li>To perform Service-related services; or</li>\r\n                    <li>To assist us in analyzing how our Service is used.</li>\r\n                </ul>\r\n\r\n                <p>We want to inform our Service users that these third parties have access to your Personal Information. The reason is to perform the tasks assigned to them on our behalf. However, they are obligated not to disclose or use the information for any other purpose.</p>\r\n\r\n                <h2>Security</h2>\r\n\r\n                <p>We value your trust in providing us your Personal Information, thus we are striving to use commercially acceptable means of protecting it. But remember that no method of transmission over the internet, or method of electronic storage is 100% secure and reliable, and we cannot guarantee its absolute security.</p>\r\n\r\n                <h2>Links to Other Sites</h2>\r\n\r\n                <p>Our Service may contain links to other sites. If you click on a third-party link, you will be directed to that site. Note that these external sites are not operated by us. Therefore, we strongly advise you to review the Privacy Policy of these websites. We have no control over, and assume no responsibility for the content, privacy policies, or practices of any third-party sites or services.</p>\r\n\r\n                <h2>Children's Privacy</h2>\r\n\r\n                <p>Our Services do not address anyone under the age of 13. We do not knowingly collect personal identifiable information from children under 13. In the case we discover that a child under 13 has provided us with personal information, we immediately delete this from our servers. If you are a parent or guardian and you are aware that your child has provided us with personal information, please contact us so that we will be able to do necessary actions.</p>\r\n\r\n                <h2>Changes to This Privacy Policy</h2>\r\n\r\n                <p>We may update our Privacy Policy from time to time. Thus, we advise you to review this page periodically for any changes. We will notify you of any changes by posting the new Privacy Policy on this page. These changes are effective immediately, after they are posted on this page.</p>\r\n\r\n                <h2>Contact Us</h2>\r\n\r\n                <p>If you have any questions or suggestions about our Privacy Policy, do not hesitate to contact us.</p>\r\n                <p/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PrivacyPolicy;\r\n","import React, {Component}                  from 'react';\r\nimport ContactUs                           from '../common/ContactUs';\r\nimport Team                                from '../common/Team';\r\nimport {loggedInVisit, updateAboutUsVisit} from '../../repository';\r\nimport PrivacyPolicy                                from './PrivacyPolicy';\r\n\r\nclass AboutUs extends Component {\r\n    componentDidMount() {\r\n        loggedInVisit().then();\r\n        updateAboutUsVisit().then();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id = { 'about-us' }>\r\n                <Team coaches = { this.props.stylesheetData['About']['coach'] } />\r\n                <ContactUs contact = { this.props.stylesheetData['About']['contact'] } />\r\n                <PrivacyPolicy/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutUs;\r\n","import React, {Component} from 'react';\r\nimport '../assets/styles/PaymentStyle.css'\r\nimport jccLogo from '../assets/img/logos/jccLogo.svg';\r\nimport paypalLogo from '../assets/img/logos/paypalLogo.svg';\r\n\r\nclass PaymentModal extends Component {\r\n    onChange(value) {\r\n        console.log(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={'payment-modal'} className={'text-center'}>\r\n\r\n                <div id={'subscription-options'}>\r\n                    <h4>Subscription Options</h4>\r\n                    <div className=\"option-group\">\r\n                        <div className=\"option-container\">\r\n\r\n                            <input className=\"option-input\" id=\"option-1\" type=\"radio\" name=\"options\" defaultChecked/>\r\n                            <input className=\"option-input\" id=\"option-2\" type=\"radio\" name=\"options\"/>\r\n\r\n                            <label className=\"option\" htmlFor=\"option-1\">\r\n                                <span className=\"option__indicator\"/>\r\n                                <span className=\"option__label\">&euro;65<sub>per month</sub></span>\r\n                            </label>\r\n\r\n                            <label className=\"option\" htmlFor=\"option-2\">\r\n                                <span className=\"option__indicator\"/>\r\n                                <span className=\"option__label\">&euro;170<sub>/ 3 months</sub></span>\r\n                            </label>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"option-group\">\r\n                        <div className=\"option-container\">\r\n\r\n                            <input className=\"option-input\" id=\"option-3\" type=\"radio\" name=\"options\"/>\r\n                            <input className=\"option-input\" id=\"option-4\" type=\"radio\" name=\"options\"/>\r\n\r\n                            <label className=\"option\" htmlFor=\"option-3\">\r\n                                <span className=\"option__indicator\"/>\r\n                                <span className=\"option__label\">&euro;300<sub>/ 6 months</sub></span>\r\n                            </label>\r\n\r\n                            <label className=\"option\" htmlFor=\"option-4\">\r\n                                <span className=\"option__indicator\"/>\r\n                                <span className=\"option__label\">&euro;565<sub>per year</sub></span>\r\n                            </label>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id={'payment-options'}>\r\n                    <h4>Payment Options</h4>\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row radio-tile-group justify-content-center\">\r\n\r\n                            <div className=\"input-container\">\r\n                                <input id=\"walk\" className=\"radio-button\" type=\"radio\" name=\"radio\" defaultChecked/>\r\n                                <div className=\"radio-tile\">\r\n                                    <div className=\"icon walk-icon\">\r\n                                        <img src={jccLogo} alt={'JCC Logo'}/>\r\n                                    </div>\r\n                                    <label htmlFor=\"walk\" className=\"radio-tile-label\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"input-container\">\r\n                                <input id=\"bike\" className=\"radio-button\" type=\"radio\" name=\"radio\"/>\r\n                                <div className=\"radio-tile\">\r\n                                    <div className=\"icon bike-icon\">\r\n                                        <img src={paypalLogo} alt={'PayPal Logo'}/>\r\n                                    </div>\r\n                                    <label htmlFor=\"bike\" className=\"radio-tile-label\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button id=\"CheckoutButton\" className=\"btn btn-primary\"\r\n                        type=\"submit\"><i className=\"fa fa-lock\" disabled={true}/> CHECKOUT\r\n                </button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentModal;","import React, {Component} from 'react';\r\n\r\nclass Event extends Component {\r\n  render() {\r\n    return (\r\n        <div className = \"event_item\">\r\n          <div className = { 'ei_Dot ' + (this.props.active\r\n                                          && 'dot_active') }\r\n          />\r\n          <div className = \"ei_Title\">\r\n            { this.props.timeStart } { this.props.timeStart.split(':')[0] < 12\r\n              ? 'am' : 'pm' }\r\n          </div>\r\n          <div className = \"ei_Copy\">{ this.props.event }</div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, {Component} from 'react';\r\nimport '../assets/styles/EventsModal.css';\r\nimport Event              from './Event';\r\nimport {getEvents}        from '../../repository';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\nimport Spinner            from '../Spinner';\r\n\r\nclass EventsModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      events : [],\r\n      date   : '',\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const options = {\r\n      weekday: 'long',\r\n      year   : 'numeric',\r\n      month  : 'long',\r\n      day    : 'numeric',\r\n    };\r\n    const dateTimeFormat = new Intl.DateTimeFormat('en-GB', options);\r\n    this.setState({date: dateTimeFormat.format(new Date())});\r\n\r\n    getEvents().then(response => {\r\n      this.setState({events: response.events});\r\n    }).then(() => {\r\n      this.setState({loading: false});\r\n    }).catch();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div id = { 'EventsModal' } className={ 'eventClass'}>\r\n          { this.state.loading ?\r\n              <Spinner style = { {\r\n                'height'         : '250px',\r\n                'backgroundColor': 'transparent',\r\n              } }\r\n              />\r\n              :\r\n              <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                <div className = \"container\">\r\n                  <div className = \"calendar dark\">\r\n                    <div className = \"calendar_header\">\r\n                      <h1 className = \"header_title\">Welcome Back</h1>\r\n                      <p className = \"header_copy\"> Calendar Plan</p>\r\n                    </div>\r\n                    <div className = \"calendar_plan\">\r\n                      <div className = \"cl_plan\">\r\n                        <div className = \"cl_title\">Today</div>\r\n                        <div className = \"cl_copy\">{ this.state.date }</div>\r\n                        {/*<div class = \"cl_add\">*/ }\r\n                        {/*  <i class = \"fas fa-plus\"/>*/ }\r\n                        {/*</div>*/ }\r\n                      </div>\r\n                    </div>\r\n                    <div className = \"calendar_events\">\r\n                      <p className = \"ce_title\">Upcoming Events</p>\r\n                      { this.state.events.length === 0 ?\r\n                          <div style = { {'textAlign': 'center'} }>\r\n                            You have no training planned today.<br />\r\n                            Take the day off, you deserve it!\r\n                          </div>\r\n                          :\r\n                          this.state.events.map((event, index) => {\r\n                            const startSplit = event.timeStart.split(':');\r\n                            const start = parseInt(startSplit[0]) * 60\r\n                                          + parseInt(startSplit[1]);\r\n                            const now = new Date().getHours() * 60\r\n                                        + new Date().getMinutes();\r\n                            const end = start + 60;\r\n                            let active = false;\r\n                            if (start <= now && now <= end) {\r\n                              active = true;\r\n                            }\r\n                            return <Event key = { index } { ...event }\r\n                                          active = { active }\r\n                            />;\r\n                          })\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </AnimatedOnScroll>\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventsModal;","import React, {Component} from 'react';\r\nimport '../assets/styles/AnnouncmentsPrivate.css';\r\n\r\nclass AnnouncementCompPub extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {hover: false};\r\n    this.toggleHover = this.toggleHover.bind(this);\r\n  }\r\n\r\n  toggleHover = () => {\r\n    this.setState({hover: !this.state.hover});\r\n  };\r\n\r\n  render() {\r\n    let dataStyle;\r\n    let imgStyle;\r\n    if (this.props.level <= 1) {\r\n      dataStyle = {display: 'block'};\r\n      imgStyle = {display: 'none'};\r\n    }\r\n    return (\r\n        <div className = { 'ann-card' }\r\n             onMouseOver = { this.toggleHover }\r\n             onMouseOut = { this.toggleHover }\r\n             data-testid = { 'announcement' }\r\n        >\r\n          <div className = \"ann-data\" style = { dataStyle }>\r\n            <h5 data-testid = { 'title' } className = \"card-title\">\r\n              { this.props.title }\r\n            </h5>\r\n            <p data-testid = { 'message' } className = \"card-text\">\r\n              { this.props.message }\r\n            </p>\r\n          </div>\r\n          { this.props.level >= 2\r\n            &&\r\n            <i data-testid = { 'minus' }\r\n               className = \"fa fa-minus-circle ann-img\"\r\n               style = { imgStyle }\r\n            /> }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnnouncementCompPub;","import React, {Component}        from 'react';\r\nimport {AnimatedOnScroll}        from 'react-animated-css-onscroll';\r\nimport '../assets/styles/AnnouncmentsPrivate.css';\r\nimport AnnouncementCompPub       from './AnnouncementCompPub';\r\nimport {getPrivateAnnouncements} from '../../repository';\r\nimport Spinner                   from '../Spinner';\r\n\r\nclass AnnouncementsPrivate extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      announcements: [],\r\n      level        : -1,\r\n      loading      : true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({level: -1});\r\n\r\n    if (this.props.testLoading) {\r\n      this.setState({announcements: this.props.announcements, loading: false});\r\n    } else {\r\n      getPrivateAnnouncements().then(response => {\r\n        this.setState(\r\n            {announcements: response.data.announcements});\r\n      }).then(() => this.setState({loading: false}));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = \"Announcements\" id = \"AnnounceModal\">\r\n          { this.state.loading ?\r\n              <Spinner style = { {\r\n                'height'         : '250px',\r\n                'backgroundColor': 'transparent',\r\n              } }\r\n              /> :\r\n              <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                <div id = \"ann\" className = \"container mt-2\">\r\n                  { this.state.announcements.sort(\r\n                      function(a, b) {\r\n                        return b.ANNOUNCEMENT_ID\r\n                               - a.ANNOUNCEMENT_ID;\r\n                      }).map(ann => {\r\n                    return <AnnouncementCompPub key = { ann.ANNOUNCEMENT_ID }\r\n                                                id = { ann.ANNOUNCEMENT_ID }\r\n                                                title = { ann.Title }\r\n                                                message = { ann.Message }\r\n                                                level = { this.state.level }\r\n                    />;\r\n                  }) }\r\n                </div>\r\n              </AnimatedOnScroll>\r\n          }\r\n        </div>\r\n    )\r\n        ;\r\n  }\r\n}\r\n\r\nexport default AnnouncementsPrivate;","import React, {Component} from 'react';\r\nimport '../assets/styles/MessagesModal.css';\r\nimport Message            from './Message';\r\nimport {\r\n  createNewMessage,\r\n  getMessages,\r\n  makeMessagesRead, userData,\r\n}                         from '../../repository';\r\nimport MessageNewModal    from './MessageNewModal';\r\nimport Swal               from 'sweetalert2';\r\nimport Spinner            from '../Spinner';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\n\r\nclass MessagesModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      newModal: false,\r\n      loading : [true, true],\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onMessageSubmit = this.onMessageSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getMessages().then(response => {\r\n      this.setState({\r\n        messages: response.messages[0].sort(\r\n            function(a, b) {\r\n              // noinspection JSUnresolvedVariable\r\n              return b.Message_ID\r\n                     - a.Message_ID;\r\n            }),\r\n      });\r\n    }).then(() => {\r\n      let loading = this.state.loading;\r\n      loading[0] = false;\r\n      this.setState({loading});\r\n    }).catch(err => alert(err));\r\n\r\n    userData().then(response => {\r\n      this.setState({image: response.image});\r\n    }).then(() => {\r\n      let loading = this.state.loading;\r\n      loading[1] = false;\r\n      this.setState({loading});\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.TotalMessages > 0) {\r\n      // noinspection JSUnresolvedVariable\r\n      const newMessages = this.state.messages.slice(0,\r\n          this.props.TotalMessages).map(msg => msg.Message_ID);\r\n      makeMessagesRead(newMessages).then(() => {\r\n        this.props.toggleTotalMessages();\r\n      }).catch(err => alert(err));\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({newModal: !this.state.newModal});\r\n  };\r\n\r\n  onMessageSubmit = (e, title, message, contact) => {\r\n    e.preventDefault();\r\n    createNewMessage({title, message, contact}).then(response => {\r\n      this.toggle();\r\n      let newArr = this.state.messages.slice(0);\r\n      newArr.unshift(response[0]);\r\n      this.setState({messages: newArr});\r\n      console.log(response);\r\n      if (response[0]) {\r\n        Swal.fire(\r\n            'Message sent successfully',\r\n            '',\r\n            'success',\r\n        ).then();\r\n      } else {\r\n        Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ).then();\r\n      }\r\n    }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ).then());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div id = { 'MessagesModal' }>\r\n          { this.state.loading.includes(true) ?\r\n              <Spinner style = { {\r\n                'height'         : '250px',\r\n                'backgroundColor': 'transparent',\r\n              } }\r\n              />\r\n              :\r\n              <>\r\n                <button className = { 'new-msg-btn btn btn-primary btn-xl text-uppercase' }\r\n                        onClick = { this.toggle }\r\n                >\r\n                  New Message\r\n                </button>\r\n                <div id = \"message-container\"\r\n                     className = \"container-fluid mt-2\"\r\n                >\r\n                  <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                    { this.state.messages.map(\r\n                        (msg, index) => {\r\n                          // noinspection JSUnresolvedVariable\r\n                          const outgoing = this.props.userLevel\r\n                                           === msg.From_level;\r\n                          // noinspection JSUnresolvedVariable\r\n                          const toContact = `${ msg.To_Name } ${ msg.To_Surname } - ${ msg.To_level.toUpperCase() }`;\r\n                          // noinspection JSUnresolvedVariable\r\n                          const fromContact = `${ msg.From_Name } ${ msg.From_Surname } - ${ msg.From_level.toUpperCase() }`;\r\n                          const timestamp = msg.Timestamp.split(/[T.]+/)[0]\r\n                                            + ' '\r\n                                            + msg.Timestamp.split(/[T.]+/)[1];\r\n                          // noinspection JSUnresolvedVariable\r\n                          return (\r\n                              <div className = { 'messageDiv' } key = { index }>\r\n                                { this.props.TotalMessages > 0 &&\r\n                                  this.props.TotalMessages === index &&\r\n                                  < div className = 'new-msg-line'>\r\n                                    New Messages Above\r\n                                  </div> }\r\n                                <Message\r\n                                    key = { msg.Message_ID }\r\n                                    title = { msg.Title }\r\n                                    message = { msg.Message }\r\n                                    toContact = { toContact }\r\n                                    fromContact = { fromContact }\r\n                                    outgoing = { outgoing }\r\n                                    timestamp = { timestamp }\r\n                                    hasSeen = { msg.hasSeen }\r\n                                    image = { this.state.image }\r\n                                />\r\n                              </div>\r\n                          );\r\n                        })\r\n                    }\r\n                  </AnimatedOnScroll>\r\n                </div>\r\n              </>\r\n          }\r\n\r\n          <MessageNewModal onSubmit = { this.onMessageSubmit }\r\n                           toggle = { this.toggle }\r\n                           modal = { this.state.newModal }\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessagesModal;","import React, {Component} from 'react';\r\nimport ToggleModal        from './ToggleModal';\r\nimport PaymentModal       from './PaymentModal';\r\nimport EventsModal        from './EventsModal';\r\nimport {Button}           from 'reactstrap';\r\nimport AnnouncementsPrivate\r\n                          from './AnnouncementsPrivate';\r\nimport EditAccount        from './EditAccount';\r\nimport MessagesModal      from './MessagesModal';\r\nimport {\r\n  getEventsTotal,\r\n  // getSevenDaysRemaining,\r\n  getTotalMessages,\r\n  getTotalPrivateAnnouncements,\r\n}                         from '../../repository';\r\n\r\nclass SettingsProfile extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      modalPayment       : false,\r\n      modalAnnouncements : false,\r\n      modalAnnouncements2: false,\r\n      modalMessages      : false,\r\n      modalEditAccount   : false,\r\n      modalEvents        : false,\r\n      TotalMessages      : 0,\r\n      TotalAnnouncement  : 0,\r\n      TotalEvents        : 0,\r\n      sevenDaysLeft      : 0,\r\n      open               : false,\r\n      classes            : [],\r\n      dataPT             : [],\r\n    };\r\n    this.togglePayment = this.togglePayment.bind(this);\r\n    this.toggleAnnouncements = this.toggleAnnouncements.bind(this);\r\n    this.toggleAnnouncements2 = this.toggleAnnouncements2.bind(this);\r\n    this.toggleTotalMessages = this.toggleTotalMessages.bind(this);\r\n    this.toggleEvents = this.toggleEvents.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.toggleTotalEvents = this.toggleTotalEvents.bind(this);\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({open: !this.state.open});\r\n  };\r\n  togglePayment = () => {\r\n    this.setState({modalPayment: !this.state.modalPayment});\r\n  };\r\n  toggleEvents = () => {\r\n    this.setState({modalEvents: !this.state.modalEvents});\r\n  };\r\n  toggleTotalMessages = () => {\r\n    this.setState({TotalMessages: 0});\r\n  };\r\n  toggleTotalEvents = () => {\r\n    this.setState({TotalEvents: 0});\r\n  };\r\n  toggleAnnouncements = () => {\r\n    this.setState({modalAnnouncements: !this.state.modalAnnouncements});\r\n  };\r\n  toggleAnnouncements2 = () => {\r\n    this.setState({modalAnnouncements2: !this.state.modalAnnouncements2});\r\n  };\r\n  toggleEditAccount = () => {\r\n    this.setState({modalEditAccount: !this.state.modalEditAccount});\r\n  };\r\n  toggleMessages = () => {\r\n    this.setState({modalMessages: !this.state.modalMessages});\r\n  };\r\n\r\n  componentDidMount() {\r\n    getTotalPrivateAnnouncements().then(response => {\r\n      // noinspection JSUnresolvedVariable\r\n      this.setState(\r\n          {TotalAnnouncement: response.TotalAnnouncement.Count});\r\n    });\r\n\r\n    getTotalMessages().then(response => {\r\n      this.setState(\r\n          {TotalMessages: response.TotalMessages});\r\n    });\r\n\r\n    getEventsTotal().then(response => {\r\n      this.setState({TotalEvents: response.total});\r\n    }).catch();\r\n\r\n  }\r\n\r\n  //Testing\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.classes !== this.props.classes || prevProps.dataPT\r\n        !== this.props.dataPT) {\r\n      (async() => {\r\n        await this.setState(\r\n            {dataPT: this.props.dataPT, classes: this.props.classes});\r\n      })();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        /**  <>\r\n         <Popup\r\n         open = { this.state.open }\r\n         closeOnDocumentClick\r\n         onClose = { this.toggleModal }\r\n         modal\r\n         >\r\n         <div style={{backgroundColor: 'red'}}>\r\n         Your active subscription expires in less than 7 days.\r\n         <br />\r\n         If you would like to renew your subscription please click here.\r\n         </div>\r\n         </Popup>**/\r\n        <div className = \"col-lg-4 col-md-12 col-sm-12\">\r\n          <div className = \"menu-box block\" id = \"leftBlock\">\r\n            <div className = \"titular\">Settings</div>\r\n            <ul className = \"menu-box-menu\">\r\n              {/* Remember to add onClick to new modals on buttons */ }\r\n              <li>\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleMessages }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-envelope\" /> Messages\r\n                  { this.state.TotalMessages > 0 &&\r\n                    <div className = \"menu-box-number\">{ this.state.TotalMessages }</div> }\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalMessages }\r\n                    toggle = { this.toggleMessages }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Messages' }\r\n                    modalBody = {\r\n                      <MessagesModal userLevel = { this.props.userLevel }\r\n                                     TotalMessages = { this.state.TotalMessages }\r\n                                     toggleTotalMessages = { this.toggleTotalMessages }\r\n                      /> }\r\n                />\r\n              </li>\r\n              <li>\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.togglePayment }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-credit-card\"><span\r\n                      style = { {color: 'white'} }\r\n                  >Membership</span></i>\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalPayment }\r\n                    toggle = { this.togglePayment }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Payment' }\r\n                    modalBody = { <PaymentModal /> }\r\n                />\r\n              </li>\r\n              <li>\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleEvents }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-calendar\" /> Events\r\n                  { this.state.TotalEvents > 0 &&\r\n                    <div className = \"menu-box-number\">{ this.state.TotalEvents }</div> }\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalEvents }\r\n                    toggle = { this.toggleEvents }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Events' }\r\n                    modalBody = {\r\n                      <EventsModal userLevel = { this.props.userLevel }\r\n                                   TotalEvents = { this.state.TotalEvents }\r\n                      /> }\r\n                />\r\n              </li>\r\n              <li>\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleAnnouncements }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-tasks\" /> Announcements\r\n                  <div className = \"menu-box-number\">{ this.state.TotalAnnouncement }</div>\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalAnnouncements }\r\n                    toggle = { this.toggleAnnouncements }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Announcements' }\r\n                    modalBody = { <AnnouncementsPrivate /> }\r\n                />\r\n              </li>\r\n              <li id = \"editAccount\">\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleEditAccount }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-user\" /> Edit Account\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalEditAccount }\r\n                    toggle = { this.toggleEditAccount }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Edit Account' }\r\n                    modalBody = { <EditAccount dataPT = { this.state.dataPT }\r\n                                               classes = { this.state.classes }\r\n                    /> }\r\n                />\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        /**  </>**/\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default SettingsProfile;","import React, {Component} from 'react';\r\n\r\nclass GeneralScheduleModalBody extends Component {\r\n  render() {\r\n    return (\r\n        <img src = { process.env.PUBLIC_URL + '/img/classes/timetable-new.png' }\r\n             alt = \"timetable\"\r\n             width = \"100%\"\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GeneralScheduleModalBody;","import React, {Component}       from 'react';\r\nimport '../assets/styles/BookDropdown.css';\r\nimport {getClasses}             from '../../repository';\r\nimport {getClassDay}            from '../../repository';\r\nimport {getClassTime}           from '../../repository';\r\nimport {getClassCoach}          from '../../repository';\r\nimport {getClassID}             from '../../repository';\r\nimport {getUserID}              from '../../repository';\r\nimport ToggleModal              from './ToggleModal';\r\nimport GeneralScheduleModalBody from './GeneralScheduleModalBody';\r\nimport Swal                     from 'sweetalert2';\r\n\r\nclass BookClass extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      User_ID      : '',\r\n      Name         : [],\r\n      Day          : [],\r\n      Time         : [],\r\n      CoachName    : [],\r\n      SelectedClass: 'Select...',\r\n      SelectedDay  : 'Select...',\r\n      SelectedTime : 'Select...',\r\n      SelectedCoach: 'Select...',\r\n      ClassID      : '',\r\n      DayCode      : '',\r\n      TimeCode     : '',\r\n      flag         : false,\r\n      invalid      : true,\r\n      classSchedule: [],\r\n      modalGeneral : false,\r\n    };\r\n    this.handleClass = this.handleClass.bind(this);\r\n    this.handleDay = this.handleDay.bind(this);\r\n    this.handleTime = this.handleTime.bind(this);\r\n    this.handleCoach = this.handleCoach.bind(this);\r\n    this.toggleModalGeneral = this.toggleModalGeneral.bind(this);\r\n\r\n  }\r\n\r\n  toggleModalGeneral = (e) => {\r\n    e.preventDefault();\r\n    this.setState({modalGeneral: !this.state.modalGeneral});\r\n  };\r\n\r\n  handleClass = (e) => {\r\n    if (this.props.testLoading) {\r\n      return;\r\n    }\r\n    this.setState(\r\n        {[e.target.name]: e.target.value === 'Select...' ? '' : e.target.value},\r\n        () => {\r\n          this.setState({Day: this.state.Day !== null ? [] : this.state.Day},\r\n              () => {\r\n                this.setState(\r\n                    {Time: this.state.Time !== null ? [] : this.state.Time},\r\n                    () => {\r\n                      this.setState({\r\n                        CoachName: this.state.CoachName !== null\r\n                            ? []\r\n                            : this.state.CoachName,\r\n                      }, () => {\r\n                        getClassDay(this.state.SelectedClass).then(response => {\r\n                          this.setState({Day: response}, () => {\r\n                            console.clear();\r\n                          });\r\n                        });\r\n                      });\r\n                    });\r\n              });\r\n        });\r\n  };\r\n\r\n  handleDay = (e) => {\r\n    if (this.props.testLoading) {\r\n      return;\r\n    }\r\n    this.setState(\r\n        {[e.target.name]: e.target.value === 'Select...' ? '' : e.target.value},\r\n        () => {\r\n          this.setState({Time: []}, () => {\r\n            this.setState({CoachName: []}, () => {\r\n              getClassTime(this.state.SelectedClass, this.state.SelectedDay)\r\n                  .then(response => {\r\n                    this.setState({Time: response}, () => {\r\n                      if (this.state.SelectedDay === 'Monday') {\r\n                        this.setState({DayCode: 1});\r\n                      } else if (this.state.SelectedDay === 'Tuesday') {\r\n                        this.setState({DayCode: 2});\r\n                      } else if (this.state.SelectedDay === 'Wednesday') {\r\n                        this.setState({DayCode: 3});\r\n                      } else if (this.state.SelectedDay === 'Thursday') {\r\n                        this.setState({DayCode: 4});\r\n                      } else if (this.state.SelectedDay === 'Friday') {\r\n                        this.setState({DayCode: 5});\r\n                      } else if (this.state.SelectedDay === 'Saturday') {\r\n                        this.setState({DayCode: 6});\r\n                      } else if (this.state.SelectedDay === 'Sunday') {\r\n                        this.setState({DayCode: 7});\r\n                      }\r\n                    });\r\n                  });\r\n            });\r\n          });\r\n        });\r\n  };\r\n\r\n  handleTime = (e) => {\r\n    if (this.props.testLoading) {\r\n      return;\r\n    }\r\n    this.setState(\r\n        {[e.target.name]: e.target.value === 'Select...' ? '' : e.target.value},\r\n        () => {\r\n          this.setState({CoachName: []}, () => {\r\n            getClassCoach(this.state.SelectedClass, this.state.SelectedDay,\r\n                this.state.SelectedTime).then(response => {\r\n              this.setState({CoachName: response}, () => {\r\n                if (this.state.SelectedTime === '08:00:00') {\r\n                  this.setState({TimeCode: 1});\r\n                } else if (this.state.SelectedTime === '09:00:00') {\r\n                  this.setState({TimeCode: 2});\r\n                } else if (this.state.SelectedTime === '10:00:00') {\r\n                  this.setState({TimeCode: 3});\r\n                } else if (this.state.SelectedTime === '11:00:00') {\r\n                  this.setState({TimeCode: 4});\r\n                } else if (this.state.SelectedTime === '12:00:00') {\r\n                  this.setState({TimeCode: 5});\r\n                } else if (this.state.SelectedTime === '13:00:00') {\r\n                  this.setState({TimeCode: 6});\r\n                } else if (this.state.SelectedTime === '14:00:00') {\r\n                  this.setState({TimeCode: 7});\r\n                } else if (this.state.SelectedTime === '15:00:00') {\r\n                  this.setState({TimeCode: 8});\r\n                } else if (this.state.SelectedTime === '16:00:00') {\r\n                  this.setState({TimeCode: 9});\r\n                } else if (this.state.SelectedTime === '17:00:00') {\r\n                  this.setState({TimeCode: 10});\r\n                } else if (this.state.SelectedTime === '18:00:00') {\r\n                  this.setState({TimeCode: 11});\r\n                } else if (this.state.SelectedTime === '19:00:00') {\r\n                  this.setState({TimeCode: 12});\r\n                }\r\n              });\r\n            });\r\n          });\r\n        });\r\n  };\r\n\r\n  handleCoach = (e) => {\r\n    if (this.props.testLoading) {\r\n      return;\r\n    }\r\n    this.setState(\r\n        {[e.target.name]: e.target.value === 'Select...' ? '' : e.target.value},\r\n        () => {\r\n          getClassID(this.state.SelectedClass, this.state.SelectedDay,\r\n              this.state.SelectedTime, this.state.SelectedCoach)\r\n              .then(response => {\r\n                this.setState({ClassID: response.data.ClassID.ClassID}, () => {\r\n                });\r\n              });\r\n        });\r\n\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.Day.length === 0 ||\r\n        this.state.Name.length === 0 ||\r\n        this.state.Time.length === 0 ||\r\n        this.state.CoachName.length === 0) {\r\n      Swal.fire(\r\n          'Required selections are empty',\r\n          'Make sure that you have filled every selection first!',\r\n          'error',\r\n      ).then();\r\n    } else {\r\n      this.setState({flag: true, invalid: false}, () => {\r\n        this.props.getSelections(\r\n            this.state.DayCode,\r\n            this.state.TimeCode,\r\n            true,\r\n            this.state.ClassID,\r\n            this.state.SelectedClass,\r\n            false,\r\n        );\r\n      });\r\n    }\r\n    this.setState({Name: []}, () => {\r\n      this.setState({Day: []}, () => {\r\n        this.setState({Time: []}, () => {\r\n          this.setState({CoachName: []}, () => {\r\n            getClasses().then(response => {\r\n              this.setState({Name: response});\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  onDelete = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.Day.length === 0 ||\r\n        this.state.Name.length === 0 ||\r\n        this.state.Time.length === 0 ||\r\n        this.state.CoachName.length === 0) {\r\n      Swal.fire(\r\n          'Required selections are empty',\r\n          'Make sure that you have filled every selection first!',\r\n          'error',\r\n      ).then();\r\n    } else {\r\n      this.setState({flag: false, invalid: false}, () => {\r\n        this.props.getSelections(\r\n            this.state.DayCode,\r\n            this.state.TimeCode,\r\n            false,\r\n            this.state.ClassID,\r\n            this.state.SelectedClass,\r\n            false,\r\n        );\r\n      });\r\n    }\r\n    this.setState({Name: []}, () => {\r\n      this.setState({Day: []}, () => {\r\n        this.setState({Time: []}, () => {\r\n          this.setState({CoachName: []}, () => {\r\n            getClasses().then(response => {\r\n              this.setState({Name: response});\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  //\r\n  componentDidMount() {\r\n    if (this.props.testLoading) {\r\n      this.setState({\r\n        Name     : this.props.data.Name,\r\n        Day      : this.props.data.Day,\r\n        Time     : this.props.data.Time,\r\n        CoachName: this.props.data.CoachName,\r\n      });\r\n    } else {\r\n      getUserID()\r\n          .then(response => {\r\n            this.setState(\r\n                {User_ID: response.User_ID}, () => {\r\n                });\r\n            getClasses().then(response => {\r\n              this.setState({Name: response});\r\n            });\r\n          });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = \"col-lg-4 col-md-12 col-sm-12\">\r\n          <form className = \"form\" id = \"backBox\">\r\n            <h3 id = \"bmiHeading\"><b>E</b>nroll <b>T</b>o <b>C</b>lass</h3>\r\n\r\n            <div className = \"row\" id = \"first-row\">\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <label htmlFor = \"DropClass\">Class:</label>\r\n                <select className = \"form-control\"\r\n                        id = \"DropDays\"\r\n                        name = \"SelectedClass\"\r\n                        onChange = { this.handleClass }\r\n                        data-testid = { 'class-select' }\r\n                >\r\n                  <option>Select...</option>\r\n                  { this.state.Name.map((res, index) => {\r\n                    return <option value = { res.Name } key = { index }>\r\n                      { res.Name }\r\n                    </option>;\r\n                  })\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <label htmlFor = \"DropDays\">Day:</label>\r\n                <select className = \"form-control\"\r\n                        id = \"DropDays\"\r\n                        name = \"SelectedDay\"\r\n                        onChange = { this.handleDay }\r\n                        data-testid = { 'day-select' }\r\n                >\r\n                  <option>Select...</option>\r\n                  { this.state.Day.map((res, index) => {\r\n                    return <option value = { res.Day } key = { index }>\r\n                      { res.Day }\r\n                    </option>;\r\n                  })\r\n                  }\r\n                </select>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className = \"row\" id = \"first-row\">\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <label htmlFor = \"DropDays\">Time:</label>\r\n                <select className = \"form-control\"\r\n                        id = \"DropDays\"\r\n                        name = \"SelectedTime\"\r\n                        onChange = { this.handleTime }\r\n                        data-testid = { 'time-select' }\r\n                >\r\n                  <option>Select...</option>\r\n                  { this.state.Time.map((res, index) => {\r\n                    return <option value = { res.Time } key = { index }>\r\n                      { res.Time }\r\n                    </option>;\r\n                  })\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <label htmlFor = \"DropClass\">Coach:</label>\r\n                <select className = \"form-control\"\r\n                        id = \"DropDays\"\r\n                        name = \"SelectedCoach\"\r\n                        onChange = { this.handleCoach }\r\n                        data-testid = { 'coach-select' }\r\n                >\r\n                  <option>Select...</option>\r\n                  { this.state.CoachName.map((res, index) => {\r\n                    return <option value = { res.CoachName } key = { index }>\r\n                      { res.CoachName }\r\n                    </option>;\r\n                  })\r\n                  }\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <button type = \"\"\r\n                        className = \"RowButton\"\r\n                        onClick = { this.onSubmit }\r\n                >Enroll\r\n                </button>\r\n              </div>\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <button type = \"button-important\"\r\n                        className = \"RowButton\"\r\n                        onClick = { this.onDelete }\r\n                >Unenroll\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-md-12 RowBlock\"\r\n                   style = { {'paddingBottom': '0px'} }\r\n              >\r\n                <button type = \"button-important\"\r\n                        className = \"RowButton\"\r\n                        onClick = { this.toggleModalGeneral }\r\n                >View General Schedule\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n            <ToggleModal\r\n                modal = { this.state.modalGeneral }\r\n                toggle = { this.toggleModalGeneral }\r\n                modalSize = { 'lg' }\r\n                modalHeader = { 'General Gym Schedule' }\r\n                modalBody = { <GeneralScheduleModalBody /> }\r\n            />\r\n          </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookClass;","import React, {Component} from 'react';\r\nimport '../assets/styles/PersonalTrainingTimetable.css';\r\nimport {\r\n  // getClasses,\r\n  // getPersonalTraining,\r\n  getUserID,\r\n  // insertPT,\r\n  // postuserData,\r\n  getClassSchedule,\r\n  // getClassName,\r\n  getPersonalSchedule,\r\n  enrollUser,\r\n  unenrollUser,\r\n}                         from '../../repository';\r\nimport Swal               from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\n\r\nclass EnrolledClassSchedule extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      refID              : '',\r\n      refIDs             : [],\r\n      ptIDs              : [],\r\n      trainingScheduleRet: [],\r\n      flag               : false,\r\n      Coach_ID           : '',\r\n      User_ID            : '',\r\n      classSchedule      : [],\r\n      personalSchedule   : [],\r\n      cIDs               : [],\r\n      pIDs               : [],\r\n      cNames             : [],\r\n      pNames             : [],\r\n      ClassID            : '',\r\n      Name               : '',\r\n      ClassColors        : [\r\n        '#812029',\r\n        '#1A63D9',\r\n        '#CF1B1B',\r\n        '#FFAD1F',\r\n        '#704585',\r\n        '#53878C',\r\n        '#C97200',\r\n        '#489655',\r\n        '#158CA3',\r\n        '#9E134B',\r\n      ],\r\n\r\n    };\r\n    this.StateSetter = this.StateSetter.bind(this);\r\n    this.StateSetterPT = this.StateSetterPT.bind(this);\r\n    this.ColorLuminance = this.ColorLuminance.bind(this);\r\n  }\r\n\r\n  // noinspection DuplicatedCode\r\n  ColorLuminance = (hex, lum) => {\r\n\r\n    // validate hex string\r\n    hex = String(hex).replace(/[^0-9a-f]/gi, '');\r\n    if (hex.length < 6) {\r\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    lum = lum || 0;\r\n\r\n    // convert to decimal and change luminosity\r\n    let rgb = '#', c, i;\r\n    for (i = 0; i < 3; i++) {\r\n      c = parseInt(hex.substr(i * 2, 2), 16);\r\n      c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n      rgb += ('00' + c).substr(c.length);\r\n    }\r\n    return rgb;\r\n  };\r\n\r\n  StateSetter(x, y, z) {\r\n    this.setState({refIDs: x}, () => {\r\n      this.setState({cIDs: y}, () => {\r\n        this.setState({cNames: z}, () => {\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  StateSetterPT(x, y, z) {\r\n    this.setState({ptIDs: x}, () => {\r\n      this.setState({pIDs: y}, () => {\r\n        this.setState({pNames: z}, () => {\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let dataClasses = [];\r\n    let dataPT = [];\r\n    getUserID().then(response => {\r\n      this.setState(\r\n          {User_ID: response.User_ID}, () => {\r\n\r\n            // Gets the Class Name, ID, TimeCode and DayCode Based on the\r\n            // user's ID  console.clear();\r\n            getClassSchedule(this.state.User_ID).then(response => {\r\n              this.setState({classSchedule: response}, () => {\r\n                dataClasses = [...this.state.classSchedule];\r\n                let ret = this.state.classSchedule.slice(0);\r\n                let refID;\r\n\r\n                (async() => {\r\n                  let x = this.state.refIDs;\r\n                  let y = this.state.cIDs;\r\n                  let z = this.state.cNames;\r\n                  ret.forEach((item) => {\r\n                        if (item.TimeCode < 10) {\r\n                          this.setState(\r\n                              {refID: item.DayCode + '.0' + item.TimeCode});\r\n                          refID = item.DayCode + '.0' + item.TimeCode;\r\n                        } else {\r\n                          this.setState(\r\n                              {refID: item.DayCode + '.' + item.TimeCode});\r\n                          refID = item.DayCode + '.' + item.TimeCode;\r\n                        }\r\n                        // noinspection DuplicatedCode\r\n                        if (!x.includes(refID)) {\r\n                          x.push(refID);\r\n                          y.push(item.ClassID);\r\n                          z.push(item.Name);\r\n                          const node = document.getElementById(refID);\r\n                          node.className = 'BusySlot';\r\n                          node.childNodes[0].textContent = item.Name;\r\n                          if (z.includes(item.Name)) {\r\n                            node.style.backgroundImage =\r\n                                'linear-gradient(to bottom right,'\r\n                                + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                                item.Name)] % 9] + ','\r\n                                + this.ColorLuminance(\r\n                                this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                    item.Name)]) % 9], -0.5) + ')';\r\n                          } else {\r\n                            node.style.backgroundImage =\r\n                                'linear-gradient(to bottom right,'\r\n                                + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                                item.Name)] % 9] + ','\r\n                                + this.ColorLuminance(\r\n                                this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                    item.Name)]) % 9], -0.5) + ')';\r\n                          }\r\n                        }\r\n                      },\r\n                  );\r\n                  await this.StateSetter(x, y, z);\r\n                })();\r\n              });\r\n            });\r\n\r\n            getPersonalSchedule(this.state.User_ID).then(response => {\r\n              this.setState({personalSchedule: response}, () => {\r\n                dataPT = [...this.state.personalSchedule];\r\n                this.props.userSchedule(dataClasses, dataPT);\r\n                let retPer = this.state.personalSchedule.slice(0);\r\n                let refID;\r\n\r\n                (async() => {\r\n                  let x = this.state.ptIDs;\r\n                  let y = this.state.pIDs;\r\n                  let z = this.state.pNames;\r\n                  retPer.forEach((item) => {\r\n                        if (item.Time < 10) {\r\n                          this.setState({refID: item.Day + '.0' + item.Time});\r\n                          refID = item.Day + '.0' + item.Time;\r\n                        } else {\r\n                          this.setState({refID: item.Day + '.' + item.Time});\r\n                          refID = item.Day + '.' + item.Time;\r\n                        }\r\n                        if (!x.includes(refID)) {\r\n                          x.push(refID);\r\n                          y.push(item.Coach_ID);\r\n                          z.push(item.CoachName);\r\n                          const node = document.getElementById(refID);\r\n                          node.className = 'PTSlot';\r\n                          node.childNodes[0].textContent = item.CoachName;\r\n                          node.style.backgroundImage = 'radial-gradient( #4c4c4c,'\r\n                                                       + this.ColorLuminance(\r\n                                  '#4C4C4C', -0.7) + ')';\r\n                        }\r\n                      },\r\n                  );\r\n                  await this.StateSetterPT(x, y, z);\r\n                })();\r\n              });\r\n            });\r\n\r\n          });\r\n    }).finally(() => this.props.toggleLoading());\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (\r\n        prevProps.DayCode !== this.props.DayCode\r\n        || prevProps.TimeCode !== this.props.TimeCode\r\n        || prevProps.flag !== this.props.flag\r\n    ) {\r\n\r\n      let refID;\r\n      if (this.props.TimeCode < 10) {\r\n        this.setState({refID: this.props.DayCode + '.0' + this.props.TimeCode});\r\n        refID = this.props.DayCode + '.0' + this.props.TimeCode;\r\n      } else {\r\n        this.setState({refID: this.props.DayCode + '.' + this.props.TimeCode});\r\n        refID = this.props.DayCode + '.' + this.props.TimeCode;\r\n      }\r\n\r\n      this.setState({flag: this.props.flag});\r\n      // Create a new array based on current state:\r\n      let x = this.state.refIDs.slice(0);\r\n      let y = this.state.cIDs.slice(0);\r\n      let z = this.state.cNames.slice(0);\r\n      let p = this.state.ptIDs.slice(0);\r\n\r\n      //Checks if the user wants to enroll or unenroll. Flag is true for enroll\r\n      // and false otherwise.\r\n      if (this.props.flag === true) {\r\n        if (this.props.invalid === true) {\r\n          Swal.fire(\r\n              'Please select a user first!',\r\n              '',\r\n              'error',\r\n          ).then();\r\n        } else {\r\n          //Checks if there is not any personal training or class scehduled for\r\n          // the user at that specific time\r\n          if (!p.includes(refID) && !x.includes(refID)) {\r\n            (async() => {\r\n\r\n              //Copies the tables for the Class timetable entries, Class ID's\r\n              // and Class names into temporary ones.\r\n              x.push(refID);\r\n              y.push(this.props.ClassID);\r\n              z.push(this.props.Name);\r\n\r\n              //waiting to copy all the tables before proceeding\r\n              await this.StateSetter(x, y, z);\r\n\r\n              //node is the div element containing the specified Class\r\n              // enrollment\r\n              const node = document.getElementById(refID);\r\n\r\n              //Sets that timetable entry as \"enrolled\"\r\n              node.className = 'BusySlot';\r\n              node.childNodes[0].textContent = this.props.Name;\r\n              if (z.includes(this.props.Name)) {\r\n                // node.style.backgroundColor =\r\n                // this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(item.Name)]];\r\n                node.style.backgroundImage = 'linear-gradient(to bottom right,'\r\n                                             + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                        this.props.Name)] % 9] + ','\r\n                                             + this.ColorLuminance(\r\n                        this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                            this.props.Name)]) % 9], -0.5) + ')';\r\n              } else {\r\n                // node.style.backgroundColor =\r\n                // this.state.ClassColors[item.ClassID];\r\n                node.style.backgroundImage = 'linear-gradient(to bottom right,'\r\n                                             + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                        this.props.Name)] % 9] + ','\r\n                                             + this.ColorLuminance(\r\n                        this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                            this.props.Name)]) % 9], -0.5) + ')';\r\n              }\r\n              enrollUser(this.state.cIDs[this.state.refIDs.indexOf(refID)],\r\n                  this.state.User_ID).then();\r\n            })();\r\n\r\n            // })();\r\n          } else {\r\n            Swal.fire(\r\n                'You have something else scheduled for that time',\r\n                '',\r\n                'error',\r\n            ).then();\r\n          }\r\n        }\r\n\r\n      } else {\r\n        if (this.props.flag === false) {\r\n          if (!p.includes(refID)) {\r\n            if (x.includes(refID)) {\r\n              if (this.props.ClassID\r\n                  === this.state.cIDs[this.state.refIDs.indexOf(refID)]) {\r\n                // console.clear();\r\n                (async() => {\r\n\r\n                  //wait to unenroll first and then remove the entries from the\r\n                  // arrays\r\n                  await unenrollUser(\r\n                      this.state.cIDs[this.state.refIDs.indexOf(refID)],\r\n                      this.state.User_ID,\r\n                  ).then();\r\n\r\n                  //Copy of timetable Class entry array\r\n                  const newList = this.state.refIDs.slice(0);\r\n                  newList.splice(this.state.refIDs.indexOf(refID), 1);\r\n\r\n                  //Copy of Class ID's array\r\n                  const newList2 = this.state.cIDs.slice(0);\r\n                  newList2.splice(this.state.refIDs.indexOf(refID), 1);\r\n\r\n                  //Copy of Class's Names array\r\n                  const newList3 = this.state.cNames.slice(0);\r\n                  newList3.splice(this.state.refIDs.indexOf(refID), 1);\r\n\r\n                  this.StateSetter(newList, newList2, newList3);\r\n                  const node = document.getElementById(refID);\r\n                  node.className = '';\r\n                  node.childNodes[0].textContent = '';\r\n                  node.style.backgroundImage = '';\r\n\r\n                })();\r\n              } else {\r\n                Swal.fire(\r\n                    'You are enrolled to another class at that time',\r\n                    '',\r\n                    'error',\r\n                ).then();\r\n              }\r\n            } else {\r\n              Swal.fire(\r\n                  'There is no class to unenroll from',\r\n                  '',\r\n                  'error',\r\n              ).then();\r\n            }\r\n          } else {\r\n            Swal.fire(\r\n                'You should speak with your coach in order to cancel a Personal Training session',\r\n                '',\r\n                'error',\r\n            ).then();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <div className = \"row\">\r\n            <div className = \"timetable\">\r\n              <div className = \"week-names\">\r\n                <div>monday</div>\r\n                <div>tuesday</div>\r\n                <div>w/day</div>\r\n                <div>thursday</div>\r\n                <div>friday</div>\r\n                <div>saturday</div>\r\n                <div className = \"weekend\">sunday</div>\r\n              </div>\r\n              <div className = \"time-interval\">\r\n                <div>8:00 - 09:00</div>\r\n                <div>09:00 - 10:00</div>\r\n                <div>10:00 - 11:00</div>\r\n                <div>11:00 - 12:00</div>\r\n                <div>12:00 - 13:00</div>\r\n                <div>13:00 - 14:00</div>\r\n                <div>14:00 - 15:00</div>\r\n                <div>15:00 - 16:00</div>\r\n                <div>16:00 - 17:00</div>\r\n                <div>17:00 - 18:00</div>\r\n                <div>18:00 - 19:00</div>\r\n                <div>19:00 - 20:00</div>\r\n              </div>\r\n              <div className = \"content\" ref = { this.myRef }>\r\n                { [...Array(6).keys()].map(x => (x + 1.01).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.02).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.03).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.04).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.05).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.06).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.07).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.08).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.09).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.10).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.11).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.12).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnrolledClassSchedule;","import React, {Component} from 'react';\r\nimport '../assets/styles/profile.css';\r\nimport '../assets/styles/timetable.css';\r\nimport SettingsProfile from '../common/SettingsProfile';\r\nimport ProfileInfo from '../common/ProfileInfo';\r\nimport BookClass from '../common/BookClass';\r\nimport Timetable\r\n    from '../common/EnrolledClassSchedule';\r\n// noinspection ES6CheckImport\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {isAuthenticated, loggedInVisit, updateProfileVisit} from '../../repository';\r\nimport {Modal} from \"reactstrap\";\r\n\r\nclass ProfileUser extends Component {\r\n    componentDidMount() {\r\n        loggedInVisit().then();\r\n        updateProfileVisit().then();\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ClassID: '',\r\n            DayCode: '',\r\n            TimeCode: '',\r\n            CoachID: '',\r\n            User_ID: '',\r\n            EnrollID: '',\r\n            flag: '',\r\n            classSchedule: [],\r\n            Name: '',\r\n            dataPT: [],\r\n            dataClasses: [],\r\n            loadingInfo: 2,\r\n            invalid: ''\r\n        };\r\n        this.handleSelections = this.handleSelections.bind(this);\r\n        this.toggleLoading = this.toggleLoading.bind(this);\r\n        this.handlePTClass = this.handlePTClass.bind(this);\r\n    }\r\n\r\n    handleSelections = (DayCode, TimeCode, flag, ClassID, Name, invalid) => {\r\n        this.setState({\r\n            DayCode,\r\n            TimeCode,\r\n            flag,\r\n            ClassID,\r\n            Name,\r\n            invalid\r\n        }, () => {\r\n\r\n        });\r\n\r\n    };\r\n\r\n    toggleLoading = () => {\r\n        this.setState({loadingInfo: this.state.loadingInfo - 1});\r\n    };\r\n    handlePTClass = (dataClasses, dataPT) => {\r\n        this.setState({dataPT, dataClasses});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id='profile' className=\"main-container container-fluid\">\r\n                {(navigator.userAgent.match(/Android/i)) &&\r\n                <NavLink to=\"/\"\r\n                         className={'logout btn btn-danger text-uppercase d-flex justify-content-center'}\r\n                         onClick={this.onLogOut}\r\n                >\r\n                    Logout <i className=\"fas fa-sign-out-alt\"/>\r\n                </NavLink>\r\n                }\r\n                {(this.props.userLevel === 'user') ? '' :\r\n                    <Redirect to=\"/\"/>}\r\n\r\n                <div className=\"container-fluid mb-4\">\r\n                    <div className=\"row \">\r\n                        <SettingsProfile dataPT={this.state.dataPT} classes={this.state.dataClasses}\r\n                                         userLevel={this.props.userLevel}/>\r\n                        <ProfileInfo loadingInfo={this.state.loadingInfo}\r\n                                     toggleLoading={this.toggleLoading}\r\n                        />\r\n                        <BookClass getSelections={this.handleSelections}/>\r\n                    </div>\r\n                </div>\r\n                <Timetable DayCode={this.state.DayCode}\r\n                           TimeCode={this.state.TimeCode}\r\n                           flag={this.state.flag}\r\n                           ClassID={this.state.ClassID}\r\n                           Name={this.state.Name}\r\n                           invalid={this.state.invalid}\r\n                           userSchedule={this.handlePTClass}\r\n                           toggleLoading={this.toggleLoading}\r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileUser;","import React, {Component} from 'react';\r\nimport '../assets/styles/BookDropdown.css'\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass SelectionPTCoach extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            day: '',\r\n            time: '',\r\n            flag: false,\r\n            selectionDay : '',\r\n            selectionTime : '',\r\n\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.handleDay = this.handleDay.bind(this);\r\n        this.handleTime = this.handleTime.bind(this);\r\n        this.clearOptions = this.clearOptions.bind(this);\r\n    }\r\n\r\n    handleDay = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            selectionDay : e.target.value,\r\n        }, () => {\r\n        });\r\n    };\r\n\r\n    handleTime = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            selectionTime : e.target.value,\r\n        }, () => {\r\n        });\r\n    };\r\n\r\n\r\n    onSubmit = () => {\r\n        if (this.state.selectionTime === '' || this.state.selectionDay === ''){\r\n            Swal.fire(\r\n                'Required selections are empty',\r\n                'Make sure that you have filled every selection first!',\r\n                'error',\r\n            ).then();\r\n        }else {\r\n            this.setState({flag: true},\r\n                () => {\r\n                    this.props.toogle(\r\n                        this.state.day,\r\n                        this.state.time,\r\n                        this.state.flag,\r\n                        this.state.Coach_ID,\r\n                    );\r\n                });\r\n        }\r\n    };\r\n\r\n    onDelete = () => {\r\n        if (this.state.selectionTime === '' || this.state.selectionDay === ''){\r\n            Swal.fire(\r\n                'Required selections are empty',\r\n                'Make sure that you have filled every selection first!',\r\n                'error',\r\n            ).then();\r\n        }else {\r\n            this.setState({flag: false},\r\n                () => {\r\n                    this.props.toogle(\r\n                        this.state.day,\r\n                        this.state.time,\r\n                        this.state.flag,\r\n                        this.state.Coach_ID,\r\n                    );\r\n                });\r\n        }\r\n\r\n    };\r\n\r\n    clearOptions() {\r\n        const timeNode = document.getElementById('TimePers');\r\n        timeNode.value = 0;\r\n        const dayNode = document.getElementById('DayPers');\r\n        dayNode.value = 0;\r\n    }\r\n\r\n    // noinspection JSUnusedLocalSymbols\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.userID !== this.props.userID) {\r\n            (async () => {\r\n                if (prevProps.userID !== this.props.userID) {\r\n                    await this.clearOptions();\r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"form smallerBack\" id=\"backBox\" >\r\n                    <h3 id=\"bmiHeading\"><b>C</b>hoose <b>D</b>ay and <b>T</b>ime</h3>\r\n                    <div className=\"row\" id=\"first-row\">\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <label htmlFor=\"DropDays\">Day:</label>\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"day\" id=\"DayPers\"\r\n                                    onChange={this.handleDay} required>\r\n                                <option value=\"0\" hidden>Day Option</option>\r\n                                <option value=\"1\">Monday</option>\r\n                                <option value=\"2\">Tuesday</option>\r\n                                <option value=\"3\">Wednesday</option>\r\n                                <option value=\"4\">Thursday</option>\r\n                                <option value=\"5\">Friday</option>\r\n                                <option value=\"6\">Saturday</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <label htmlFor=\"DropClass\">Time:</label>\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"time\" id=\"TimePers\"\r\n                                    onChange={this.handleTime} required>\r\n                                <option value=\"0\" hidden>Time Option</option>\r\n                                <option value=\"1\">08:00-09:00</option>\r\n                                <option value=\"2\">09:00-10:00</option>\r\n                                <option value=\"3\">10:00-11:00</option>\r\n                                <option value=\"4\">11:00-12:00</option>\r\n                                <option value=\"5\">12:00-13:00</option>\r\n                                <option value=\"6\">13:00-14:00</option>\r\n                                <option value=\"7\">14:00-15:00</option>\r\n                                <option value=\"8\">15:00-16:00</option>\r\n                                <option value=\"9\">16:00-17:00</option>\r\n                                <option value=\"10\">17:00-18:00</option>\r\n                                <option value=\"11\">18:00-19:00</option>\r\n                                <option value=\"12\">19:00-20:00</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <button type=\"button\" className=\"RowButton\" onClick={this.onSubmit}>Submit</button>\r\n                        </div>\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <button type=\"button\" className=\"RowButton\" onClick={this.onDelete}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectionPTCoach;","import React, {Component} from 'react';\r\nimport '../assets/styles/PersonalTrainingTimetable.css';\r\nimport {\r\n  insertPT,\r\n  deletePT,\r\n  getCoachTraining,\r\n  getCoachID, getPersonalSchedule, getClassSchedule,\r\n  getCoachClasses,\r\n}                         from '../../repository';\r\nimport Swal               from 'sweetalert2';\r\n\r\nclass CoachSchedule extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.state = {\r\n      Coach_ID : '',\r\n      User_ID  : '',\r\n      coachName: '',\r\n\r\n      clientNames: [],\r\n      flag       : false,\r\n      refIDsCoach: [],\r\n\r\n      refIDs     : [],\r\n      cIDs       : [],\r\n      cNames     : [],\r\n      Name       : '',\r\n      ClassColors: [\r\n        '#812029',\r\n        '#1A63D9',\r\n        '#CF1B1B',\r\n        '#FFAD1F',\r\n        '#704585',\r\n        '#53878C',\r\n        '#C97200',\r\n        '#489655',\r\n        '#158CA3',\r\n        '#9E134B',\r\n      ],\r\n    };\r\n\r\n    this.insertDeleteMethodStates = this.insertDeleteMethodStates.bind(this);\r\n    this.fillTable = this.fillTable.bind(this);\r\n    this.ColorLuminance = this.ColorLuminance.bind(this);\r\n    this.StateSetter = this.StateSetter.bind(this);\r\n  }\r\n\r\n  // Modals for error messages in case of wrong input.\r\n  toggleModalCoachBooked = () => {\r\n    Swal.fire(\r\n        'This time is unavailable.',\r\n        // 'The coach has another scheduled client or a class at this time.',\r\n        '',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalAnotherClient = () => {\r\n    Swal.fire(\r\n        'You cannot delete the Personal Training Session of a different client.',\r\n        'Please choose the appropriate client.',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalEmptyCell = () => {\r\n    Swal.fire(\r\n        'There is no Personal Training Session to delete here.',\r\n        '',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalClientHasClass = () => {\r\n    Swal.fire(\r\n        'The client has a class enrolled at this time.',\r\n        'You are not authorised to delete that.',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalClientHasClassInsert = () => {\r\n    Swal.fire(\r\n        'The client has a class enrolled at this time.',\r\n        'You cannot schedule a Personal Training Session.',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  //method responsible for displaying the enrolled classes and personal\r\n  // training according to the user data from the database\r\n  fillTable(coaches, clientNames, classRefIDs) {\r\n    let node;\r\n    for (let i = 1; i <= 6; i++) {\r\n      for (let x = 1; x <= 12; x++) {\r\n        let refID = '';\r\n        if (x < 10) {\r\n          refID = i + '.0' + x;\r\n        } else {\r\n          refID = i + '.' + x;\r\n        }\r\n        if (coaches.includes(refID)) {\r\n          node = document.getElementById(refID);\r\n          node.setAttribute('style', 'white-space: pre;');\r\n          node.className = 'coachBooked';\r\n          node.textContent = clientNames[coaches.indexOf(refID)];\r\n        } else {\r\n          if (classRefIDs.includes(refID) && !this.state.refIDs.includes(\r\n              refID)) {\r\n            node = document.getElementById(refID);\r\n            node.style.backgroundImage = '';\r\n            node.className = 'classesBackground';\r\n            node.textContent = '';\r\n          } else {\r\n            if (!this.state.refIDsCoach.includes(refID)\r\n                && !this.state.refIDs.includes(refID)) {\r\n              node = document.getElementById(refID);\r\n              node.style.backgroundImage = '';\r\n              node.className = '';\r\n              node.textContent = '';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  insertDeleteMethodStates() {\r\n    this.setState({\r\n      // refIDs: x,\r\n      User_ID: this.props.userID,\r\n      time   : this.props.time,\r\n      day    : this.props.day,\r\n    }, () => {\r\n      if (this.props.flag === true) {\r\n        insertPT(this.state).then();\r\n      } else {\r\n        deletePT(this.state).then();\r\n      }\r\n    });\r\n  }\r\n\r\n  // noinspection DuplicatedCode\r\n  ColorLuminance = (hex, lum) => {\r\n    // validate hex string\r\n    hex = String(hex).replace(/[^0-9a-f]/gi, '');\r\n    if (hex.length < 6) {\r\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    lum = lum || 0;\r\n    // convert to decimal and change luminosity\r\n    let rgb = '#', c, i;\r\n    for (i = 0; i < 3; i++) {\r\n      c = parseInt(hex.substr(i * 2, 2), 16);\r\n      c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n      rgb += ('00' + c).substr(c.length);\r\n    }\r\n    return rgb;\r\n  };\r\n\r\n  StateSetter(x, y, z) {\r\n    this.setState({refIDs: x}, () => {\r\n      this.setState({cIDs: y}, () => {\r\n        this.setState({cNames: z});\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.clear();\r\n    let coachID = '';\r\n    // let coachName = '';\r\n    getCoachID().then(response => {\r\n      this.setState(\r\n          {Coach_ID: response.Coach_ID}, () => {\r\n            coachID = response.Coach_ID;\r\n            // coachName = response.CoachName;\r\n            getCoachClasses(this.state.Coach_ID).then(response => {\r\n              let ret = response.slice(0);\r\n              let refID;\r\n              (async() => {\r\n                let x = this.state.refIDs;\r\n                let y = this.state.cIDs;\r\n                let z = this.state.cNames;\r\n                ret.forEach((item) => {\r\n                      if (item.TimeCode < 10) {\r\n                        this.setState(\r\n                            {refID: item.DayCode + '.0' + item.TimeCode});\r\n                        refID = item.DayCode + '.0' + item.TimeCode;\r\n                      } else {\r\n                        this.setState(\r\n                            {refID: item.DayCode + '.' + item.TimeCode});\r\n                        refID = item.DayCode + '.' + item.TimeCode;\r\n                      }\r\n                      // noinspection DuplicatedCode\r\n                      if (!x.includes(refID)) {\r\n                        x.push(refID);\r\n                        y.push(item.ClassID);\r\n                        z.push(item.Name);\r\n                        let node = document.getElementById(refID);\r\n                        node.className = 'BusySlot';\r\n                        node.childNodes[0].textContent = item.Name;\r\n\r\n                        if (z.includes(item.Name)) {\r\n                          node.style.backgroundImage =\r\n                              'linear-gradient(to bottom right,'\r\n                              + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                              item.Name)] % 9] + ','\r\n                              + this.ColorLuminance(\r\n                              this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                  item.Name)]) % 9], -0.5) + ')';\r\n                        } else {\r\n                          node.style.backgroundImage =\r\n                              'linear-gradient(to bottom right,'\r\n                              + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                              item.Name)] % 9] + ','\r\n                              + this.ColorLuminance(\r\n                              this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                  item.Name)]) % 9], -0.5) + ')';\r\n                        }\r\n                      }\r\n                    },\r\n                );\r\n                await this.StateSetter(x, y, z);\r\n              })();\r\n            });\r\n          });\r\n\r\n      (async() => {\r\n        let trainingScheduleCoach = [];\r\n\r\n        await getCoachTraining(coachID).then(response => {\r\n          trainingScheduleCoach = response;\r\n        });\r\n\r\n        let retCoach = [...trainingScheduleCoach];\r\n        let refID = '';\r\n        let refIDsCoach = [];\r\n        let clientNames = [];\r\n        // Finding the personal training schedule of the coach\r\n        retCoach.forEach((coach) => {\r\n              if (coach.Time < 10) {\r\n                refID = coach.Day + '.0' + coach.Time;\r\n              } else {\r\n                refID = coach.Day + '.' + coach.Time;\r\n              }\r\n              // Create a new array based on current state:\r\n              if (!refIDsCoach.includes(refID)) {\r\n                refIDsCoach.push(refID);\r\n                let fullName = coach.Name + '\\r\\n' + coach.Surname;\r\n                clientNames.push(fullName);\r\n              }\r\n            },\r\n        );\r\n        await this.setState(\r\n            {refIDsCoach: refIDsCoach, clientNames: clientNames});\r\n        // Inserting to table\r\n\r\n        await this.fillTable(this.state.refIDsCoach, this.state.clientNames,\r\n            []);\r\n      })();\r\n\r\n    });\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.day !== this.props.day || prevProps.time !== this.props.time\r\n        || prevProps.flag !== this.props.flag || prevProps.userID\r\n        !== this.props.userID || prevProps.userName !== this.props.userName) {\r\n      console.clear();\r\n      (async() => {\r\n        let user = this.props.userID;\r\n        if (user === '') {\r\n          Swal.fire(\r\n              'Please select a user first!',\r\n              '',\r\n              'error',\r\n          ).then();\r\n          return;\r\n        }\r\n\r\n        let refID = '';\r\n        //  Client's PT and Classes\r\n        let personalTraining = [];\r\n        let classSchedule = [];\r\n\r\n        if (this.props.userID !== '') {\r\n          //  Retrieving the Personal Schedule of the client (Classes and PT)\r\n          await getPersonalSchedule(this.props.userID).then(response => {\r\n            personalTraining = response;\r\n\r\n          });\r\n          await getClassSchedule(this.props.userID).then(response => {\r\n            classSchedule = response;\r\n          });\r\n        }\r\n\r\n        // ****************** Filling the arrays ***************************\r\n        // -------------------- Class Schedule -------------------------\r\n        let ret = [...classSchedule];\r\n        let classRefIDs = [];\r\n        // for loop for traversing fetched data for ClassSchedule and filling\r\n        // tables accordingly\r\n        ret.forEach((item) => {\r\n              if (item.TimeCode < 10) {\r\n                refID = item.DayCode + '.0' + item.TimeCode;\r\n              } else {\r\n                refID = item.DayCode + '.' + item.TimeCode;\r\n              }\r\n              if (!classRefIDs.includes(refID)) {\r\n                classRefIDs.push(refID);\r\n              }\r\n            },\r\n        );\r\n\r\n        // ------------------------ Personal Training --------------------------\r\n        ret = [...personalTraining];\r\n        refID = '';\r\n        let coachID = '';\r\n        let ClientRefIDs = [];\r\n        if (ret.length !== 0) {\r\n          // let coachName = '';\r\n          ret.forEach((item) => {\r\n                if (item.Time < 10) {\r\n                  refID = item.Day + '.0' + item.Time;\r\n                } else {\r\n                  refID = item.Day + '.' + item.Time;\r\n                }\r\n                // Create a new array based on current state:\r\n                coachID = item.Coach_ID;\r\n                // coachName = item.CoachName + ' ' + item.Surname;\r\n                if (!ClientRefIDs.includes(refID)) {\r\n                  ClientRefIDs.push(refID);\r\n                }\r\n              },\r\n          );\r\n        }\r\n\r\n        /* Printing the Client Classes */\r\n        await this.fillTable(this.state.refIDsCoach, this.state.clientNames,\r\n            classRefIDs);\r\n\r\n        // Checking if the client has the same coach assigned for PT\r\n        if (coachID !== this.state.Coach_ID) {\r\n          Swal.fire(\r\n              'A different coach is registered for personal training for this client',\r\n              'You cannot add a personal schedule session to this client',\r\n              'error',\r\n          ).then();\r\n          return;\r\n        }\r\n        // *********** Getting day and time from box select ***************\r\n        let time = this.props.time;\r\n        let day = this.props.day;\r\n        if (this.props.time < 10) {\r\n          refID = day + '.0' + time;\r\n        } else {\r\n          refID = day + '.' + time;\r\n        }\r\n        if (prevProps.userID !== this.props.userID) {\r\n          refID = '';\r\n        }\r\n\r\n        if ((time === '' || day === '')) {\r\n          refID = '';\r\n        }\r\n\r\n        let refIDsCoach = [...this.state.refIDsCoach];\r\n        let clientNames = [...this.state.clientNames];\r\n        if (!this.state.refIDsCoach.includes(refID)\r\n            && this.props.flag === true && refID !== ''\r\n            && !classRefIDs.includes(\r\n                refID) && !this.state.refIDs.includes(refID)) {\r\n\r\n          refIDsCoach.push(refID);\r\n          clientNames.push(this.props.userName);\r\n          await this.setState(\r\n              {refIDsCoach: refIDsCoach, clientNames: clientNames});\r\n          await this.insertDeleteMethodStates();\r\n        } else {\r\n          let pos = ClientRefIDs.indexOf(refID);\r\n          let posCoach = refIDsCoach.indexOf(refID);\r\n          if (refIDsCoach.includes(refID) && ClientRefIDs.includes(refID)\r\n              && this.props.flag === false && refID !== '') {\r\n            ClientRefIDs.splice(pos, 1);\r\n            refIDsCoach.splice(posCoach, 1);\r\n            clientNames.splice(posCoach, 1);\r\n            await this.setState(\r\n                {refIDsCoach: refIDsCoach, clientNames: clientNames});\r\n\r\n            await this.insertDeleteMethodStates();\r\n          } else {\r\n            /* Conflict and Error Messages */\r\n            // Insert Warnings\r\n            // Coach has another PT or class at this time\r\n            if ((refIDsCoach.includes(refID) || this.state.refIDs.includes(\r\n                refID))\r\n                && this.props.flag === true) {\r\n              this.toggleModalCoachBooked();\r\n              coachID = '';\r\n            }\r\n            // User has a class at that time.\r\n            if ((!refIDsCoach.includes(refID) && !this.state.refIDs.includes(\r\n                refID))\r\n                && classRefIDs.includes(refID) && this.props.flag === true) {\r\n              this.toggleModalClientHasClassInsert();\r\n              coachID = '';\r\n            }\r\n\r\n            // Deletion Warnings\r\n            // Different Client\r\n            if ((refIDsCoach.includes(refID) && !ClientRefIDs.includes(refID))\r\n                && this.props.flag === false) {\r\n              this.toggleModalAnotherClient();\r\n              coachID = '';\r\n            }\r\n            //Empty Cell\r\n            if (!refIDsCoach.includes(refID) && !ClientRefIDs.includes(refID) &&\r\n                !this.state.refIDs.includes(refID) && !classRefIDs.includes(\r\n                    refID) &&\r\n                this.props.flag === false && refID !== '') {\r\n              this.toggleModalEmptyCell();\r\n              coachID = '';\r\n            }\r\n            // Client has a class\r\n            if (classRefIDs.includes(refID) && this.props.flag === false) {\r\n              this.toggleModalClientHasClass();\r\n              coachID = '';\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n        await this.fillTable(refIDsCoach, clientNames, classRefIDs);\r\n      })();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = { 'container' }>\r\n          <div className = \"row\">\r\n            <div className = \"timetable\">\r\n              <div className = \"week-names\">\r\n                <div>monday</div>\r\n                <div>tuesday</div>\r\n                <div>w/day</div>\r\n                <div>thursday</div>\r\n                <div>friday</div>\r\n                <div>saturday</div>\r\n                <div className = \"weekend\">sunday</div>\r\n              </div>\r\n              <div className = \"time-interval\">\r\n                <div>8:00 - 09:00</div>\r\n                <div>09:00 - 10:00</div>\r\n                <div>10:00 - 11:00</div>\r\n                <div>11:00 - 12:00</div>\r\n                <div>12:00 - 13:00</div>\r\n                <div>13:00 - 14:00</div>\r\n                <div>14:00 - 15:00</div>\r\n                <div>15:00 - 16:00</div>\r\n                <div>16:00 - 17:00</div>\r\n                <div>17:00 - 18:00</div>\r\n                <div>18:00 - 19:00</div>\r\n                <div>19:00 - 20:00</div>\r\n              </div>\r\n              <div className = \"content\">\r\n                { [...Array(6).keys()].map(x => (x + 1.01).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.02).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.03).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.04).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.05).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.06).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.07).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.08).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.09).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.10).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.11).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.12).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div className = { 'row' }>\r\n            <div className = 'col-sm-12 col-md-12 legendsBoxPT'>\r\n              <div className = \"sameRow\">\r\n                <div className = 'classBookedSmall' />\r\n                <small>&emsp;Client Class Enrolled</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CoachSchedule;","import React, {Component} from 'react';\r\n// noinspection ES6CheckImport\r\nimport {Redirect}         from 'react-router-dom';\r\nimport '../assets/styles/adminCoachProfile.css';\r\nimport {\r\n  getPrivateAnnouncementsAdmin,\r\n  userDetails,\r\n  updateAnnouncement,\r\n  deleteAnnouncement,\r\n  addPrivateAnnouncement,\r\n  loggedInVisit,\r\n  updateProfileVisit,\r\n  staffData,\r\n}                         from '../../repository';\r\n\r\nimport AnnouncementModal         from '../common/AnnouncementModal';\r\nimport {Button}                  from 'reactstrap';\r\nimport Box                       from '../common/SelectionPTCoach';\r\nimport Timetable                 from '../common/CoachSchedule';\r\nimport AnnouncementsPrivateModal from '../common/AnnouncementsPrivateModal';\r\nimport Swal                      from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport ButtonLoader              from '../common/ButtonLoader';\r\nimport ToggleModal               from '../common/ToggleModal';\r\nimport MessagesModalAdminCoach   from '../common/MessagesModalAdminCoach';\r\n\r\nclass ProfileCoach extends Component {\r\n\r\n  // noinspection DuplicatedCode\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nameStart            : '',\r\n      Name                 : '',\r\n      Surname              : '',\r\n      Email                : '',\r\n      username             : '',\r\n      searchResults        : [],\r\n      announcements        : [],\r\n      modal                : false,\r\n      modal2               : false,\r\n      modalTitle           : '',\r\n      modalMessage         : '',\r\n      modalAnnId           : '',\r\n      day                  : '',\r\n      time                 : '',\r\n      flag                 : false,\r\n      image                : '',\r\n      User_ID              : '',\r\n      Coach_ID             : '',\r\n      loadingSearchUser    : false,\r\n      loadingInfo          : false,\r\n      trainingScheduleCoach: [],\r\n      cleared              : false,\r\n      ownerName            : '',\r\n    };\r\n\r\n    this.toggleAnnouncementsData = this.toggleAnnouncementsData.bind(this);\r\n    this.onAnnouncementSubmit = this.onAnnouncementSubmit.bind(this);\r\n    this.toggleAnnouncementsData2 = this.toggleAnnouncementsData2.bind(this);\r\n    this.onAnnouncementSubmit2 = this.onAnnouncementSubmit2.bind(this);\r\n    this.handleDayTimeChange = this.handleDayTimeChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.toggleAnnouncements = this.toggleAnnouncements.bind(this);\r\n    this.toggleAnnouncements2 = this.toggleAnnouncements2.bind(this);\r\n    this.searchButton = this.searchButton.bind(this);\r\n    this.userDropdown = this.userDropdown.bind(this);\r\n    this.onAnnouncementDelete = this.onAnnouncementDelete.bind(this);\r\n    this.clearOptions = this.clearOptions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    loggedInVisit().then();\r\n    updateProfileVisit().then();\r\n    staffData().then(response => {\r\n      this.setState({ownerName: response.username});\r\n    });\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.clearOptions();\r\n    this.setState({loadingSearchUser: true}, () => {\r\n      userDetails(this.state.nameStart)\r\n          .then(response => {\r\n            this.setState({searchResults: response, loadingSearchUser: false});\r\n          });\r\n    });\r\n  };\r\n\r\n  toggleMessages = () => {\r\n    this.setState({modalMessages: !this.state.modalMessages});\r\n  };\r\n\r\n  // noinspection DuplicatedCode\r\n  onAnnouncementSubmit = async(Title, Message, Ann_ID) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === this.state.announcements[this.state.modalAnnId].Title\r\n        && Message\r\n        === this.state.announcements[this.state.modalAnnId].Message) {\r\n      Swal.fire(\r\n          'Please give new data to update',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === '' || Message === '') {\r\n      Swal.fire(\r\n          'Please fill in all boxes',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await updateAnnouncement(Ann_ID, Title, Message).then(response => {\r\n      this.setState({\r\n        announcements: this.state.announcements.map(ann => {\r\n          let x = ann;\r\n          if (ann.ANNOUNCEMENT_ID === response.ANNOUNCEMENT_ID) {\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Title = Title;\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Message = Message;\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Ann_ID = Ann_ID;\r\n          }\r\n          return x;\r\n        }),\r\n      });\r\n      this.toggle();\r\n    }).then(() => {\r\n      flag = true;\r\n      Swal.fire(\r\n          'Private Announcement was updated successfully',\r\n          '',\r\n          'success',\r\n      );\r\n      this.toggle();\r\n    }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ));\r\n\r\n    return flag;\r\n  };\r\n\r\n  // noinspection DuplicatedCode\r\n  onAnnouncementDelete = async(ANNOUNCEMENT_ID) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then(async(result) => {\r\n      if (result.value) {\r\n        await deleteAnnouncement(\r\n            this.state.announcements[ANNOUNCEMENT_ID].ANNOUNCEMENT_ID)\r\n            .then(() => {\r\n              this.setState({\r\n                announcements: this.state.announcements.filter(\r\n                    ann => ann.ANNOUNCEMENT_ID\r\n                           !== this.state.announcements[ANNOUNCEMENT_ID].ANNOUNCEMENT_ID),\r\n              }, () => Swal.fire(\r\n                  'Private Announcement deleted successfully',\r\n                  '',\r\n                  'success',\r\n              ));\r\n              flag = true;\r\n            })\r\n            .catch(() => Swal.fire(\r\n                'Something went wrong',\r\n                'Please try again...',\r\n                'error',\r\n            ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Private Announcement is safe :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n\r\n    return flag;\r\n  };\r\n\r\n  // noinspection DuplicatedCode\r\n  onAnnouncementSubmit2 = async(Title, Message) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (!this.state.username || this.state.username === '') {\r\n      Swal.fire(\r\n          'Please select a user first',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === '' || Message === '') {\r\n      Swal.fire(\r\n          'Please fill in all boxes',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await addPrivateAnnouncement(Title, Message, this.state.username)\r\n        .then(response => {\r\n          let prevAnn = this.state.announcements.slice(0);\r\n          prevAnn.push(\r\n              {\r\n                ANNOUNCEMENT_ID: response.data.ANNOUNCEMENT_ID,\r\n                Title          : Title,\r\n                Message        : Message,\r\n                TIMESTAMP      : new Date().toISOString(),\r\n              });\r\n          this.setState({announcements: prevAnn});\r\n        }).then(() => {\r\n          flag = true;\r\n          Swal.fire(\r\n              'Private Announcement added successfully',\r\n              '',\r\n              'success',\r\n          );\r\n          this.toggle2();\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n\r\n    return flag;\r\n  };\r\n\r\n  toggle = () => {\r\n    if (this.state.level <= 1) {\r\n      return;\r\n    }\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  toggle2 = () => {\r\n    if (this.state.level <= 1) {\r\n      return;\r\n    }\r\n    this.setState({modal2: !this.state.modal2});\r\n  };\r\n\r\n  searchButton = (e) => {\r\n    this.setState({nameStart: e.target.value});\r\n  };\r\n\r\n  userDropdown = (e) => {\r\n    const username = e.target.value;\r\n    const user = this.state.searchResults.find(\r\n        usr => usr.username === username);\r\n    if (!user) {\r\n      return null;\r\n    }\r\n\r\n    this.setState({loadingInfo: true}, async() => {\r\n      await this.updateCoaches(user, username);\r\n      await this.updatePrivateAnnouncements(username);\r\n      this.setState({loadingInfo: false});\r\n    });\r\n  };\r\n\r\n  updateCoaches = async(user, username) => {\r\n    return new Promise((resolve) => {\r\n      this.setState({\r\n        Name   : user.Name,\r\n        Surname: user.Surname,\r\n        Email  : user.Email,\r\n        username,\r\n        // image: user.image,\r\n        User_ID: user.User_ID,\r\n        cleared: false,\r\n      }, () => {\r\n      });\r\n      return resolve();\r\n    });\r\n  };\r\n\r\n  updatePrivateAnnouncements = async(username) => {\r\n    return new Promise((resolve) => {\r\n      getPrivateAnnouncementsAdmin(username).then(response => {\r\n        this.setState({announcements: response.data.announcements});\r\n      });\r\n      return resolve();\r\n    });\r\n  };\r\n\r\n  toggleAnnouncements = () => {\r\n    this.setState({modalAnnouncements: !this.state.modalAnnouncements});\r\n  };\r\n\r\n  toggleAnnouncements2 = () => {\r\n    this.setState({modalAnnouncements2: !this.state.modalAnnouncements2});\r\n  };\r\n\r\n  handleDayTimeChange = (day, time, flag, Coach_ID) => {\r\n    this.setState({day, time, flag, Coach_ID}, () => {\r\n    });\r\n  };\r\n\r\n  toggleAnnouncementsData = (e) => {\r\n    const x = this.state.announcements[e.target.id - 100];\r\n    if (x === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      modalTitle  : x.Title,\r\n      modalMessage: x.Message,\r\n      modalAnnId  : e.target.id - 100,\r\n    }, () => {\r\n      this.toggleAnnouncements();\r\n    });\r\n  };\r\n\r\n  toggleAnnouncementsData2 = () => {\r\n    this.toggleAnnouncements2();\r\n  };\r\n\r\n  clearOptions() {\r\n    this.setState({User_ID: '', announcements: [], cleared: true});\r\n    const clientList = document.getElementById('userList');\r\n    clientList.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div id = 'profile' className = \"\">\r\n          { (this.props.userLevel === 'coach') ? '' : <Redirect to = \"/\" /> }\r\n          <div className = \"container-back\">\r\n            <div className = \"row\">\r\n              <div className = \"col-md-4\">\r\n                <h4>Search for Client:</h4>\r\n                <form className = \"adminViewClient\">\r\n                  <div className = \"d-flex bd-highlight\">\r\n                    <div className = \"p-lg-2 flex-fill w-100\">\r\n                      <input className = \"h-100 w-100 m-0\"\r\n                             name = { 'Name' }\r\n                             onChange = { this.searchButton }\r\n                             type = \"text\"\r\n                             placeholder = \"Search\"\r\n                             aria-label = \"Search\"\r\n                             id = \"searchClient\"\r\n                      />\r\n                    </div>\r\n                    <div className = \"p-sm-1 flex-fill bd-highlight \">\r\n                      <ButtonLoader text = { '' }\r\n                                    textIcon = { true }\r\n                                    loadingText = { '' }\r\n                                    size = { 'lg' }\r\n                                    type = { 'submit' }\r\n                                    onClick = { this.onSubmit }\r\n                                    loading = { this.state.loadingSearchUser }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <br />\r\n                <div className = \"form-group\">\r\n                  <label htmlFor = \"userList\"><h6>Clients Retrieved:</h6>\r\n                  </label>\r\n                  <select className = \"form-control\"\r\n                          name = { 'username' }\r\n                          id = \"userList\"\r\n                          onChange = { this.userDropdown }\r\n                          required\r\n                  >\r\n                    <option value = \"\" hidden>Client List Generated</option>\r\n                    { this.state.searchResults.map((res, index) => {\r\n                      return <option value = { res.username } key = { index }>\r\n                        { res.Name } { res.Surname } { res.username }\r\n                      </option>;\r\n                    })\r\n                    }\r\n\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className = \"col-md-4\">\r\n                <Box toogle = { this.handleDayTimeChange }\r\n                     userID = { this.state.User_ID }\r\n                />\r\n              </div>\r\n              <div className = \"col-md-4\">\r\n                <label htmlFor = \"comment\"><h4>Messages:</h4></label>\r\n                <div className = \"form-group\">\r\n                  <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                          onClick = { this.toggleMessages }\r\n                          style = { {width: '100%'} }\r\n                  >\r\n                    <i className = \"scnd-font-color fa fa-envelope\" /> Exchange\r\n                                                                       Messages\r\n                                                                       with this\r\n                                                                       Client\r\n                    { this.state.TotalMessages > 0 &&\r\n                      <div className = \"menu-box-number\">{ this.state.TotalMessages }</div> }\r\n                  </Button>\r\n                  <ToggleModal\r\n                      modal = { this.state.modalMessages }\r\n                      toggle = { this.toggleMessages }\r\n                      modalSize = { 'md' }\r\n                      modalHeader = { 'Messages' }\r\n                      modalBody = {\r\n                        <MessagesModalAdminCoach\r\n                            userName = { this.state.ownerName }\r\n                            userLevel = { this.props.userLevel }\r\n                            TotalMessages = { this.state.TotalMessages }\r\n                            toggleTotalMessages = { this.toggleTotalMessages }\r\n                        /> }\r\n                  />\r\n                </div>\r\n                <br />\r\n                <label htmlFor = \"comment\"><h4>Announcements:</h4></label>\r\n                <div className = \"menu-box-tab menu-text\" id = \"EditAnns\">\r\n                  { this.state.announcements.sort(\r\n                      function(a, b) {\r\n                        return b.ANNOUNCEMENT_ID\r\n                               - a.ANNOUNCEMENT_ID;\r\n                      }).map((ann, index) => {\r\n                    return <Button className = \"nav-link menu-box-tab menu-text\"\r\n                                   onClick = { this.toggleAnnouncementsData.bind(\r\n                                       this) } id = { index + 100 }\r\n                                   key = { index }\r\n                    ><i style = { {marginRight: 10 + 'px'} }\r\n                        className = \"scnd-font-color fa fa-tasks\"\r\n                    />\r\n                      { ann.Title }{ <p> (</p> }{ ann.TIMESTAMP[0] }\r\n                      { ann.TIMESTAMP[1] }{ ann.TIMESTAMP[2] }{ ann.TIMESTAMP[3] }{ ann.TIMESTAMP[4] }{ ann.TIMESTAMP[5] }\r\n                      { ann.TIMESTAMP[6] }{ ann.TIMESTAMP[7] } { ann.TIMESTAMP[8] }{ ann.TIMESTAMP[9] }{\r\n                        <p\r\n                            id = \"extra\"\r\n                        >)</p> }\r\n                    </Button>;\r\n                  }) }\r\n\r\n                </div>\r\n                <Button id = \"addAnn\"\r\n                        className = { ' edit nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleAnnouncements2 }\r\n                >\r\n                  <i style = { {marginRight: 10 + 'px'} }\r\n                     className = \"scnd-font-color fa fa-tasks\"\r\n                  /> Add Announcement\r\n                </Button>\r\n                <AnnouncementsPrivateModal\r\n                    onSubmit = { this.onAnnouncementSubmit2 }\r\n                    toggle = { this.toggleAnnouncements2 }\r\n                    modal = { this.state.modalAnnouncements2 }\r\n                    resetOnSubmit = { true }\r\n                />\r\n                <AnnouncementModal onSubmit = { this.onAnnouncementSubmit }\r\n                                   DeleteAnn = { this.onAnnouncementDelete }\r\n                                   toggle = { this.toggleAnnouncements }\r\n                                   modal = { this.state.modalAnnouncements }\r\n                                   announcements = { this.state.announcements }\r\n                                   title = { this.state.modalTitle }\r\n                                   message = { this.state.modalMessage }\r\n                                   announcement_id = { this.state.modalAnnId }\r\n                                   isPrivate = { true }\r\n                />\r\n\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div className = \"row\">\r\n              <div id = \"timeTableHeading\">Personal Training Schedule\r\n              </div>\r\n              <div className = \"col-md-12 col-lg-12\">\r\n                <Timetable day = { this.state.day }\r\n                           time = { this.state.time }\r\n                           flag = { this.state.flag }\r\n                           coachID = { this.state.Coach_ID }\r\n                           userID = { this.state.User_ID }\r\n                           userName = { this.state.Name + '\\r\\n'\r\n                                        + this.state.Surname }\r\n                           cleared = { this.state.cleared }\r\n                           invalid = { this.state.invalid }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default ProfileCoach;","import React, {Component}             from 'react';\r\nimport '../assets/styles/classes.css';\r\nimport {AnimatedOnScroll}             from 'react-animated-css-onscroll';\r\nimport {updateClassesVisit, validURL} from '../../repository';\r\n\r\nclass Classes extends Component {\r\n\r\n  componentDidMount() {\r\n    updateClassesVisit().then();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <section className = \"classes-section\" id = \"classes\">\r\n          <div className = \"container\">\r\n            <div className = \"page-title\">\r\n              <h1>Our Classes</h1>\r\n            </div>\r\n            <div className = \"row\">\r\n              { this.props.stylesheetData['Class']['classes'].map((c, i) => {\r\n                return (\r\n                    <div key = { i } className = \"col-md-4 col-sm-6\">\r\n                      <div className = \"single-classes\">\r\n                        <div className = \"classes-img\">\r\n                          <img src = { validURL(c.src)\r\n                              ? c.src\r\n                              : process.env.PUBLIC_URL + c.src }\r\n                               className = \"rounded-corners\"\r\n                               alt = \"\"\r\n                          />\r\n                        </div>\r\n                        <div className = \"classes-text\">\r\n                          <h5>{ c.title }</h5>\r\n                          <p>{ c.text }</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                );\r\n              }) }\r\n            </div>\r\n          </div>\r\n          <AnimatedOnScroll animationIn = \"zoomInUp\">\r\n            <div className = 'container'>\r\n              <div className = 'full-width-image'>\r\n                <img src = { validURL(\r\n                    this.props.stylesheetData['Class']['timetable'].src)\r\n                    ? this.props.stylesheetData['Class']['timetable'].src\r\n                    : process.env.PUBLIC_URL\r\n                      + this.props.stylesheetData['Class']['timetable'].src }\r\n                     alt = \"timetable\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </AnimatedOnScroll>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Classes;","import { useEffect } from \"react\";\r\n// noinspection ES6CheckImport\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = () => {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    // noinspection JSConstructorReturnsPrimitive\r\n    return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React               from 'react';\r\n// noinspection ES6CheckImport\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isAuthenticated } from '../repository';\r\n\r\nconst PrivateRoute = ({ component: Component, userLevel: UserLevel, ...rest }) => (\r\n    <Route\r\n        { ...rest }\r\n        render = { props =>\r\n            isAuthenticated() ? (\r\n                <Component userLevel = { UserLevel } { ...props } />\r\n            ) : (\r\n                <Redirect to = { '/' } />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React, {Component} from 'react';\r\nimport '../assets/styles/forgotPassword.css'\r\nimport {newPassword} from \"../../repository\";\r\n\r\nclass forgotPassword extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            email:'',\r\n            username:'',\r\n            messageFromServer:'',\r\n            showError:false,\r\n            sendingEmail: false,\r\n            confirming: true,\r\n        };\r\n        this.onMailChange = this.onMailChange.bind(this);\r\n        this.sendEmailPass = this.sendEmailPass.bind(this);\r\n\r\n    }\r\n\r\n    onMailChange = (e) =>{\r\n        this.setState({email: e.target.value});\r\n    };\r\n\r\n    sendEmailPass=() =>{\r\n      if(this.state.email ===''){\r\n          this.setState({\r\n              messageFromServer:'',\r\n          });\r\n      }else{\r\n            const input ={\r\n                email: this.state.email,\r\n            };\r\n            newPassword(input)\r\n                .then(()=>{\r\n                    alert(\"done.\");\r\n                })\r\n                .catch(error =>{\r\n                    alert(\"not done.\"+error);\r\n                })\r\n                // .then(response =>{\r\n                //     if(response.data ==='email not in db'){\r\n                //         this.setState({\r\n                //             showError: true,\r\n                //             messageFromServer:'',\r\n                //         });\r\n                //     }else if(response.data ==='recovery email sent'){\r\n                //         this.setState({\r\n                //             showError: false,\r\n                //             messageFromServer: 'recovery email sent',\r\n                //         });\r\n                //     }\r\n                // })\r\n                // .catch(error=>{\r\n                // });\r\n      }\r\n    };\r\n    render() {\r\n        return(\r\n            <div id={\"ForgotPassword\"}>\r\n                <div className={\"PasswordContainer\"}>\r\n                    <div className={\"PageHeader\"}>\r\n                        <h1>Forgot your password?</h1>\r\n                    </div>\r\n                    <p>Enter your email.</p>\r\n                    <form className={\"passwordForm\"}>\r\n                        <input type={\"email\"} className={\"emailText\"} onChange={this.onMailChange}/>\r\n                        <input type={\"submit\"} className={\"emailSubmit\"} value={\"Submit\"} onClick={this.sendEmailPass}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default forgotPassword;\r\n","import React, {Component} from \"react\";\r\nimport '../assets/styles/VerifyEmail.css';\r\nimport {lastVerify} from \"../../repository\";\r\n\r\nclass VerifyEmail extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            // token:'',\r\n            confirm:false,\r\n        };\r\n    }\r\n\r\n   componentDidMount() {\r\n       const { id } = this.props.match.params;\r\n       const data = {\r\n           secret: id,\r\n       };\r\n       lastVerify(data)\r\n           .then(()=>{\r\n               // alert(\"Account is verified! Please Proceed to Login!.\");\r\n               this.setState({confirm: true});\r\n           })\r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <div id={\"VerifyEmail\"}>\r\n                <div className={\"PasswordContainer\"}>\r\n                    <div className={\"PageHeader\"}>\r\n                        <h1>Verify Email</h1>\r\n                    </div>\r\n                    <div>\r\n                        {this.state.confirm ?(\r\n                            <div>\r\n                                <h1>Your account was successfully verified!.</h1>\r\n                            </div>\r\n                        ):(\r\n                            <h1>There was an error!</h1>\r\n                        )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default VerifyEmail;\r\n","import React, {Component} from \"react\";\r\n\r\n// export const ResetPassword = ({ match }) => ( <div> <h3>ID: {match.params.id}</h3> </div> );\r\n\r\nimport '../assets/styles/resetPassword.css';\r\nimport {resetPass} from \"../../repository\";\r\n\r\nclass ResetPassword extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            username:'',\r\n            password:'',\r\n            confirmPassword:'',\r\n            confirm:false,\r\n            isLoading: false,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange =(e)=>{\r\n        this.setState({[e.target.name]: e.target.value})\r\n    };\r\n\r\n    getID =()=>{\r\n        const { id } = this.props.match.params;\r\n        this.setState({confirm: false});\r\n        if(this.state.password !== this.state.confirmPassword){\r\n            alert(\"Passwords don't match\");\r\n        }\r\n        const data ={\r\n            token: id,\r\n            username:this.state.username,\r\n            password: this.state.password,\r\n        };\r\n        //ResetPassword is working, but i need to fix the submit button\r\n        //so it can goes to home. However, it must shows if it was success or not.\r\n        //Last, users creds are at URL not sure why.\r\n        //Today, i need to fix Verification!!!.\r\n        this.setState({isLoading: true});\r\n        resetPass(data)\r\n            .then(() => {\r\n                alert(\"Error.\")\r\n            })\r\n            // .then((response) => {\r\n            //         if(response.data ==='Success reset.'){\r\n            //             alert(\"Password changed successfully. Proceed to log in. \")\r\n            //         }else if(response.data ==='Failed to reset.'){\r\n            //             alert(\"There was an error! Please check your credentials.\")\r\n            //         }\r\n            // })\r\n            // .catch((error)=>{\r\n            // })\r\n    };\r\n    render() {\r\n        return(\r\n            <div id={\"ResetPassword\"}>\r\n                <div className={\"newPassword\"}>\r\n                    <div className={\"newHeading\"}>\r\n                        <h1>Reset Your Password</h1>\r\n                    </div>\r\n                    <p>Please fill the boxes below to reset your <i>password</i>.</p>\r\n                    <form className={\"newPassword\"}>\r\n                        <input type={\"text\"} placeholder={\"Username\"} name={\"username\"} onChange={this.handleChange} required/>\r\n                        <input type={\"password\"} placeholder={\"New Password\"} name={\"password\"} onChange={this.handleChange} required/>\r\n                        <input type={\"password\"} placeholder={\"Confirm Password\"} name={\"confirmPassword\"} onChange={this.handleChange} required/>\r\n                        <input type={\"submit\"} value={\"Submit\"} onClick={this.getID}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ResetPassword;","import React, {Component} from 'react';\r\nimport Chart              from 'chart.js';\r\n\r\nclass LineChart extends Component {\r\n  _isMounted = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lineChart        : {\r\n        data  : [],\r\n        labels: 10,\r\n      },\r\n      percentChange    : 0,\r\n      percentComparison: 'Up',\r\n      lastNumber       : '0',\r\n    };\r\n\r\n    this.getChartData = this.getChartData.bind(this);\r\n    this.createChart = this.createChart.bind(this);\r\n    this.updateChart = this.updateChart.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    const self = this;\r\n    if (this._isMounted) {\r\n      self.getChartData();\r\n      self.createChart();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n    clearInterval(this.state.newNumber);\r\n  }\r\n\r\n  getChartData() {\r\n    let randomData = [];\r\n    for (let x = 0; x < this.state.lineChart.labels; x++) {\r\n      this.setState({\r\n        lineChart: {\r\n          data: this.state.lineChart.data.push(0),\r\n        },\r\n      });\r\n      randomData.push(0);\r\n    }\r\n\r\n    this.setState({\r\n      lineChart: {\r\n        data: randomData,\r\n      },\r\n    });\r\n  }\r\n\r\n  createChart() {\r\n    const ctx = document.getElementById(this.props.id);\r\n    ctx.height = 125;\r\n    const data = {\r\n      labels  : [...Array(this.state.lineChart.labels).keys()],\r\n      datasets: [\r\n        {\r\n          backgroundColor : 'rgba(255,255,255,0.5)',\r\n          strokeColor     : 'rgba(255,255,255,1)',\r\n          pointColor      : 'rgba(255,255,255,1)',\r\n          borderColor     : 'rgba(255,255,255,1)',\r\n          pointStrokeColor: '#FFFFFF',\r\n          data            : this.state.lineChart.data,\r\n        },\r\n      ],\r\n    };\r\n\r\n    Chart.defaults.LineWithLine = Chart.defaults.line;\r\n    Chart.controllers.LineWithLine = Chart.controllers.line.extend({\r\n      draw: function(ease) {\r\n        // noinspection JSPotentiallyInvalidConstructorUsage\r\n        Chart.controllers.line.prototype.draw.call(this, ease);\r\n\r\n        if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\r\n          let activePoint = this.chart.tooltip._active[0],\r\n              ctx         = this.chart.ctx,\r\n              x           = activePoint.tooltipPosition().x,\r\n              topY        = this.chart.legend.bottom,\r\n              bottomY     = this.chart.chartArea.bottom;\r\n\r\n          // draw line\r\n          ctx.save();\r\n          ctx.beginPath();\r\n          ctx.moveTo(x, topY);\r\n          ctx.lineTo(x, bottomY);\r\n          ctx.lineWidth = 2;\r\n          ctx.strokeStyle = '#FFFFFF';\r\n          ctx.stroke();\r\n          ctx.restore();\r\n        }\r\n      },\r\n    });\r\n\r\n    const myLineChart = new Chart(ctx, {\r\n      type               : 'LineWithLine',\r\n      responsive         : true,\r\n      maintainAspectRatio: false,\r\n      data               : data,\r\n      options            : {\r\n        responsive: true,\r\n        legend    : {\r\n          display: false,\r\n        },\r\n        tooltips  : {\r\n          enabled          : true,\r\n          intersect        : false,\r\n          mode             : 'nearest',\r\n          titleFontSize    : 0,\r\n          titleSpacing     : 0,\r\n          titleMarginBottom: 0,\r\n          displayColors    : false,\r\n        },\r\n        elements  : {point: {radius: 0}},\r\n        scales    : {\r\n          xAxes: [\r\n            {\r\n              display: false,\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              display: false,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n\r\n    const self = this;\r\n    this.setState({\r\n      newNumber: setInterval(function() {\r\n        self.updateChart(myLineChart).then();\r\n      }, this.props.chartSpeed),\r\n    });\r\n  }\r\n\r\n  async updateChart(value) {\r\n    if (!this._isMounted) {\r\n      return;\r\n    }\r\n    let number = await this.props.getData();\r\n    value.data.datasets[0].data.push(number);\r\n    value.data.datasets[0].data.shift(); // Remove first value\r\n    let changeOne = value.data.datasets[0].data[value.data.datasets[0].data.length\r\n                                                - 2];\r\n    let changeTwo = value.data.datasets[0].data[value.data.datasets[0].data.length\r\n                                                - 1];\r\n\r\n    if (changeOne > changeTwo) {\r\n      this.setState({percentComparsion: 'Down'});\r\n    } else {\r\n      this.setState({percentComparsion: 'Up'});\r\n    }\r\n\r\n    let changeNumber = changeOne === changeTwo ? 0 : !changeOne\r\n        ? 100\r\n        : !changeTwo ? -100 : (changeOne / changeTwo) * 10;\r\n    this.setState({\r\n      percentChange: changeNumber.toFixed(2),\r\n      lastNumber   : (\r\n          value.data.datasets[0].data[value.data.datasets[0].data.length - 1]),\r\n    });\r\n    value.update();\r\n  }\r\n\r\n  render() {\r\n    const divStyle = {\r\n      background: this.props.bgColor,\r\n    };\r\n    return (\r\n        <div className = \"col-md-3\">\r\n          <div className = \"line__chart\" style = { divStyle }>\r\n            <div className = \"line__chart-header\">\r\n              <strong>{ this.props.title }</strong>\r\n            </div>\r\n            <div className = \"line__chart-data\">{ this.state.lastNumber }\r\n              <span>{ this.state.percentChange }%</span>\r\n              <span className = { `arrow ${ this.state.percentComparsion }` } />\r\n            </div>\r\n            <canvas id = { this.props.id } width = \"400\" height = \"400\" />\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineChart;","import React, {Component} from 'react';\r\nimport Chart              from 'chart.js';\r\n\r\nclass PieChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // noinspection JSUnresolvedVariable\r\n    this.state = {\r\n      myChart      : null,\r\n      animationTime: this.props.timeMS || 1000,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.testLoading) {\r\n      this.createChart();\r\n    }\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.data !== this.props.data) {\r\n      if (!this.props.testLoading) {\r\n        this.state.myChart.destroy();\r\n        this.createChart();\r\n      }\r\n    }\r\n  }\r\n\r\n  createChart() {\r\n    const colors = [\r\n      '#4BC0C0',\r\n      '#FF6384',\r\n      '#FFCD56',\r\n      '#3FC62E',\r\n      '#E55AFF',\r\n      '#CB843F',\r\n      '#F583FF',\r\n      '#49FF60',\r\n      '#4CC6BF',\r\n      '#F3F6FF',\r\n    ];\r\n    const hoverColors = [\r\n      '#287FC0',\r\n      '#FF001C',\r\n      '#F6EC04',\r\n      '#17920F',\r\n      '#9E00FF',\r\n      '#CB5F0B',\r\n      '#EA1DFF',\r\n      '#12D021',\r\n      '#0D9DB4',\r\n      '#343438',\r\n    ];\r\n    let ctx = document.getElementById(this.props.id);\r\n    let data = {\r\n      labels  : this.props.labels,\r\n      datasets: [\r\n        {\r\n          data                : this.props.data,\r\n          backgroundColor     : colors,\r\n          hoverBackgroundColor: hoverColors,\r\n          borderColor         : '#252830',\r\n        },\r\n      ],\r\n    };\r\n    const myChart = new Chart(ctx, {\r\n      type   : 'doughnut',\r\n      data   : data,\r\n      options: {\r\n        cutoutPercentage: 80,\r\n        legend          : {\r\n          display  : true,\r\n          align    : 'center',\r\n          fullWidth: true,\r\n        },\r\n        tooltips        : {\r\n          enabled    : true,\r\n          borderColor: 'white',\r\n        },\r\n        animation       : {\r\n          animateScale: true,\r\n          duration    : this.state.animationTime,\r\n        },\r\n        responsive      : true,\r\n      },\r\n    });\r\n\r\n    this.setState({myChart});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = \"col-md-4\">\r\n          <div className = \"pie__chart\">\r\n            <canvas id = { this.props.id }\r\n                    width = \"400\"\r\n                    height = \"400\"\r\n            />\r\n          </div>\r\n          <div className = \"text-center\">\r\n            <strong>{ this.props.title }</strong>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PieChart;","import React                      from 'react';\r\nimport {ValidatorForm}            from 'react-material-ui-form-validator';\r\nimport TextField                  from '@material-ui/core/TextField';\r\nimport Radio                      from '@material-ui/core/Radio';\r\nimport RadioGroup                 from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel           from '@material-ui/core/FormControlLabel';\r\nimport FormControl                from '@material-ui/core/FormControl';\r\nimport Recaptcha                  from 'react-recaptcha';\r\nimport Swal                       from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport '../assets/styles/SignInUp.css';\r\nimport {insertAdmin, insertCoach, sameUsername} from '../../repository';\r\n\r\nclass CreateStaffMember extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formData  : {\r\n        fname           : '',\r\n        lname           : '',\r\n        username        : '',\r\n        email           : '',\r\n        password        : '',\r\n        confirm_password: '',\r\n        bdate           : '',\r\n        gender          : '',\r\n        age             : '',\r\n      },\r\n      isVerified: false,\r\n      submitted : false,\r\n      countTotal     : 0    ,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    this.calcDate = this.calcDate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    // noinspection JSUnresolvedFunction\r\n    ValidatorForm.addValidationRule('isPasswordMatch', value => {\r\n      const {formData} = this.state;\r\n      return value === formData.password;\r\n    });\r\n  }\r\n\r\n  handleChange = event => {\r\n    const {formData} = this.state;\r\n    formData[event.target.name] = event.target.value;\r\n    this.setState({formData});\r\n\r\n    if (event.target.name === 'bdate') {\r\n      this.calcDate(event);\r\n    }\r\n\r\n    if (\r\n        event.target.name === 'password' &&\r\n        !event.target.value.match(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/)\r\n    ) {\r\n      event.target.setCustomValidity(\r\n          'Enter a combination of at least 8 numbers, lower and uppercase letters.',\r\n      );\r\n    } else if (\r\n        event.target.name === 'confirm_password' &&\r\n        event.target.value !== this.state.formData.password\r\n    ) {\r\n      event.target.setCustomValidity('Passwords don\\'t match.');\r\n    } else {\r\n      event.target.setCustomValidity('');\r\n    }\r\n  };\r\n\r\n  verifyCallback = response => {\r\n    if (response) {\r\n      this.setState({isVerified: true});\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n        !this.state.formData.fname ||\r\n        !this.state.formData.lname ||\r\n        !this.state.formData.username ||\r\n        !this.state.formData.bdate ||\r\n        !this.state.formData.gender ||\r\n        !this.state.formData.email.match(\r\n            /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\r\n        ) ||\r\n        !this.state.formData.password.match(\r\n            /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/,\r\n        ) ||\r\n        this.state.formData.confirm_password !== this.state.formData.password\r\n    ) {\r\n      return;\r\n    }\r\n    if (!this.state.isVerified) {\r\n      Swal.fire(\r\n          'Please verify that you are not a robot 🤖!!!',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return;\r\n    }\r\n\r\n    const Crypto = require('cryptr');\r\n    const cryptr = new Crypto('ffn_private_key_!!!!');\r\n\r\n    const encryptedString = cryptr.encrypt(this.state.formData.password);\r\n\r\n    // Create output query\r\n    const data = {\r\n      username: this.state.formData.username,\r\n      password: encryptedString,\r\n      fname   : this.state.formData.fname,\r\n      lname   : this.state.formData.lname,\r\n      email   : this.state.formData.email,\r\n      age     : this.state.formData.age,\r\n      gender  : this.state.formData.gender === 'male' ? 1 : 2,\r\n      level   : this.state.formData.level,\r\n      bDate   : this.state.formData.bdate,\r\n    };\r\n\r\n    sameUsername(this.state.formData.username)\r\n        .then(response => {\r\n      this.setState(\r\n          {countTotal : response.countTotal},\r\n          () => {\r\n            if(this.state.countTotal === 1) {\r\n              Swal.fire(\r\n                  'Someone else have this username!!!',\r\n                  '',\r\n                  'error',\r\n              ).then(() => {\r\n                window.location.reload();\r\n              }).catch(() => Swal.fire(\r\n                  'Something go wrong!!',\r\n                  'Please try again...',\r\n                  'error',\r\n              ));\r\n            }else if (this.props.staffType === 'coach') {\r\n              insertCoach(data).then(() => {\r\n                Swal.fire(\r\n                    'Coach Created successfully',\r\n                    '',\r\n                    'success',\r\n                ).then(() => {\r\n                  window.location.replace('/');\r\n                });\r\n              }).catch(() => Swal.fire(\r\n                  'Something went wrong',\r\n                  'Please try again...',\r\n                  'error',\r\n              ));\r\n            } else if (this.props.staffType === 'admin') {\r\n\r\n              insertAdmin(data).then(() => {\r\n                Swal.fire(\r\n                    'Admin Created successfully',\r\n                    '',\r\n                    'success',\r\n                ).then(() => {\r\n                  window.location.replace('/');\r\n                });\r\n              }).catch(() => Swal.fire(\r\n                  'Something went wrong',\r\n                  'Please try again...',\r\n                  'error',\r\n              ));\r\n            }\r\n            }\r\n      );\r\n    });\r\n\r\n  };\r\n\r\n  calcDate = (dDate) => {\r\n    let thenD = dDate.target.value;\r\n    let str = thenD.split('-');\r\n    let now = new Date();\r\n    let ageDif = now.getFullYear() - str[0];\r\n\r\n    const {formData} = this.state;\r\n    formData.age = ageDif;\r\n    this.setState({formData});\r\n  };\r\n\r\n  render() {\r\n    // noinspection JSUnresolvedVariable\r\n    return (\r\n        <form id = \"signup\"\r\n              onSubmit = { this.handleSubmit }\r\n              autoComplete = \"off\"\r\n        >\r\n          <input\r\n              placeholder = \"First Name\"\r\n              name = \"fname\"\r\n              type = \"text\"\r\n              value = { this.state.formData.fname }\r\n              required\r\n              onChange = { this.handleChange }\r\n              style = { {marginTop: 0} }\r\n          />\r\n          <input\r\n              placeholder = \"Last Name\"\r\n              name = \"lname\"\r\n              type = \"text\"\r\n              value = { this.state.formData.lname }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Email Address\"\r\n              name = \"email\"\r\n              type = \"email\"\r\n              value = { this.state.formData.email }\r\n              onChange = { this.handleChange }\r\n              pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n              required\r\n          />\r\n          <input\r\n              placeholder = \"Username\"\r\n              name = \"username\"\r\n              type = \"text\"\r\n              value = { this.state.formData.username }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Password\"\r\n              name = \"password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.password }\r\n              required\r\n              pattern = \"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Confirm Password\"\r\n              name = \"confirm_password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.confirm_password }\r\n              required\r\n              pattern = \"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <TextField\r\n              placeholder = \"Birthday\"\r\n              name = \"bdate\"\r\n              type = \"date\"\r\n              value = { this.state.formData.bday }\r\n              InputLabelProps = { {\r\n                shrink: true,\r\n              } }\r\n              onChange = { this.handleChange }\r\n              required\r\n          />\r\n          <br />\r\n          <FormControl component = \"fieldset\">\r\n            {/* <FormLabel component=\"legend\">Gender</FormLabel> */ }\r\n            <RadioGroup\r\n                aria-label = \"gender\"\r\n                name = \"gender\"\r\n                value = { this.state.formData.gender }\r\n                onChange = { this.handleChange }\r\n                className = { 'gender-radio' }\r\n            >\r\n              <FormControlLabel\r\n                  value = \"male\"\r\n                  control = { <Radio required /> }\r\n                  label = \"Male\"\r\n              />\r\n              <FormControlLabel\r\n                  value = \"female\"\r\n                  control = { <Radio required /> }\r\n                  label = \"Female\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Recaptcha\r\n              elementID = { 'g-recaptcha' }\r\n              sitekey = \"6Lf0od8UAAAAAFoog9iFIpVd8rcPxBwHpUKpnCua\"\r\n              size = \"normal\"\r\n              render = \"explicit\"\r\n              theme = \"dark\"\r\n             \r\n              verifyCallback = { this.verifyCallback }\r\n          />\r\n          <button style = { {marginBottom: '15px'} }>Sign up</button>\r\n          <br />\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateStaffMember;","import React, {Component} from 'react';\r\nimport Swal               from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport {\r\n  deleteAdmin,\r\n  getAdmins,\r\n  getCoaches,\r\n  deleteCoach,\r\n  logOut,\r\n  countPT,\r\n  countClasses,\r\n} from '../../repository';\r\nimport adminAvatar\r\n                          from '../assets/img/logos/fitnessFactoryLogo.png';\r\nimport ToggleModal        from './ToggleModal';\r\nimport CreateStaffMember  from './CreateStaffMember';\r\n\r\nclass StaffList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      coaches  : [],\r\n      admins   : [],\r\n      staffType: '',\r\n      modal    : false,\r\n      countTotal  : 0,\r\n    };\r\n    this.DeleteCoach = this.DeleteCoach.bind(this);\r\n    this.DeleteAdmin = this.DeleteAdmin.bind(this);\r\n    this.createAdmin = this.createAdmin.bind(this);\r\n    this.createCoach = this.createCoach.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // TODO get image when done\r\n    getCoaches().then(response => {\r\n      this.setState({\r\n        coaches: response.map(c => {\r\n          Object.defineProperty(c, 'Name',\r\n              Object.getOwnPropertyDescriptor(c, 'CoachName'));\r\n          delete c['CoachName'];\r\n          return c;\r\n        }),\r\n      });\r\n    });\r\n    getAdmins().then(response => this.setState({admins: response}));\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  DeleteAdmin(e) {\r\n    // noinspection JSUnresolvedVariable\r\n    const AdminId = e.target.className.split(' ')[3] === 'admin'\r\n        ? this.state.admins[e.target.className.split(' ')[2]].AccountID\r\n        : this.state.coaches[e.target.className.split(' ')[2]].AccountID;\r\n\r\n    Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteAdmin(AdminId).then(() => {\r\n          Swal.fire(\r\n              'Account deleted successfully',\r\n              '',\r\n              'success',\r\n          ).then(() => {\r\n            logOut();\r\n            window.location.replace('/');\r\n          });\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Account is safe :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n  }\r\n\r\n  DeleteCoach(e) {\r\n\r\n    // noinspection JSUnresolvedVariable\r\n    const CoachID = e.target.className.split(' ')[3] === 'admin'\r\n        ? this.state.admins[e.target.className.split(' ')[2]].AccountID\r\n        : this.state.coaches[e.target.className.split(' ')[2]].AccountID;\r\n\r\n    Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then((result) => {\r\n      countPT(CoachID).then(response => {\r\n        this.setState(\r\n            {countTotal : response.countTotal});\r\n      });\r\n\r\n      countClasses(CoachID).then(response => {\r\n        this.setState(\r\n            {countTotal : this.state.countTotal+response.countTotal});\r\n      });\r\n      if (result.value && this.state.countTotal === 0 ) {\r\n        deleteCoach(CoachID).then(() => {\r\n          Swal.fire(\r\n              'Account deleted successfully',\r\n              '',\r\n              'success',\r\n          ).then(() => {\r\n            logOut();\r\n            window.location.replace('/');\r\n          });\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Account is safe :)',\r\n            'error',\r\n        ).then();\r\n      }else if(this.state.countTotal !== 0){\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'You must go and change the classes and the personal training :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  createAdmin() {\r\n    this.setState({staffType: 'admin'});\r\n    this.toggleModal();\r\n  }\r\n\r\n  createCoach() {\r\n    this.setState({staffType: 'coach'});\r\n    this.toggleModal();\r\n  }\r\n\r\n  render() {\r\n    // noinspection DuplicatedCode\r\n    return (\r\n        <div className = \"row staff\">\r\n          <div className = \"col-md-6\">\r\n            <div className = \"box\">\r\n              <h3>Admins:</h3>\r\n              <button className = { 'add-admin btn btn-primary btn-xl text-uppercase' }\r\n                      onClick = { this.createAdmin }\r\n              >\r\n                Create New Admin\r\n              </button>\r\n              { this.state.admins.map((admin, index) => {\r\n                const timestamp = admin.Bdate.split(/[T.]+/)[0];\r\n                // noinspection JSUnresolvedVariable\r\n                const gender = admin.Gender === 1 ? 'Male' : 'Female';\r\n                return (\r\n                    <div className = \"admin\" key = { index }>\r\n                      <div className = \"img\">\r\n                        <img className = \"img-responsive\"\r\n                             src = { adminAvatar }\r\n                             alt = \"admin\"\r\n                        />\r\n                      </div>\r\n                      <div className = \"info\">\r\n                        <h3>{ admin.Name } { admin.Surname }</h3>\r\n                        <p>\r\n                          Username: { admin.username }<br />\r\n                          Email: { admin.Email }<br />\r\n                          BDate: { timestamp }<br />\r\n                          Gender: { gender }\r\n                        </p>\r\n                      </div>\r\n                      { admin.username !== 'its.giff' ?\r\n                          <button className = \"delete-admin\"\r\n                          >\r\n                            <i className = { 'fa fa-trash ' + index\r\n                                             + ' admin' }\r\n                               onClick = { this.DeleteAdmin }\r\n                            />\r\n                          </button>\r\n                          :\r\n                          <button className = \"delete-admin\"\r\n                                  style = { {'pointerEvents': 'none'} }\r\n                                  disabled = { true }\r\n                          >\r\n                            <i className = { 'fa fa-trash slash' + index\r\n                                             + ' admin' }\r\n                            />\r\n                          </button>\r\n                      }\r\n                    </div>\r\n                );\r\n              }) }\r\n            </div>\r\n          </div>\r\n          <div className = \"col-md-6\">\r\n            <div className = \"box\">\r\n              <h3>Coaches:</h3>\r\n              <button className = { 'add-admin btn btn-primary btn-xl text-uppercase' }\r\n                      onClick = { this.createCoach }\r\n              >\r\n                Create New Coach\r\n              </button>\r\n              { this.state.coaches.map((coach, index) => {\r\n                const timestamp = coach.Bdate.split(/[T.]+/)[0];\r\n                // noinspection JSUnresolvedVariable\r\n                const gender = coach.Gender === 1 ? 'Male' : 'Female';\r\n                return (\r\n                    <div className = \"admin\" key = { index }>\r\n                      <div className = \"img\">\r\n                        <img className = \"img-responsive\"\r\n                             src = { adminAvatar }\r\n                             alt = \"admin\"\r\n                        />\r\n                      </div>\r\n                      <div className = \"info\">\r\n                        <h3>{ coach.Name } { coach.Surname }</h3>\r\n                        <p>\r\n                          Username: { coach.username }<br />\r\n                          Email: { coach.Email }<br />\r\n                          BDate: { timestamp }<br />\r\n                          Gender: { gender }\r\n                        </p>\r\n                      </div>\r\n                      { (coach.username !== ('headcoach01')) ?\r\n                          <button className = \"delete-admin\"\r\n                          >\r\n                            <i className = { 'fa fa-trash ' + index\r\n                                             + ' coach' }\r\n                               onClick = { this.DeleteCoach }\r\n                            />\r\n                          </button>\r\n                          :\r\n                          <button className = \"delete-admin\"\r\n                                  style = { {'pointerEvents': 'none'} }\r\n                                  disabled = { true }\r\n                          >\r\n                            <i className = { 'fa fa-trash slash' + index\r\n                                             + ' coach' }\r\n                            />\r\n                          </button>\r\n                      }\r\n                    </div>\r\n                );\r\n              }) }\r\n            </div>\r\n          </div>\r\n\r\n          <ToggleModal\r\n              modal = { this.state.modal }\r\n              toggle = { this.toggleModal }\r\n              modalSize = { 'md' }\r\n              modalHeader = { 'Create New Staff' }\r\n              modalBody = {\r\n                <CreateStaffMember staffType = { this.state.staffType } /> }\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StaffList;","import React, {Component} from 'react';\r\n\r\nclass Leader extends Component {\r\n  render() {\r\n    return (\r\n        <div className = \"leaderboard__result\">\r\n          { this.props.title } - { this.props.number }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Leader;","import React, {Component} from 'react';\r\nimport Leader             from './Leader';\r\n\r\nclass LeaderBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sortOrder: this.props.sortAsc,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      sortOrder: this.props.sortAsc,\r\n    });\r\n  }\r\n\r\n  numberWithCommas(num) {\r\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  }\r\n\r\n  render() {\r\n    let self = this;\r\n    let dataSort = this.props.dataSort;\r\n    let dataTitle = this.props.dataTitle;\r\n    let sortAsc = this.props.sortAsc;\r\n    let numberComma = this.props.numberComma;\r\n    let sortCustom = this.props.data.sort(function(a, b) {\r\n      if (sortAsc) {\r\n        return parseFloat(b[dataSort]) - parseFloat(a[dataSort]);\r\n      } else {\r\n        return parseFloat(a[dataSort]) - parseFloat(b[dataSort]);\r\n      }\r\n    });\r\n    const leaders = sortCustom.map(function(leader, i) {\r\n      let number = leader[dataSort];\r\n      let title = leader[dataTitle];\r\n      if (numberComma === 'true') {\r\n        number = self.numberWithCommas(number);\r\n      }\r\n      return <Leader key = { i } title = { title } number = { number } />;\r\n    });\r\n\r\n    return (\r\n        <div className = \"col-md-6 panel panel-default\">\r\n          <div className = \"leaderboard__wrapper\">\r\n            <div data-testid={'title'} className = \"leaderboard__title panel-heading\">\r\n              <h5>{ this.props.title }</h5>\r\n            </div>\r\n            <div data-testid={'leaders'} className = \"leaderboard__results\">\r\n              { leaders }\r\n            </div>\r\n            {/*\r\n             <div className=\"sort-btn\">\r\n             <div href=\"#\">Sort</div>\r\n             <div>{this.state.sortOrder}</div>\r\n             </div>\r\n             */ }\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaderBoard;","import React, {Component} from 'react';\r\nimport Chart              from 'chart.js';\r\n\r\nclass Graphs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    if (!this.props.testLoading) {\r\n      this.createGraph = this.createGraph.bind(this);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.testLoading) {\r\n      this.createGraph();\r\n    }\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.graphData !== this.props.graphData) {\r\n      this.state.myChart.destroy();\r\n      if (!this.props.testLoading) {\r\n        this.createGraph();\r\n      }\r\n    }\r\n  }\r\n\r\n  createGraph() {\r\n    Chart.defaults.scale.ticks.beginAtZero = true;\r\n    Chart.defaults.scale.gridLines.zeroLineColor = 'rgba(255, 255, 255, 0.1)';\r\n    Chart.defaults.scale.gridLines.color = 'rgba(255, 255, 255, 0.02)';\r\n\r\n    const colors = [\r\n      '#4BC0C0',\r\n      '#FF6384',\r\n      '#FFCD56',\r\n      '#3FC62E',\r\n      '#E55AFF',\r\n      '#CB843F',\r\n      '#F583FF',\r\n      '#49FF60',\r\n      '#4CC6BF',\r\n      '#F3F6FF',\r\n    ];\r\n    const hoverColors = [\r\n      '#287FC0',\r\n      '#FF001C',\r\n      '#F6EC04',\r\n      '#17920F',\r\n      '#9E00FF',\r\n      '#CB5F0B',\r\n      '#EA1DFF',\r\n      '#12D021',\r\n      '#0D9DB4',\r\n      '#343438',\r\n    ];\r\n    const ys = this.props.graphData.ys.map((data, index) => {\r\n      data['fill'] = false;\r\n      data['lineTension'] = .4;\r\n      data['pointBorderColor'] = false;\r\n      this.props.graphData.type === 'bar'\r\n          ? data['borderColor'] = colors\r\n          : data['borderColor'] = colors[index];\r\n      data['borderWidth'] = 2;\r\n      this.props.graphData.type === 'bar'\r\n          ? data['backgroundColor'] = colors\r\n          : data['backgroundColor'] = colors[index];\r\n      data['showLine'] = true;\r\n      return data;\r\n    });\r\n    const chart1 = document.getElementById('myChart').getContext('2d');\r\n    const myChart = new Chart(chart1, {\r\n      type   : this.props.graphData.type,\r\n      data   : {\r\n        labels              : this.props.graphData.xs,\r\n        datasets            : ys,\r\n        hoverBackgroundColor: hoverColors,\r\n        borderColor         : '#252830',\r\n      },\r\n      options: {\r\n        title           : {display: false},\r\n        animation       : {duration: 2000},\r\n        responsive      : true,\r\n        aspectRatio     : 3,\r\n        maintainAspectRatio: true,\r\n        defaultFontColor: '#999999',\r\n        defaultFontSize : 10,\r\n        tooltips        : {\r\n          enabled    : true,\r\n          borderColor: 'white',\r\n        },\r\n        legend          : {\r\n          display  : true,\r\n          align    : 'center',\r\n          fullWidth: true,\r\n        },\r\n      },\r\n    });\r\n    this.setState({myChart});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = \"charts\">\r\n          <div className = \"container-fluid\">\r\n            <div className = \"row\">\r\n              <div className = \"col-md-12\">\r\n                <div className = \"chart-container\">\r\n                  {/*<h3>{ this.props.graphData.title }</h3>*/ }\r\n                  <canvas id = \"myChart\" style={{height: '200px'}} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graphs;","import React, {Component} from 'react';\r\nimport LineChart          from '../common/LineChart';\r\nimport PieChart           from '../common/PieChart';\r\nimport StaffList          from '../common/StaffList';\r\nimport LeaderBoard        from '../common/LeaderBoard';\r\nimport Graphs             from '../common/Graphs';\r\n// noinspection ES6CheckImport\r\nimport {Redirect}         from 'react-router-dom';\r\nimport '../assets/styles/UIDashboard.css';\r\nimport Spinner            from '../Spinner';\r\nimport {\r\n  allUsersCount,\r\n  allVisitCount,\r\n  loggedInVisit,\r\n  updateDashboardVisit,\r\n  getServerConnections,\r\n  getUserCount,\r\n  getPageVisits,\r\n  getEnrollCount,\r\n  getGenderChart,\r\n  getClassDaysChart,\r\n  getPersonalDaysChart,\r\n  getAgeRange,\r\n  getCoachesDayWork,\r\n  getCoachesPersonalWork,\r\n}                         from '../../repository';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\n\r\nclass UIDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading         : true,\r\n      // Set to first option of select\r\n      firstGraphLoaded: false,\r\n      selectedGraph   : 0,\r\n      graphData       : [],\r\n      // Donought chats data\r\n      genders         : {id: 'gender', data: [], labels: []},\r\n      enroll          : {id: 'enroll', data: [], labels: []},\r\n      personal        : {id: 'personal', data: [], labels: []},\r\n      // Leaderboards data\r\n      uiDataPageViews : [],\r\n      uiDataUserTypes : [],\r\n    };\r\n\r\n    this.handleChart = this.handleChart.bind(this);\r\n    this.visitCounts = this.visitCounts.bind(this);\r\n    this.userCounts = this.userCounts.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Page Visits\r\n    loggedInVisit().then();\r\n    updateDashboardVisit().then();\r\n    // Leaderboards\r\n    allVisitCount().then(response => this.visitCounts(response));\r\n    allUsersCount().then(response => this.userCounts(response));\r\n    // Pie Charts\r\n    getGenderChart().then(response => this.setState({\r\n      genders: {\r\n        id    : 'gender',\r\n        labels: ['Male', 'Female'],\r\n        data  : response.map(val => val.count),\r\n      },\r\n    }));\r\n    getClassDaysChart().then(response => this.setState({\r\n      enroll: {\r\n        id    : 'enroll',\r\n        labels: response.map(val => val.Day),\r\n        data  : response.map(val => val.count),\r\n      },\r\n    }));\r\n    getPersonalDaysChart().then(response => this.setState({\r\n      personal: {\r\n        id    : 'personal',\r\n        labels: response.map(val => this.indexToDay(val.Day - 1)),\r\n        data  : response.map(val => val.count),\r\n      },\r\n    }));\r\n    // Graphs\r\n    this.getGraphData.then(() => {\r\n      this.setState({loading: false});\r\n    });\r\n  }\r\n\r\n  getGraphData = new Promise((resolve) => {\r\n    getCoachesDayWork().then(response => {\r\n      let graphData = [...this.state.graphData];\r\n      const finalCoachData = [];\r\n      this.groupBy(response, response => response.Coach_ID)\r\n          .forEach(val => {\r\n            const coachData = {\r\n              label: `${ val[0].CoachName } ${ val[0].Surname }`,\r\n              data : [0, 0, 0, 0, 0, 0, 0],\r\n            };\r\n            for (let v of val) {\r\n              const dayIndex = this.dayToIndex(v.Day);\r\n              if (dayIndex === -1) {\r\n                continue;\r\n              }\r\n              // noinspection JSUnresolvedVariable\r\n              coachData.data[dayIndex] += v.Participants;\r\n            }\r\n            finalCoachData.push(coachData);\r\n          });\r\n      graphData.push({\r\n        title: 'Participants in Coaches Classes',\r\n        type : 'line',\r\n        xs   : [\r\n          'Monday',\r\n          'Tuesday',\r\n          'Wednesday',\r\n          'Thursday',\r\n          'Friday',\r\n          'Saturday',\r\n          'Sunday',\r\n        ],\r\n        ys   : finalCoachData,\r\n      });\r\n      this.setState({graphData, firstGraphLoaded: true});\r\n    })\r\n        .then(() => getCoachesPersonalWork().then(response => {\r\n          let graphData = [...this.state.graphData];\r\n          const finalCoachData = [];\r\n          this.groupBy(response, response => response.Coach_ID)\r\n              .forEach(val => {\r\n                const coachData = {\r\n                  label: `${ val[0].CoachName } ${ val[0].Surname }`,\r\n                  data : [0, 0, 0, 0, 0, 0, 0],\r\n                };\r\n                for (let v of val) {\r\n                  const dayIndex = v.Day;\r\n                  if (dayIndex < 0 || dayIndex > 6) {\r\n                    continue;\r\n                  }\r\n                  // noinspection JSUnresolvedVariable\r\n                  coachData.data[dayIndex] += v.Participants;\r\n                }\r\n                finalCoachData.push(coachData);\r\n              });\r\n          graphData.push({\r\n            title: 'Participants in Coaches Personal Classes',\r\n            type : 'line',\r\n            xs   : [\r\n              'Monday',\r\n              'Tuesday',\r\n              'Wednesday',\r\n              'Thursday',\r\n              'Friday',\r\n              'Saturday',\r\n              'Sunday',\r\n            ],\r\n            ys   : finalCoachData,\r\n          });\r\n          this.setState({graphData, firstGraphLoaded: true});\r\n        }))\r\n        .then(() => getAgeRange().then(response => {\r\n          let graphData = [...this.state.graphData];\r\n          graphData.push({\r\n            title: 'Age Range User Count',\r\n            type : 'bar',\r\n            xs   : Object.keys(response),\r\n            ys   : [{label: 'Users', data: Object.values(response)}],\r\n          });\r\n          this.setState({graphData});\r\n        }))\r\n        .then(() => resolve());\r\n  });\r\n\r\n  dayToIndex = (day) => {\r\n    switch (day) {\r\n      case 'Monday':\r\n        return 0;\r\n      case 'Tuesday':\r\n        return 1;\r\n      case 'Wednesday':\r\n        return 2;\r\n      case 'Thursday':\r\n        return 3;\r\n      case 'Friday':\r\n        return 4;\r\n      case 'Saturday':\r\n        return 5;\r\n      case 'Sunday':\r\n        return 6;\r\n      default:\r\n        return -1;\r\n    }\r\n  };\r\n\r\n  indexToDay = (day) => {\r\n    switch (parseInt(day)) {\r\n      case 0:\r\n        return 'Monday';\r\n      case 1:\r\n        return 'Tuesday';\r\n      case 2:\r\n        return 'Wednesday';\r\n      case 3:\r\n        return 'Thursday';\r\n      case 4:\r\n        return 'Friday';\r\n      case 5:\r\n        return 'Saturday';\r\n      case 6:\r\n        return 'Sunday';\r\n      default:\r\n        return 'Undefined';\r\n    }\r\n  };\r\n\r\n  groupBy(list, keyGetter) {\r\n    const map = new Map();\r\n    list.forEach((item) => {\r\n      const key = keyGetter(item);\r\n      const collection = map.get(key);\r\n      if (!collection) {\r\n        map.set(key, [item]);\r\n      } else {\r\n        collection.push(item);\r\n      }\r\n    });\r\n    return map;\r\n  }\r\n\r\n  userCounts(response) {\r\n    let types = [];\r\n    for (let v of response.types) {\r\n      // noinspection JSUnfilteredForInLoop\r\n      types.push({type: v.level, count: v.count});\r\n    }\r\n    this.setState({uiDataUserTypes: types});\r\n  }\r\n\r\n  visitCounts(response) {\r\n    let visits = [];\r\n    for (let v in response.visits[0]) {\r\n      let page = null;\r\n      // noinspection JSUnfilteredForInLoop\r\n      switch (v) {\r\n        case 'HOME_PAGE':\r\n          page = '/classes';\r\n          break;\r\n        case 'CLASSES':\r\n          page = '/ (Logged Out)';\r\n          break;\r\n        case 'ABOUT_US':\r\n          page = '/about';\r\n          break;\r\n        case 'PROFILE_USER':\r\n          page = '/user/profile';\r\n          break;\r\n        case 'PROFILE_COACH':\r\n          page = '/coach/profile';\r\n          break;\r\n        case 'PROFILE_ADMIN':\r\n          page = '/admin/profile';\r\n          break;\r\n        case 'ADMIN_DASHBOARD':\r\n          page = '/admin/profile/dashboard';\r\n          break;\r\n        case 'LOGGED_IN':\r\n          page = '/ (Logged In)';\r\n          break;\r\n        default:\r\n          continue;\r\n      }\r\n      // noinspection JSUnfilteredForInLoop\r\n      visits.push({page: page, views: response.visits[0][v]});\r\n    }\r\n    this.setState({uiDataPageViews: visits});\r\n  };\r\n\r\n  handleChart(e) {\r\n    this.setState({[e.target.name]: Number(e.target.value)});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n          { this.state.loading ?\r\n              <Spinner />\r\n              :\r\n              <div id = \"UIDashboard\">\r\n                <AnimatedOnScroll animationIn = \"fadeIn\">\r\n                  <div className = { 'container' }>\r\n                    { (this.props.userLevel === 'admin') ? '' :\r\n                        <Redirect to = \"/\" /> }\r\n                    <div className = \"row line__chart-wrapper\">\r\n                      <LineChart id = \"server-connections\"\r\n                                 chartSpeed = \"4250\"\r\n                                 bgColor = \"#1BC98E\"\r\n                                 title = \"Server\"\r\n                                 getData = { getServerConnections }\r\n                      />\r\n                      <LineChart id = \"page-visits\"\r\n                                 chartSpeed = \"6100\"\r\n                                 bgColor = \"#E64759\"\r\n                                 title = \"Page Visits\"\r\n                                 getData = { getPageVisits }\r\n                      />\r\n                      <LineChart id = \"user-count\"\r\n                                 chartSpeed = \"4900\"\r\n                                 bgColor = \"#9F86FF\"\r\n                                 title = \"Users\"\r\n                                 getData = { getUserCount }\r\n                      />\r\n                      <LineChart id = \"enrollment-count\"\r\n                                 chartSpeed = \"3200\"\r\n                                 bgColor = \"#E4D836\"\r\n                                 title = \"Enrolled\"\r\n                                 getData = { getEnrollCount }\r\n                      />\r\n                    </div>\r\n                    <div className = \"row pie__chart-wrapper\">\r\n                      <PieChart title = \"Genders\"\r\n                                data = { this.state.genders.data }\r\n                                labels = { this.state.genders.labels }\r\n                                id = { this.state.genders.id }\r\n                      />\r\n                      <PieChart title = \"Enrolled Classes\"\r\n                                data = { this.state.enroll.data }\r\n                                labels = { this.state.enroll.labels }\r\n                                id = { this.state.enroll.id }\r\n                      />\r\n                      <PieChart title = \"Personal Classes\"\r\n                                data = { this.state.personal.data }\r\n                                labels = { this.state.personal.labels }\r\n                                id = { this.state.personal.id }\r\n                      />\r\n                    </div>\r\n                    <div className = \"select-chart\">\r\n                      <select name = \"selectedGraph\"\r\n                              onChange = { this.handleChart }\r\n                      >\r\n                        {/*<option selected disabled>Choose a chart to display</option>*/ }\r\n                        <option value = \"0\">Participants in Coaches Classes\r\n                        </option>\r\n                        <option value = \"1\">Participants in Coaches Personal\r\n                                            Classes\r\n                        </option>\r\n                        <option value = \"2\">Age Range User Count</option>\r\n                      </select>\r\n                    </div>\r\n                    { this.state.firstGraphLoaded &&\r\n                      <Graphs graphData = { this.state.graphData[this.state.selectedGraph] } /> }\r\n                    <StaffList />\r\n                    <div className = \"row leaderboards\">\r\n                      <LeaderBoard data = { this.state.uiDataUserTypes }\r\n                                   sortAsc = { false }\r\n                                   title = \"User Types\"\r\n                                   dataSort = \"count\"\r\n                                   dataTitle = \"type\"\r\n                      />\r\n                      <LeaderBoard data = { this.state.uiDataPageViews }\r\n                                   sortAsc = { true }\r\n                                   title = \"Most Visited Pages\"\r\n                                   dataSort = \"views\"\r\n                                   dataTitle = \"page\"\r\n                                   numberComma = \"true\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </AnimatedOnScroll>\r\n              </div>\r\n          }\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UIDashboard;","import React, {Component} from 'react';\r\nimport {Link}             from 'react-router-dom';\r\nimport '../assets/styles/NotFound.css';\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n        <div id = \"notfound\">\r\n          <div className = \"notfound\">\r\n            <div className = \"notfound-404\">\r\n              <div/>\r\n              <h1>404</h1>\r\n            </div>\r\n            <h2>Page not found</h2>\r\n            <p>The page you are looking for might have been removed had its name\r\n               changed or is temporarily unavailable.</p>\r\n            <Link to = { '/' }>home page</Link>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport default NotFound;","import React, {Component} from 'react';\r\n// import Flippy, { FrontSide, BackSide } from 'react-flippy';\r\nimport '../assets/styles/loginStyle.css';\r\n// import {Link} from 'react-router-dom';\r\nimport 'react-bootstrap/';\r\nimport Recaptcha          from 'react-recaptcha';\r\n\r\nimport {logIn, signUp} from '../../repository';\r\nimport history         from '../../history';\r\n\r\nclass LoginModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fname           : '',\r\n      lname           : '',\r\n      username        : '',\r\n      password        : '',\r\n      repeatedPassword: '',\r\n      email           : '',\r\n      gender          : '',\r\n      med             : null,\r\n      age             : '',\r\n      bDate           : '',\r\n      toggle          : true,\r\n      value           : true,\r\n      isVerified      : false,\r\n      userVerify      : '',\r\n      token           : '',\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onRadioChange = this.onRadioChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    // this.recaptchaLoaded = this.recaptchaLoaded.bind(this);\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    // this.onPassword = this.onPassword.bind(this);\r\n  }\r\n\r\n  verifyCallback = (response) => {\r\n    if (response) {\r\n      this.setState({isVerified: true});\r\n    }\r\n  };\r\n  handleChange = (e) => {\r\n    if (e.target.name === 'bDate') {\r\n      this.setState({[e.target.name]: e.target.value});\r\n      this.calcDate(e);\r\n    } else {\r\n      this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n  };\r\n  onRadioChange = (e) => {\r\n    this.setState({gender: e.target.value});\r\n  };\r\n  changeSign = () => {\r\n    this.setState({toggle: !this.state.toggle});\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const crypto = require('crypto');\r\n    // noinspection JSUnusedLocalSymbols\r\n    // const newToken = crypto.randomBytes(10).toString('hex');\r\n\r\n    const Crypto = require('cryptr');\r\n    const cryptr = new Crypto('ffn_private_key_!!!!');\r\n\r\n    // noinspection JSUnusedLocalSymbols\r\n    crypto.createHmac('sha256', this.state.password)\r\n        .update('I love cupcakes')\r\n        .digest('hex');\r\n\r\n    const encryptedString = cryptr.encrypt(this.state.password);\r\n\r\n    const dataLogIn = {\r\n      username: this.state.username,\r\n      password: encryptedString,\r\n    };\r\n    // console.log(this.state.password,  this.state.username);\r\n    logIn(dataLogIn)\r\n        .then(data => {\r\n          if (!data.level) {\r\n            throw Error;\r\n          }\r\n          this.props.toggle();    // Close Modal\r\n          this.props.setUserLevel(data.level);\r\n          history.push('/user/profile');\r\n        })\r\n        .catch(err => alert(err));\r\n  };\r\n  onSignUp = (e) => {\r\n    e.preventDefault();\r\n    const ver = 0;\r\n    if (this.state.password !== this.state.repeatedPassword) {\r\n      alert('Password dont match');\r\n    } else {\r\n      if (this.state.isVerified) {\r\n        const crypto = require('crypto');\r\n        const newToken = crypto.randomBytes(10).toString('hex');\r\n        // Create output query\r\n        const Crypto = require('cryptr');\r\n        const cryptr = new Crypto('ffn_private_key_!!!!');\r\n\r\n        const encryptedString = cryptr.encrypt(this.state.password);\r\n\r\n        const dataSign = {\r\n          username: this.state.username,\r\n          password: encryptedString,\r\n          fname   : this.state.fname,\r\n          lname   : this.state.lname,\r\n          email   : this.state.email,\r\n          age     : this.state.age,\r\n          gender  : this.state.gender,\r\n          level   : this.state.level,\r\n          bDate   : this.state.bDate,\r\n          verify  : ver,\r\n          hash    : newToken,\r\n        };\r\n        signUp(dataSign)\r\n            .then(() => {\r\n                  alert(\r\n                      'Successful sign up.Please proceed to your email, so you can verify your account.');\r\n                  this.props.toggle();\r\n                },\r\n            )\r\n            .catch(err => alert(err));\r\n      } else {\r\n        alert(\r\n            'Please proceed with the recaptcha to verify that you are a human!');\r\n      }\r\n    }\r\n  };\r\n  onClose = () => {\r\n    this.props.toggle();\r\n    history.push('/forgotPassword');\r\n  };\r\n  calcDate = (dDate) => {\r\n    let thenD = dDate.target.value;\r\n    let str = thenD.split('-');\r\n    let now = new Date();\r\n    let ageDif = now.getFullYear() - str[0];\r\n    this.setState({age: ageDif});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n        <div className = { 'wrapper' }\r\n             id = { 'LoginModal' }\r\n             tabIndex = { '-1' }\r\n             role = { 'dialog' }\r\n             aria-labelledby = { 'exampleModalLabel' }\r\n             aria-hidden = { 'true' }\r\n        >\r\n          <input type = { 'checkbox' }\r\n                 name = { 'flipper__checkbox' }\r\n                 id = { 'flipper__checkbox' }\r\n                 className = { 'flipper__checkbox' }\r\n                 hidden\r\n          />\r\n\r\n          <div className = { 'form__container' }>\r\n            { this.state.toggle ?\r\n                <div className = { 'form__login' }>\r\n                  <h1 className = { 'form__header' }>Login</h1>\r\n                  <div className = { 'imgcontainer' }>\r\n                    {/*<div className = { 'cursive' }>*/ }\r\n\r\n                    {/*</div>*/ }\r\n                  </div>\r\n\r\n                  <form id = { 'loginForm' }\r\n                        action = { '#' }\r\n                        method = { 'post' }\r\n                        className = { 'form' }\r\n                  >\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'username' }>\r\n                                    <span className = { 'label__icon fa fa-user coloring' }>\r\n                                    </span>\r\n                      </label>\r\n                      <input id = { 'username' }\r\n                             name = { 'username' }\r\n                             className = { 'form_element' }\r\n                             type = { 'text' }\r\n                             pattern = \"^ *[a-zA-Z0-9]+.*\"\r\n                             placeholder = { 'Username' }\r\n                             required\r\n                             onChange = { this.handleChange }\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = \"password\">\r\n                                    <span className = \"label__icon fa fa-lock coloring\">\r\n                                    </span>\r\n                      </label>\r\n                      <input type = { 'password' }\r\n                             className = { 'form_element' }\r\n                             id = { 'pword' }\r\n                             pattern = { '^ *[a-zA-Z]+.*' }\r\n                             placeholder = { 'Enter Password' }\r\n                             name = { 'password' }\r\n                             required\r\n                             onChange = { this.handleChange }\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <input className = { 'form__button' }\r\n                             type = { 'submit' }\r\n                             value = { 'Login' }\r\n                             onClick = { this.onSubmit }\r\n                      />\r\n                    </fieldset>\r\n\r\n                    <fieldset className = { 'form__group' }\r\n                              style = { {'paddingTop': 0} }\r\n                    >\r\n                      {/*<label htmlFor = { 'checkbox' }>*/ }\r\n                      {/*  <input id = { 'checkbox' }*/ }\r\n                      {/*         name = { 'checkbox' }*/ }\r\n                      {/*         className = { 'checkbox--forget' }*/ }\r\n                      {/*         type = { 'checkbox' }*/ }\r\n                      {/*  />*/ }\r\n                      {/*  <span className = { 'subtitle' }>Remember me</span>*/ }\r\n                      {/*</label>*/ }\r\n                      <small>\r\n                        <button style = { {\r\n                          'backgroundColor': 'transparent',\r\n                          'border'         : 'none',\r\n                          'paddingLeft'    : 0,\r\n                        } }\r\n                                className = { 'form__link' }\r\n                                onClick = { this.onClose }\r\n                        >Forgot your password?\r\n                        </button>\r\n                        <br />\r\n                        {/*<span className = { 'subtitle' }> Not a member yet?</span>*/}\r\n                        {/*<small className = { 'form__link' }*/}\r\n                        {/*       onClick = { this.changeSign }*/}\r\n                        {/*>*/}\r\n                        {/*  Create your account*/}\r\n                        {/*</small>*/}\r\n                        {/*.*/}\r\n                      </small>\r\n                    </fieldset>\r\n                  </form>\r\n                </div>\r\n                :\r\n                <div className = { 'form__signup' }>\r\n                  <h1 className = { 'form__header' }>Sign Up</h1>\r\n                  <form id = { 'signupForm' }\r\n                        method = { 'post' }\r\n                        className = { 'form' }\r\n                  >\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'signUpName' }>\r\n                                        <span className = { 'label__icon fa fa-user coloring' }>\r\n                                        </span>\r\n                      </label>\r\n                      <input name = { 'fname' }\r\n                             className = { 'form_element signUpName' }\r\n                             type = { 'text' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'First Name' }\r\n                             required\r\n                      />\r\n                      <span>\r\n                                           </span>\r\n                      <input name = { 'lname' }\r\n                             className = { 'form_element signUpName' }\r\n                             type = { 'text' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Last Name' }\r\n                             required\r\n                      />\r\n\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'username' }>\r\n                                        <span className = { 'label__icon fa fa-user coloring' }>\r\n                                        </span>\r\n                      </label>\r\n                      <input id = { 'signUpUsername' }\r\n                             name = { 'username' }\r\n                             className = { 'form__element' }\r\n                             type = { 'text' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Username' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'signUpMail' }>\r\n                        <span className = { 'label__icon fa fa-envelope coloring' }>\r\n                        </span>\r\n                      </label>\r\n                      <input id = { 'signUpMail' }\r\n                             name = { 'email' }\r\n                             className = { 'form__element' }\r\n                             type = { 'email' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Email' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'signUpPassword' }>\r\n                        <span className = { 'label__icon fa fa-lock coloring' }>\r\n                        </span>\r\n                      </label>\r\n                      <input id = { 'signUpPassword' }\r\n                             name = { 'password' }\r\n                             className = { 'form__element' }\r\n                             type = { 'password' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Password' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'signUpPasswordRepeat' }>\r\n                        <span className = { 'label__icon fa fa-lock coloring' }>\r\n                        </span>\r\n                      </label>\r\n                      <input id = \"signUpPasswordRepeat\"\r\n                             name = { 'repeatedPassword' }\r\n                             className = { 'form__element' }\r\n                             type = { 'password' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Repeat Password' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'age' } id = { 'birthday' }>\r\n                        <span className = { 'subtitle' }> Birth Date: </span>\r\n                        <span className = { 'fas fa-birthday-cake' }>\r\n                                        </span>\r\n                      </label>\r\n                      <input id = { 'signUpAge' }\r\n                             name = { 'bDate' }\r\n                             className = { 'form_element' }\r\n                             type = { 'date' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Birth Date' }\r\n                             min = { '1900-01-01' }\r\n                             max = { '2010-01-01' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <div className = { 'form__radio' }>\r\n                        <label className = { 'label__style' }>Male\r\n                          <input type = { 'radio' }\r\n                                 value = { '1' }\r\n                                 checked = { this.state.gender === '1' }\r\n                                 onChange = { this.onRadioChange }\r\n                          />\r\n                          <span className = { 'checkmark' }/>\r\n                        </label>\r\n                        <label className = { 'label__style' }>Female\r\n                          <input type = { 'radio' }\r\n                                 value = { '2' }\r\n                                 checked = { this.state.gender === '2' }\r\n                                 onChange = { this.onRadioChange }\r\n                          />\r\n                          <span className = { 'checkmark' }/>\r\n                        </label>\r\n                      </div>\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <input className = { 'form__button' }\r\n                             type = { 'submit' }\r\n                             value = { 'Sign up' }\r\n                             onClick = { this.onSignUp }\r\n                      />\r\n                    </fieldset>\r\n                    <Recaptcha\r\n                        elementID = { 'g-recaptcha' }\r\n                        sitekey = \"6Lf0od8UAAAAAFoog9iFIpVd8rcPxBwHpUKpnCua\"\r\n                        render = \"explicit\"\r\n                        theme = \"dark\"\r\n                        verifyCallback = { this.verifyCallback }\r\n                    />\r\n                    <small>\r\n                      <span className = { 'subtitle' }> Are you already a member?</span>\r\n                      <label htmlFor = { 'flipper__checkbox' }\r\n                             onClick = { this.changeSign }\r\n                             className = { 'form__link' }\r\n                      >\r\n                        Click here to login\r\n                      </label>\r\n                      .\r\n                    </small>\r\n                  </form>\r\n                </div>\r\n            }\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginModal;","import React  from 'react';\r\nimport '../assets/styles/SignInUpModal.css';\r\nimport ToggleModal from \"../common/ToggleModal\";\r\nimport LoginModal from \"../common/LoginModal\";\r\n\r\nclass LoginAndroid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: true,\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({showModal: true});\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <ToggleModal\r\n                modal = { this.state.showModal }\r\n                toggle = { this.toggleModal }\r\n                modalSize = { 'md' }\r\n                modalHeader = { 'Login Form' }\r\n                modalBody = { <LoginModal /> }\r\n                setUserLevel = { this.props.setUserLevel }\r\n            />\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginAndroid;\r\n","import React, {Component} from 'react';\r\n// noinspection ES6CheckImport\r\nimport {Route, Router, Switch} from 'react-router-dom';\r\nimport PageWrapper from './components/PageWrapper';\r\nimport Home from './components/pages/Home';\r\nimport AboutUs from './components/pages/AboutUs';\r\nimport ProfileUser from './components/pages/ProfileUser';\r\nimport ProfileCoach from './components/pages/ProfileCoach';\r\nimport ProfileAdmin from './components/pages/ProfileAdmin';\r\nimport Classes from './components/pages/Classes';\r\nimport ScrollToTop from './components/common/ScrollToTop';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport forgotPassword from \"./components/pages/ForgotPassword\";\r\nimport VerifyEmail from \"./components/pages/VerifyEmail\";\r\nimport ResetPassword from \"./components/pages/ResetPassword\";\r\nimport history from './history';\r\nimport {getUserLevel, isAuthenticated} from './repository';\r\nimport UIDashboard from './components/pages/UIDashboard';\r\nimport Tabletop from 'tabletop';\r\nimport Spinner from './components/Spinner';\r\nimport NotFound from './components/common/NotFound';\r\nimport LoginAndroid from \"./components/pages/LoginAndroid\";\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userLevel: undefined,\r\n            stylesheetData: {},\r\n            loading: true,\r\n        };\r\n        this.setUserLevel = this.setUserLevel.bind(this);\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Persist on state\r\n        if (isAuthenticated()) {\r\n            getUserLevel().then(level => this.setUserLevel(level));\r\n        }\r\n\r\n        // noinspection JSUnusedGlobalSymbols\r\n        Tabletop.init({\r\n            key: process.env.REACT_APP_TABLETOP_API_KEY,\r\n            callback: googleData => {\r\n                this.setState({stylesheetData: this.readStylesheetInfo(googleData)},\r\n                    () => {\r\n                        this.setState({loading: false});\r\n                    });\r\n            },\r\n            simpleSheet: false,\r\n        });\r\n    }\r\n\r\n    readStylesheetInfo(data) {\r\n        const home = data['Home'];\r\n        const classes = data['Classes'];\r\n        const about = data['About'];\r\n        const footer = data['Footer'];\r\n        const jsonData = {};\r\n\r\n        // Home\r\n        const jsonHome = {'carousel': [], 'services': []};\r\n        home.columnNames.forEach(col => {\r\n            if (col.includes('carousel')) {\r\n                jsonHome['carousel'].push({\r\n                    'label': home.elements[0][col],\r\n                    'text': home.elements[1][col],\r\n                    'src': home.elements[2][col],\r\n                });\r\n            }\r\n            if (col.includes('services')) {\r\n                jsonHome['services'].push({\r\n                    'title': home.elements[0][col],\r\n                    'message': home.elements[1][col],\r\n                    'icon': home.elements[2][col],\r\n                });\r\n            }\r\n        });\r\n\r\n        // Classes\r\n        const jsonClasses = {'classes': [], 'timetable': {}};\r\n        classes.columnNames.forEach(col => {\r\n            if (col.includes('class')) {\r\n                jsonClasses['classes'].push({\r\n                    'title': classes.elements[0][col],\r\n                    'text': classes.elements[1][col],\r\n                    'src': classes.elements[2][col],\r\n                });\r\n            }\r\n            if (col.includes('timetable')) {\r\n                jsonClasses['timetable'] = {'src': classes.elements[0][col]};\r\n            }\r\n        });\r\n\r\n        // About\r\n        const jsonAbout = {'coach': [], 'contact': {}};\r\n        about.columnNames.forEach(col => {\r\n            if (col.includes('coach')) {\r\n                jsonAbout['coach'].push({\r\n                    'name': about.elements[0][col],\r\n                    'text': about.elements[1][col],\r\n                    'src': about.elements[2][col],\r\n                });\r\n            }\r\n            if (col.includes('contact')) {\r\n                jsonAbout['contact']['address'] = about.elements[0][col];\r\n                jsonAbout['contact']['phone'] = about.elements[1][col];\r\n                jsonAbout['contact']['email'] = about.elements[2][col];\r\n                jsonAbout['contact']['facebook'] = about.elements[3][col];\r\n                jsonAbout['contact']['instagram'] = about.elements[4][col];\r\n            }\r\n        });\r\n\r\n        // Footer\r\n        const jsonFooter = {'social': {}, 'about-us': {}, 'about-club': []};\r\n        footer.columnNames.forEach(col => {\r\n            if (col.includes('social')) {\r\n                jsonFooter['social']['text'] = footer.elements[0][col];\r\n                jsonFooter['social']['facebook'] = footer.elements[1][col];\r\n                jsonFooter['social']['instagram'] = footer.elements[2][col];\r\n            }\r\n            if (col.includes('about-us')) {\r\n                jsonFooter['about-us']['address'] = footer.elements[0][col];\r\n                jsonFooter['about-us']['email'] = footer.elements[1][col];\r\n            }\r\n            if (col.includes('about-club')) {\r\n                for (let index of footer.elements) {\r\n                    if (index['about-club']) {\r\n                        jsonFooter['about-club'].push(index['about-club']);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        jsonData['Home'] = jsonHome;\r\n        jsonData['Class'] = jsonClasses;\r\n        jsonData['About'] = jsonAbout;\r\n        jsonData['Footer'] = jsonFooter;\r\n\r\n        return jsonData;\r\n    }\r\n\r\n    setUserLevel = (userLevel) => {\r\n        this.setState({userLevel});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.loading ?\r\n                        <Spinner/>\r\n                        :\r\n                        <Router history={history}>\r\n                            <PageWrapper userLevel={this.state.userLevel}\r\n                                         setUserLevel={this.setUserLevel}\r\n                                         stylesheetData={this.state.stylesheetData}\r\n                            >\r\n                                <ScrollToTop/>\r\n                                <Switch>\r\n                                    <Route exact\r\n                                           path=\"/\"\r\n                                           component={(props) => <Home {...props}\r\n                                                                       userLevel={this.state.userLevel}\r\n                                                                       stylesheetData={this.state.stylesheetData}\r\n                                           />}\r\n                                    />\r\n                                    <Route path=\"/about\"\r\n                                           component={(props) => <AboutUs {...props}\r\n                                                                          userLevel={this.state.userLevel}\r\n                                                                          stylesheetData={this.state.stylesheetData}\r\n                                           />}\r\n                                    />\r\n                                    <Route path=\"/classes\"\r\n                                           component={(props) => <Classes {...props}\r\n                                                                          userLevel={this.state.userLevel}\r\n                                                                          stylesheetData={this.state.stylesheetData}\r\n                                           />}\r\n                                    />\r\n\r\n                                  <Route exact\r\n                                         path=\"/loginAndroid\"\r\n                                         component={(props) => <LoginAndroid {...props}\r\n                                                                             setUserLevel={this.setUserLevel}\r\n                                                                             userLevel={this.state.userLevel}\r\n                                                                             stylesheetData={this.state.stylesheetData}\r\n                                         />}\r\n                                  />\r\n\r\n                                    <Route exact path=\"/forgotPassword\" component={forgotPassword}/>\r\n                                    <Route exact path=\"/verifyEmail/:id\" component={VerifyEmail}/>\r\n                                    <Route exact path={\"/resetPassword/:id\"} component={ResetPassword}/>\r\n\r\n                                    <PrivateRoute path=\"/user/profile\"\r\n                                                  component={ProfileUser}\r\n                                                  userLevel={this.state.userLevel}\r\n                                    />\r\n                                    <PrivateRoute path=\"/coach/profile\"\r\n                                                  component={ProfileCoach}\r\n                                                  userLevel={this.state.userLevel}\r\n                                    />\r\n                                    <PrivateRoute path=\"/admin/profile\"\r\n                                                  component={ProfileAdmin}\r\n                                                  userLevel={this.state.userLevel}\r\n                                    />\r\n                                    <PrivateRoute path=\"/admin/dashboard\"\r\n                                                  component={UIDashboard}\r\n                                                  userLevel={this.state.userLevel}\r\n                                    />\r\n                                    <Route component={NotFound}/>\r\n                                </Switch>\r\n                            </PageWrapper>\r\n\r\n                        </Router>\r\n\r\n\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister().then();\r\n    });\r\n  }\r\n}\r\n","import React              from 'react';\r\nimport ReactDOM           from 'react-dom';\r\nimport App                from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n      <App />,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/fitnessFactoryLogo.444228d2.png\";"],"sourceRoot":""}