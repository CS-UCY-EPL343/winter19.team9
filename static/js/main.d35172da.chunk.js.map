{"version":3,"sources":["components/common/AnnouncementModal.jsx","components/common/ButtonLoader.jsx","components/assets/img/logos/ffLogoTransparent.png","components/common/Message.jsx","components/common/AnnouncementsPrivateModal.jsx","components/common/MessageNewModalCoach.jsx","components/common/MessagesModalAdminCoach.jsx","repository.js","components/assets/img/logos/jccLogo.svg","components/assets/img/logos/paypalLogo.svg","components/common/EditAccount.jsx","components/common/ProfileInfo.jsx","components/pages/ProfileAdmin.jsx","components/Spinner.jsx","components/common/ToggleModal.jsx","components/common/SelectionPT.jsx","components/common/PersonalTrainingCreate.jsx","history.js","components/common/SignUp.jsx","components/common/LogIn.jsx","components/common/SignInUpModal.jsx","components/common/Navigation.jsx","components/common/Footer.jsx","components/PageWrapper.jsx","components/common/CarouselHP.jsx","components/common/ServiceGoal.jsx","components/common/Services.jsx","components/common/Announcement.jsx","components/common/AnnouncementsPublic.jsx","components/pages/Home.jsx","components/common/ContactUs.jsx","components/common/TeamMember.jsx","components/common/Team.jsx","components/pages/PrivacyPolicy.jsx","components/pages/AboutUs.jsx","components/common/PaymentModal.jsx","components/common/Event.jsx","components/common/EventsModal.jsx","components/common/AnnouncementCompPub.jsx","components/common/AnnouncementsPrivate.jsx","components/common/MessagesNewModalForm.jsx","components/common/MessageNewModal.jsx","components/common/MessagesModal.jsx","components/common/SettingsProfile.jsx","components/common/GeneralScheduleModalBody.jsx","components/common/BookClass.jsx","components/common/EnrolledClassSchedule.jsx","components/pages/ProfileUser.jsx","components/common/SelectionPTCoach.jsx","components/common/CoachSchedule.jsx","components/pages/ProfileCoach.jsx","components/pages/Classes.jsx","components/common/ScrollToTop.jsx","components/PrivateRoute.jsx","components/pages/ForgotPassword.jsx","components/pages/VerifyEmail.jsx","components/pages/ResetPassword.jsx","components/common/LineChart.jsx","components/common/PieChart.jsx","components/common/CreateStaffMember.jsx","components/common/StaffList.jsx","components/common/Leader.jsx","components/common/LeaderBoard.jsx","components/common/Graphs.jsx","components/pages/UIDashboard.jsx","components/common/NotFound.jsx","components/common/LoginModal.jsx","components/pages/LoginAndroid.jsx","App.js","serviceWorker.js","index.js","components/assets/img/logos/fitnessFactoryLogo.png"],"names":["AnnouncementModal","props","handleChange","e","setState","target","name","value","onSubmit","preventDefault","announcements","undefined","announcement_id","state","title","message","ANNOUNCEMENT_ID","then","res","DeleteAnn","level","toggle","bind","this","prevProps","prevState","snapshot","isOpen","modal","size","aria-labelledby","centered","className","htmlFor","style","color","type","id","placeholder","defaultValue","required","onChange","onClick","btnCancel","isPrivate","Component","ButtonLoader","data-testid","disabled","loading","icon","faSpinner","spin","loadingText","textIcon","faSearch","text","module","exports","Message","imageURL","$imagePreview","src","alt","image","Buffer","from","toString","outgoing","hasSeen","fromContact","toContact","timestamp","adminAvatar","AnnouncementsPrivateModal","MessageNewModal","console","log","user_ID","contact","Swal","fire","recipients","componentDidMount","Modal","ModalHeader","ModalBody","username","ModalFooter","Button","MessagesModalAdminCoach","newModal","onMessageSubmit","createNewMessage","response","newArr","messages","slice","unshift","catch","testLoading","getMessagesMelios","userName","sort","a","b","Message_ID","err","alert","TotalMessages","newMessages","map","msg","makeMessagesRead","toggleTotalMessages","includes","Spinner","animationIn","index","userLevel","From_level","To_Name","To_Surname","To_level","toUpperCase","From_Name","From_Surname","Timestamp","split","key","Title","BASE_URL","logIn","data","axios","post","password","localStorage","setItem","token","Date","now","Promise","reject","userData","getItem","userPicByUsername","isVerified","staffData","getPrivateAnnouncements","getPrivateAnnouncementsAdmin","getTotalPrivateAnnouncements","getPublicAnnouncements","get","getClasses","getClassDay","ClassName","getClassTime","ClassDay","getClassCoach","ClassTime","getUserID","getAccountID","getCoachID","getClassID","CoachName","removeAnnouncement","deleteAnnouncement","addAnnouncement","addPrivateAnnouncement","updateAnnouncement","allUsersCount","getUserCount","count","getEnrollCount","getPageVisits","allVisitCount","loggedInVisit","updateAboutUsVisit","updateClassesVisit","updateProfileVisit","updateDashboardVisit","updateHomePageVisit","insertCoach","insertAdmin","deleteAdmin","AdminId","deleteCoach","CoachID","countPT","AccountID","sameUsername","countClasses","postuserData","enrollUser","CLASS_ID","User_ID","unenrollUser","deleteUserData","insertPT","deletePT","getAllCoaches","getPersonalSchedule","getClassSchedule","getCoachTraining","Coach_ID","getCoachClasses","userPic","userDetails","signUp","logOut","removeItem","isAuthenticated","getUserLevel","lastVerify","newPassword","resetPass","sendEmail","error","getCoachInfo","coachID","getMessages","getTotalMessages","getCoaches","getAdmins","getServerConnections","connections","getGenderChart","getClassDaysChart","getPersonalDaysChart","getAgeRange","getCoachesDayWork","getCoachesPersonalWork","validURL","str","RegExp","test","getEvents","getEventsTotal","EditAccount","handleSubmit","valPassword","valConfirmPassword","deleted","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","window","location","replace","dismiss","DismissReason","cancel","fillCSV","surname","email","medical_history","phone_number","bdate","age","PT","classes","day","x","time","coach","classname","array","i","length","myKey","push","onValueInput","checkValidationPassword","match","Test","imagePreviewUrl","changeAvatar","testSubmit","noValidate","Name","Email","Surname","checkPhoneNo","number","Phone_Number","changePassword","hashCode","require","createHmac","update","digest","changeConfirmPassword","confirmPassword","file","flag","csvData","Bdate","Age","dataPT","Medical_History","newUser","finally","reader","FileReader","files","onloadend","readAsDataURL","accept","_handleImageChange","pattern","maxLength","ProfileInfo","imagePreviewURL","toggleLoading","newAvatar","loadingInfo","secondaryStyle","ProfileAdmin","loadingSearchUser","nameStart","searchResults","toggleMessages","modalMessages","onAnnouncementSubmit","Ann_ID","modalAnnId","ann","onAnnouncementDelete","filter","onAnnouncementSubmit2","prevAnn","TIMESTAMP","toISOString","toggle2","modal2","handleChange2","user","find","usr","updateCoaches","updatePrivateAnnouncements","updateUserPic","resolve","selectedCoaches","userAccountID","toggleAnnouncements","modalAnnouncements","toggleAnnouncements2","modalAnnouncements2","handleDayTimeChange","retrievedCoach","coachIDRet","toggleAnnouncementsData","modalTitle","modalMessage","toggleAnnouncementsData2","personalTraining","trainingScheduleCoach","classSchedule","coachIDAssigned","ownerName","to","aria-label","hidden","readOnly","width","modalSize","modalHeader","modalBody","marginRight","resetOnSubmit","viewBox","cx","cy","r","fill","stroke","strokeWidth","ToggleModal","isBrowser","isAndroid","isOpera","opr","opera","navigator","userAgent","indexOf","isFirefox","InstallTrigger","HTMLElement","isSafari","safari","isIE","document","documentMode","isEdge","StyleMedia","isChrome","chrome","webstore","runtime","isEdgeChromium","isBlink","CSS","Comp","React","cloneElement","createBrowserHistory","SignUp","event","formData","calcDate","setCustomValidity","verifyCallback","rotate","fname","lname","confirm_password","gender","submitted","crypto","newToken","randomBytes","dataSign","bDate","verify","hash","countTotal","toggleModal","dDate","ageDif","getFullYear","ValidatorForm","addValidationRule","autoComplete","TextField","bday","InputLabelProps","shrink","FormControl","component","RadioGroup","FormControlLabel","control","Radio","label","elementID","sitekey","render","theme","Signup","dataLogIn","Error","d","Verify","setUserLevel","history","forgotPassword","SignInUpModal","showModal","$","css","show","onHide","Body","LogIn","Navigation","onLogOut","pathname","exact","logo_img","height","data-toggle","data-target","aria-controls","aria-expanded","Footer","stylesheetData","href","v","padding","Icons","PageWrapper","handleClick","on","animate","scrollTop","getElementById","offset","top","childrenWithProps","Children","children","child","display","minHeight","flexDirection","backgroundColor","flex","data-hash","ControlledCarousel","handleSelect","selectedIndex","direction","Carousel","activeIndex","onSelect","pauseOnHover","touch","item","Item","process","Caption","CarouselHp","ServiceGoal","faMedal","faWeightHanging","charAt","Services","services","animationInDelay","position","left","transform","bgImage","Announcement","toggleHover","hover","onSlickRemove","slickRemove","dataStyle","imgStyle","isAdder","slickAdd","onMouseOver","onMouseOut","AnnouncementsPublic","_isMounted","prev","l","settings","dots","infinite","speed","slidesToShow","slidesToScroll","centerPadding","centerMode","responsive","breakpoint","Home","ContactUs","trim","phone","status","reload","address","facebook","instagram","frameBorder","scrolling","marginHeight","marginWidth","TeamMember","right","Team","coaches","PrivacyPolicy","AboutUs","PaymentModal","defaultChecked","jccLogo","paypalLogo","Event","active","timeStart","EventsModal","events","date","dateTimeFormat","Intl","DateTimeFormat","weekday","year","month","format","startSplit","start","parseInt","getHours","getMinutes","AnnouncementCompPub","AnnouncementsPrivate","MessagesNewModalForm","rec","MessagesNewModal","MessagesModal","textAlign","SettingsProfile","context","open","togglePayment","modalPayment","toggleEvents","modalEvents","toggleTotalEvents","TotalEvents","toggleEditAccount","modalEditAccount","TotalAnnouncement","sevenDaysLeft","Count","total","GeneralScheduleModalBody","BookClass","toggleModalGeneral","modalGeneral","handleClass","Day","Time","SelectedClass","clear","handleDay","SelectedDay","DayCode","handleTime","SelectedTime","TimeCode","handleCoach","SelectedCoach","ClassID","invalid","getSelections","onDelete","EnrolledClassSchedule","ColorLuminance","hex","lum","String","c","rgb","substr","Math","round","min","max","myRef","createRef","refID","refIDs","ptIDs","trainingScheduleRet","personalSchedule","cIDs","pIDs","cNames","pNames","ClassColors","StateSetter","StateSetterPT","y","z","dataClasses","ret","forEach","node","childNodes","textContent","backgroundImage","userSchedule","retPer","p","newList","splice","newList2","newList3","ref","Array","keys","toFixed","ProfileUser","handleSelections","handlePTClass","EnrollID","SelectionPTCoach","selectionTime","selectionDay","toogle","clearOptions","userID","CoachSchedule","toggleModalCoachBooked","toggleModalCoachHasClass","toggleModalAnotherClient","toggleModalEmptyCell","toggleModalClientHasClass","toggleModalClientHasClassInsert","coachName","clientNames","refIDsCoach","insertDeleteMethodStates","fillTable","classRefIDs","setAttribute","string","stringArray","retCoach","fullName","ClientRefIDs","pos","posCoach","ProfileCoach","searchButton","userDropdown","cleared","Classes","ScrollToTop","useLocation","useEffect","scrollTo","PrivateRoute","UserLevel","rest","onMailChange","sendEmailPass","messageFromServer","input","showError","sendingEmail","confirming","VerifyEmail","confirm","secret","params","ResetPassword","getID","isLoading","LineChart","lineChart","labels","percentChange","percentComparison","lastNumber","getChartData","createChart","updateChart","clearInterval","newNumber","randomData","ctx","datasets","strokeColor","pointColor","borderColor","pointStrokeColor","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","call","chart","tooltip","_active","activePoint","tooltipPosition","topY","legend","bottom","bottomY","chartArea","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","restore","myLineChart","maintainAspectRatio","options","tooltips","enabled","intersect","mode","titleFontSize","titleSpacing","titleMarginBottom","displayColors","elements","point","radius","scales","xAxes","yAxes","self","setInterval","chartSpeed","getData","shift","changeOne","changeTwo","percentComparsion","changeNumber","divStyle","background","bgColor","PieChart","myChart","animationTime","timeMS","destroy","hoverBackgroundColor","cutoutPercentage","align","fullWidth","animation","animateScale","duration","CreateStaffMember","staffType","Account_ID","newStaff","Gender","onSuccess","admins","marginTop","marginBottom","StaffList","DeleteCoach","addStaffMember","staff","DeleteAdmin","createAdmin","createCoach","Object","defineProperty","getOwnPropertyDescriptor","admin","Leader","LeaderBoard","sortOrder","sortAsc","num","dataSort","dataTitle","numberComma","leaders","parseFloat","leader","numberWithCommas","Graphs","createGraph","graphData","scale","ticks","beginAtZero","gridLines","zeroLineColor","colors","ys","chart1","getContext","xs","aspectRatio","defaultFontColor","defaultFontSize","UIDashboard","getGraphData","finalCoachData","groupBy","val","coachData","dayIndex","dayToIndex","Participants","firstGraphLoaded","values","indexToDay","selectedGraph","genders","enroll","personal","uiDataPageViews","uiDataUserTypes","handleChart","visitCounts","userCounts","list","keyGetter","Map","collection","set","types","visits","page","views","Number","NotFound","LoginModal","onRadioChange","changeSign","cryptr","encryptedString","encrypt","onSignUp","repeatedPassword","onClose","med","userVerify","tabIndex","role","aria-hidden","action","method","checked","LoginAndroid","App","Tabletop","init","callback","googleData","readStylesheetInfo","simpleSheet","home","about","footer","jsonData","jsonHome","columnNames","col","jsonClasses","jsonAbout","jsonFooter","path","Boolean","hostname","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d35172da.chunk.js","sourcesContent":["import React, {Component}                                   from 'react';\r\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\n\r\nclass AnnouncementModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title          : '',\r\n      message        : '',\r\n      announcement_id: '',\r\n      // this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID\r\n      // || '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.DeleteAnn = this.DeleteAnn.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      title          : this.props.title || '',\r\n      message        : this.props.message || '',\r\n      announcement_id: this.props.announcement_id || '',\r\n    });\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (!this.props.announcements || this.props.announcement_id === undefined) {\r\n      return;\r\n    }\r\n    if (this.props.announcement_id === prevProps.announcement_id\r\n        || this.props.announcement_id === undefined) {\r\n      return;\r\n    }\r\n    if (this.props.title !== prevProps.title ||\r\n        this.props.message !== prevProps.message\r\n        || this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID\r\n        !== prevProps.announcements[this.props.announcement_id].ANNOUNCEMENT_ID) {\r\n      this.setState({\r\n        title          : this.props.title || '',\r\n        message        : this.props.message || '',\r\n        announcement_id: this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID\r\n                         || '',\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.announcements && this.props.announcement_id !== undefined) {\r\n      this.props.onSubmit(this.state.title, this.state.message,\r\n          this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID)\r\n          .then((res) => {\r\n            if (res) {\r\n              // this.setState({title: '', message: '', announcement_id: ''});\r\n            }\r\n          });\r\n    } else {\r\n      this.props.onSubmit(this.state.title, this.state.message).then((res) => {\r\n        if (res) {\r\n          this.setState({title: '', message: ''});\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // DeleteAnn = (ANNOUNCEMENT_ID) => {\r\n  //     if (this.state.level <= 1) {\r\n  //         return;\r\n  //     }\r\n  //\r\n  //     removeAnnouncement(ANNOUNCEMENT_ID).then(() => {\r\n  //         this.setState({\r\n  //             announcements: this.state.announcements.filter(\r\n  //                 ann => ann.ANNOUNCEMENT_ID\r\n  //                     !== ANNOUNCEMENT_ID),\r\n  //         });\r\n  //     }).catch(err => alert(err));\r\n  //\r\n  // };\r\n\r\n  DeleteAnn = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.level !== -1) {\r\n      this.props.DeleteAnn(this.props.announcement_id).then((res) => {\r\n        if (res) {\r\n          this.props.toggle();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  toggle = () => {\r\n    if (!(this.props.announcements && this.props.announcement_id !== undefined)) {\r\n      this.setState({title: '', message: ''});\r\n    }\r\n    this.props.toggle();\r\n  };\r\n\r\n  render() {\r\n    // noinspection JSUnresolvedVariable\r\n    return (\r\n        <Modal isOpen = { this.props.modal } toggle = { this.toggle }\r\n               size = { 'md' }\r\n               aria-labelledby = \"contained-modal-title-vcenter\"\r\n               centered\r\n        >\r\n          <ModalHeader toggle = { this.toggle }>Add\r\n                                                Announcement</ModalHeader>\r\n          <ModalBody>\r\n            <form>\r\n              <div className = \"form-group\">\r\n                <label htmlFor = \"ann-modal-title\"\r\n                       className = \"col-form-label\"\r\n                       style = { {color: '#D90429'} }\r\n                >Title:</label>\r\n                <input type = \"text\"\r\n                       className = \"form-control\"\r\n                       id = \"ann-modal-title\"\r\n                       placeholder = \"Enter a title...\"\r\n                       name = \"title\"\r\n                       defaultValue = { this.props.title || '' }\r\n                       required\r\n                       onChange = { this.handleChange }\r\n                />\r\n              </div>\r\n              <div className = \"form-group\">\r\n                <label htmlFor = \"ann-modal-message\"\r\n                       className = \"col-form-label\"\r\n                       style = { {color: '#D90429'} }\r\n                >Message:</label>\r\n                <textarea className = \"form-control\"\r\n                          id = \"ann-modal-message\"\r\n                          placeholder = \"Enter a message...\"\r\n                          name = \"message\"\r\n                          defaultValue = { this.props.message || '' }\r\n                          required\r\n                          onChange = { this.handleChange }\r\n                />\r\n              </div>\r\n            </form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick = { this.toggle }>{ this.props.btnCancel\r\n                                                || 'Cancel' }</Button>\r\n            <Button onClick = { this.onSubmit }>{ 'Submit' }</Button>\r\n            { this.props.isPrivate &&\r\n              <Button onClick = { this.DeleteAnn }>{ 'Delete' }</Button> }\r\n          </ModalFooter>\r\n        </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnnouncementModal;","import React, {Component} from 'react';\r\nimport '../assets/styles/ButtonLoader.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSpinner, faSearch} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ButtonLoader extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.onClick ?\r\n                    (\r\n                        <button data-testid={'button'} className={'loading-button' + (this.props.className\r\n                            || '')}\r\n                                disabled={this.props.loading}\r\n                                type={this.props.type || 'button'}\r\n                                onClick={this.props.onClick}\r\n                        >\r\n                            {this.props.loading && (\r\n                                <FontAwesomeIcon icon={faSpinner}\r\n                                                 size={this.props.size || 'sm'}\r\n                                                 spin\r\n                                />\r\n                            )}\r\n                            {this.props.loading &&\r\n                            <span>{this.props.loadingText}</span>}\r\n                            {!this.props.loading && <span>{this.props.textIcon\r\n                                ? <FontAwesomeIcon icon={faSearch}\r\n                                                   size={this.props.size || 'sm'}\r\n                                />\r\n                                : this.props.text}</span>}\r\n                        </button>\r\n                    ) :\r\n                    (\r\n                        <button data-testid={'button'} className={'loading-button' + (this.props.className\r\n                            || '')}\r\n                                disabled={this.props.loading}\r\n                                type={this.props.type || 'button'}\r\n                        >\r\n                            {this.props.loading && (\r\n                                <FontAwesomeIcon icon={faSpinner}\r\n                                                 size={this.props.size || 'sm'}\r\n                                                 spin\r\n                                />\r\n                            )}\r\n                            {this.props.loading &&\r\n                            <span>{this.props.loadingText}</span>}\r\n                            {!this.props.loading && <span>{this.props.textIcon\r\n                                ? <FontAwesomeIcon icon={faSearch}\r\n                                                   size={this.props.size || 'sm'}\r\n                                />\r\n                                : this.props.text}</span>}\r\n                        </button>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ButtonLoader;","module.exports = __webpack_public_path__ + \"static/media/ffLogoTransparent.9f75a55d.png\";","import React, {Component} from 'react';\r\nimport '../assets/styles/Message.css';\r\nimport adminAvatar        from '../assets/img/logos/fitnessFactoryLogo.png';\r\n\r\nclass Message extends Component {\r\n  render() {\r\n    let imageURL = 'https://www.w3schools.com/howto/img_avatar.png';\r\n    let $imagePreview = <img data-testid = { 'image' }\r\n                             src = { imageURL }\r\n                             className = { 'img-left' }\r\n                             alt = { 'Profile Avatar' }\r\n    />;\r\n    if (this.props.image) {\r\n      imageURL =\r\n          'data:image/png;base64,' + new Buffer.from(this.props.image,\r\n          'binary').toString(\r\n          'base64');\r\n      $imagePreview = (<img data-testid = { 'image' }\r\n                            src = { imageURL }\r\n                            className = { 'img-left' }\r\n                            alt = { 'Profile Avatar' }\r\n      />);\r\n    }\r\n\r\n    return (\r\n        <div className = { `msg-card \r\n            ${ this.props.outgoing ? 'left' : 'right' } \r\n            ${ this.props.hasSeen ? '' : 'new-msg' }` }\r\n        >\r\n          {/*{ !this.props.outgoing && !this.props.hasSeen &&*/ }\r\n          {/*  <i className = \"fa fa-plus-circle\" /> }*/ }\r\n          { this.props.outgoing ?\r\n              <div className = \"msg-data\">\r\n                <div className = { 'msg-header' }>\r\n                  { $imagePreview }\r\n                  <h2 data-testid = { 'title' } className = \"card-title\">\r\n                    { this.props.title }\r\n                  </h2>\r\n                </div>\r\n                <div className = \"msg-content right\">\r\n                  <h5 data-testid = { 'fromContact' } className = \"msg-contact\">\r\n                    From: { this.props.fromContact }\r\n                  </h5>\r\n                  <h5 data-testid = { 'toContact' } className = \"msg-contact\">\r\n                    To: { this.props.toContact }\r\n                  </h5>\r\n                  <p data-testid = { 'message' } className = \"card-text\">\r\n                    { this.props.message }\r\n                  </p>\r\n                </div>\r\n                <p data-testid = { 'timestamp' }\r\n                   className = \"msg-timestamp left\"\r\n                >{ this.props.timestamp }</p>\r\n              </div>\r\n              :\r\n              <div className = \"msg-data\">\r\n                <div className = { 'msg-header left' }>\r\n                  < img data-testid = { 'image' }\r\n                        src = { adminAvatar }\r\n                        className = { 'img-right' }\r\n                        alt = 'Avatar'\r\n                  />\r\n                  <h2 data-testid = { 'title' } className = \"card-title right\">\r\n                    { this.props.title }\r\n                  </h2>\r\n                </div>\r\n                <div className = \"msg-content left\">\r\n                  <h5 data-testid = { 'fromContact' } className = \"msg-contact\">\r\n                    From: { this.props.fromContact }\r\n                  </h5>\r\n                  <h5 data-testid = { 'toContact' } className = \"msg-contact\">\r\n                    To: { this.props.toContact }\r\n                  </h5>\r\n                  <p data-testid = { 'message' } className = \"card-text\">\r\n                    { this.props.message }\r\n                  </p>\r\n                </div>\r\n                <p data-testid = { 'timestamp' }\r\n                   className = \"msg-timestamp right\"\r\n                >{ this.props.timestamp }</p>\r\n              </div>\r\n          }\r\n        </div>\r\n    )\r\n        ;\r\n  }\r\n}\r\n\r\nexport default Message;","import React, {Component}                                   from 'react';\r\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\n\r\nclass AnnouncementsPrivateModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title  : this.props.title || '',\r\n      message: this.props.message || '',\r\n      // announcement_id :\r\n      // this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID\r\n      // || '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.title, this.state.message).then((res) => {\r\n      if(res) {\r\n        this.toggle();\r\n      }\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({title: '', message: ''});\r\n    this.props.toggle();\r\n  };\r\n\r\n  render() {\r\n    // noinspection JSUnresolvedVariable\r\n    return (\r\n        <Modal isOpen = { this.props.modal } toggle = { this.toggle }\r\n               size = { 'md' }\r\n               aria-labelledby = \"contained-modal-title-vcenter\"\r\n               centered\r\n        >\r\n          <ModalHeader toggle = { this.toggle }>Add\r\n                                                      Announcement</ModalHeader>\r\n          <ModalBody>\r\n            <form>\r\n              <div className = \"form-group\">\r\n                <label htmlFor = \"ann-modal-title\"\r\n                       className = \"col-form-label\"\r\n                       style = { {color: '#D90429'} }\r\n                >Title:</label>\r\n                <input type = \"text\"\r\n                       className = \"form-control\"\r\n                       id = \"ann-modal-title\"\r\n                       placeholder = \"Enter a title...\"\r\n                       name = \"title\"\r\n                       defaultValue = { this.props.title || '' }\r\n                       required\r\n                       onChange = { this.handleChange }\r\n                />\r\n              </div>\r\n              <div className = \"form-group\">\r\n                <label htmlFor = \"ann-modal-message\"\r\n                       className = \"col-form-label\"\r\n                       style = { {color: '#D90429'} }\r\n                >Message:</label>\r\n                <textarea className = \"form-control\"\r\n                          id = \"ann-modal-message\"\r\n                          placeholder = \"Enter a message...\"\r\n                          name = \"message\"\r\n                          defaultValue = { this.props.message || '' }\r\n                          required\r\n                          onChange = { this.handleChange }\r\n                />\r\n              </div>\r\n            </form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick = { this.toggle }>{ this.props.btnCancel\r\n                                                      || 'Cancel' }</Button>\r\n            <Button onClick = { this.onSubmit }>{ 'Submit' }</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnnouncementsPrivateModal;","import React, {Component}                                   from 'react';\r\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\nimport Swal                                                 from \"sweetalert2\";\r\n\r\nclass MessageNewModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title     : '',\r\n            message   : '',\r\n            recipients: [],\r\n            contact   : '',\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({contact: this.props.user_ID},()=>{\r\n\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n            console.log(\"User_ID \");\r\n            console.log(this.props.user_ID);\r\n            if (!this.state.title || !this.state.message || !this.state.contact) {\r\n                Swal.fire(\r\n                    'Please fill in all boxes',\r\n                    '',\r\n                    'error',\r\n                ).then();\r\n                return;\r\n            }\r\n            this.props.onSubmit(e, this.state.title, this.state.message,\r\n                this.state.contact);\r\n            this.setState({title: '', message: '', contact: ''});\r\n\r\n    };\r\n\r\n    render() {\r\n        // noinspection JSUnresolvedVariable\r\n        return (\r\n            <Modal isOpen = { this.props.modal } toggle = { this.props.toggle }\r\n                   size = { 'md' }\r\n                   aria-labelledby = \"contained-modal-title-vcenter\"\r\n                   centered\r\n            >\r\n                <ModalHeader toggle = { this.props.toggle }>New Message</ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className = \"form-group\">\r\n                            <label htmlFor = \"ann-modal-to\"\r\n                                   className = \"col-form-label\"\r\n                                   style = { {color: '#D90429'} }\r\n                            >To: {this.props.username} </label>\r\n\r\n\r\n                            {/*<select id = \"ann-modal-to\"*/}\r\n                            {/*        name = \"contact\"*/}\r\n                            {/*        className = \"form-control\"*/}\r\n                            {/*        placeholder = \"Select recipient...\"*/}\r\n                            {/*        required*/}\r\n                            {/*        onChange = { this.handleChange }*/}\r\n                            {/*>*/}\r\n                            {/*    <option value = ''>*/}\r\n                            {/*        Select recipient...*/}\r\n                            {/*    </option>*/}\r\n                            {/*    { this.state.recipients.map((rec, index) => {*/}\r\n                            {/*        // noinspection JSUnresolvedVariable*/}\r\n                            {/*        return <option key = { index }*/}\r\n                            {/*                       value = { rec.AccountID }*/}\r\n                            {/*        >*/}\r\n                            {/*            { `${ rec.CoachName } ${ rec.Surname } - ${ rec.level.toUpperCase() }` }*/}\r\n                            {/*        </option>;*/}\r\n                            {/*    }) }*/}\r\n                            {/*</select>*/}\r\n\r\n                        </div>\r\n                        <div className = \"form-group\">\r\n                            <label htmlFor = \"ann-modal-title\"\r\n                                   className = \"col-form-label\"\r\n                                   style = { {color: '#D90429'} }\r\n                            >Title:</label>\r\n                            <input type = \"text\"\r\n                                   className = \"form-control\"\r\n                                   id = \"ann-modal-title\"\r\n                                   placeholder = \"Enter a title...\"\r\n                                   name = \"title\"\r\n                                   required\r\n                                   onChange = { this.handleChange }\r\n                            />\r\n                        </div>\r\n                        <div className = \"form-group\">\r\n                            <label htmlFor = \"ann-modal-message\"\r\n                                   className = \"col-form-label\"\r\n                                   style = { {color: '#D90429'} }\r\n                            >Message:</label>\r\n                            <textarea className = \"form-control\"\r\n                                      id = \"ann-modal-message\"\r\n                                      placeholder = \"Enter a message...\"\r\n                                      name = \"message\"\r\n                                      required\r\n                                      onChange = { this.handleChange }\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button onClick = { this.props.toggle }>{ this.props.btnCancel\r\n                    || 'Cancel' }</Button>\r\n                    <Button onClick = { this.onSubmit }>{ 'Submit' }</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessageNewModal;","import React, {Component} from 'react';\r\nimport '../assets/styles/MessagesModal.css';\r\nimport Message            from './Message';\r\nimport {\r\n  createNewMessage,\r\n  getMessagesMelios,\r\n  makeMessagesRead,\r\n}                         from '../../repository';\r\nimport MessageNewModal    from './MessageNewModalCoach';\r\nimport Swal               from 'sweetalert2';\r\nimport Spinner            from '../Spinner';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\n\r\nclass MessagesModalAdminCoach extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      newModal: false,\r\n      loading : [true, false],\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onMessageSubmit = this.onMessageSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.testLoading) {\r\n      this.setState({messages: this.props.messages, loading: [false, false]});\r\n    } else {\r\n      // const data = {username: this.props.username};\r\n      getMessagesMelios(this.props.userName).then(response => {\r\n        this.setState({\r\n          messages: response.messages[0].sort(\r\n              function(a, b) {\r\n                // noinspection JSUnresolvedVariable\r\n                return b.Message_ID\r\n                       - a.Message_ID;\r\n              }),\r\n        });\r\n      }).then(() => {\r\n        let loading = this.state.loading;\r\n        loading[0] = false;\r\n        this.setState({loading});\r\n      }).catch(err => alert(err));\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.TotalMessages > 0) {\r\n      // noinspection JSUnresolvedVariable\r\n      const newMessages = this.state.messages.slice(0,\r\n          this.props.TotalMessages).map(msg => msg.Message_ID);\r\n      makeMessagesRead(newMessages).then(() => {\r\n        this.props.toggleTotalMessages();\r\n      }).catch(err => alert(err));\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({newModal: !this.state.newModal});\r\n  };\r\n\r\n  onMessageSubmit = (e, title, message, contact) => {\r\n    e.preventDefault();\r\n    createNewMessage({title, message, contact}).then(response => {\r\n      this.toggle();\r\n      let newArr = this.state.messages.slice(0);\r\n      newArr.unshift(response[0]);\r\n      this.setState({messages: newArr});\r\n      console.log(response);\r\n      if (response[0]) {\r\n        Swal.fire(\r\n            'Message sent successfully',\r\n            '',\r\n            'success',\r\n        ).then();\r\n      } else {\r\n        Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ).then();\r\n      }\r\n    }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ).then());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div id = { 'MessagesModal' }>\r\n          { this.state.loading.includes(true) ?\r\n              <Spinner style = { {\r\n                'height'         : '250px',\r\n                'backgroundColor': 'transparent',\r\n              } }\r\n              />\r\n              :\r\n              <>\r\n                <button className = { 'new-msg-btn btn btn-primary btn-xl text-uppercase' }\r\n                        onClick = { this.toggle }\r\n                >\r\n                  New Message\r\n                </button>\r\n                <div id = \"message-container\"\r\n                     className = \"container-fluid mt-2\"\r\n                >\r\n                  <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                    { this.state.messages.map(\r\n                        (msg, index) => {\r\n                          // noinspection JSUnresolvedVariable\r\n                          const outgoing = this.props.userLevel\r\n                                           === msg.From_level;\r\n                          // noinspection JSUnresolvedVariable\r\n                          const toContact = `${ msg.To_Name } ${ msg.To_Surname } - ${ msg.To_level.toUpperCase() }`;\r\n                          // noinspection JSUnresolvedVariable\r\n                          const fromContact = `${ msg.From_Name } ${ msg.From_Surname } - ${ msg.From_level.toUpperCase() }`;\r\n                          const timestamp = msg.Timestamp.split(/[T.]+/)[0]\r\n                                            + ' '\r\n                                            + msg.Timestamp.split(/[T.]+/)[1];\r\n                          // noinspection JSUnresolvedVariable\r\n                          return (\r\n                              <div data-testid = { 'messageDiv' }\r\n                                   className = { 'messageDiv' }\r\n                                   key = { index }\r\n                              >\r\n                                { this.props.TotalMessages > 0 &&\r\n                                  this.props.TotalMessages === index &&\r\n                                  < div className = 'new-msg-line'>\r\n                                    New Messages Above\r\n                                  </div> }\r\n                                <Message\r\n                                    key = { msg.Message_ID }\r\n                                    title = { msg.Title }\r\n                                    message = { msg.Message }\r\n                                    toContact = { toContact }\r\n                                    fromContact = { fromContact }\r\n                                    outgoing = { outgoing }\r\n                                    timestamp = { timestamp }\r\n                                    hasSeen = { msg.hasSeen }\r\n                                    image = { this.state.image }\r\n                                />\r\n                              </div>\r\n                          );\r\n                        })\r\n                    }\r\n                  </AnimatedOnScroll>\r\n                </div>\r\n              </>\r\n          }\r\n\r\n                <MessageNewModal onSubmit = { this.onMessageSubmit }\r\n                                 toggle = { this.toggle }\r\n                                 modal = { this.state.newModal }\r\n                                 username = {this.props.username}\r\n                                 user_ID = {this.props.user_ID}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessagesModalAdminCoach;","import axios from 'axios';\r\n\r\n// const BASE_URL = 'http://localhost:5000';\r\nconst BASE_URL = 'https://europe-west1-ffnbackend-d46c6.cloudfunctions.net/app';\r\n\r\n// const BASE_URL = 'http://10.16.22.2:5000';  // For Android use your IPv4\r\n\r\nexport function logIn(data) {\r\n  return axios.post(`${ BASE_URL }/api/auth`, {\r\n    name    : data.username,\r\n    password: data.password,\r\n  }).then(response => {\r\n    localStorage.setItem('x-access-token', response.data.token);\r\n    // noinspection JSCheckFunctionSignatures\r\n    localStorage.setItem('x-access-token-expiration',\r\n        Date.now() + 2 * 60 * 60 * 1000);\r\n    return response.data;\r\n  }).catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function isVerify(data) {\r\n  return axios.post(`${ BASE_URL }/api/verify`, {\r\n    username: data.username,\r\n    level   : data.level,\r\n  }).then(response => {\r\n    localStorage.setItem('x-access-token', response.data.token);\r\n    // noinspection JSCheckFunctionSignatures\r\n    // return response.data;\r\n  }).catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n// noinspection JSUnusedLocalSymbols,JSUnusedGlobalSymbols\r\nexport function images(file) {\r\n  return axios.post('/api/getProfilePic', {emp_id: 5});\r\n}\r\n\r\nexport function userData() {\r\n  return axios.post(`${ BASE_URL }/api/user/data`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function userPicByUsername() {\r\n  return axios.post(`${ BASE_URL }/api/user/image`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data[0])\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function isVerified() {\r\n  return axios.post(`${ BASE_URL }/api/user/isVerified`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject(\r\n          'Error when get is Verified from database!!'));\r\n}\r\n\r\nexport function staffData() {\r\n  return axios.post(`${ BASE_URL }/api/staff/data`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getPrivateAnnouncements() {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response)\r\n      .catch(() => Promise.reject(\r\n          'Error when get private Announcements from database!!'));\r\n}\r\n\r\nexport function getPrivateAnnouncementsAdmin(username) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/admin/private`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    username        : username,\r\n  }).then(response => response).catch(() => Promise.reject(\r\n      'Error when get private Announcements from database!!'));\r\n}\r\n\r\nexport function getTotalPrivateAnnouncements() {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private/total`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function getPublicAnnouncements() {\r\n  return axios.get(`${ BASE_URL }/api/announcements/public`)\r\n      .then(response => response);\r\n}\r\n\r\nexport function getDayCode() {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/BookClass/ClassDayCode`,\r\n          {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getTimeCode() {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/BookClass/ClassTimeCode`,\r\n          {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClasses() {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassName`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClassName(ClassID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/BookClass/ClassNames`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        ClassID         : ClassID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClassDay(ClassName) {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassDay`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    ClassName       : ClassName,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClassTime(ClassName, ClassDay) {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassTime`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    ClassName       : ClassName,\r\n    ClassDay        : ClassDay,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClassCoach(ClassName, ClassDay, ClassTime) {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassCoach`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    ClassName       : ClassName,\r\n    ClassDay        : ClassDay,\r\n    ClassTime       : ClassTime,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getUserID() {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/UserID`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed user!'));\r\n}\r\n\r\nexport function getAccountID(data) {\r\n  return axios.post(`${ BASE_URL }/api/adminCoach/AccountID`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'), data: data,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed user!'));\r\n}\r\n\r\nexport function getCoachID() {\r\n  return axios.post(`${ BASE_URL }/api/CoachSchedule/CoachID`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed user!'));\r\n}\r\n\r\n// export function getCoachID(ClassName, ClassDay, ClassTime) {\r\n//     return axios\r\n//         .post(`${BASE_URL}/api/BookClass/CoachID`, {'x-access-token':\r\n// localStorage.getItem('x-access-token'), ClassName: ClassName, ClassDay:\r\n// ClassDay, ClassTime: ClassTime}) .then(response => response.data) .catch(err\r\n// => Promise.reject('Authentication Failed!')) }\r\n\r\nexport function getClassID(ClassName, ClassDay, ClassTime, CoachName) {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassID`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    ClassName       : ClassName,\r\n    ClassDay        : ClassDay,\r\n    ClassTime       : ClassTime,\r\n    CoachName       : CoachName,\r\n  })\r\n      .then(response => response)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function removeAnnouncement(id) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/remove`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'), id: id,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function deleteAnnouncement(id) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private/delete`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    announcement_id : id,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function addAnnouncement(title, message) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/public/add`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    title           : title,\r\n    message         : message,\r\n  })\r\n      .then(response => response)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function addPrivateAnnouncement(title, message, username) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private/add`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    title           : title,\r\n    message         : message,\r\n    username        : username,\r\n  })\r\n      .then(response => response)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function updateAnnouncement(announcement_id, title, message) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private/update`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    title           : title,\r\n    message         : message,\r\n    announcement_id : announcement_id,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function allUsersCount() {\r\n  return axios.get(`${ BASE_URL }/api/user/type/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Failed!!!'));\r\n}\r\n\r\nexport function getUserCount() {\r\n  return axios.get(`${ BASE_URL }/api/user/count`)\r\n      .then(response => response.data.count[0].count);\r\n}\r\n\r\nexport function getEnrollCount() {\r\n  return axios.get(`${ BASE_URL }/api/enroll/count`)\r\n      .then(response => response.data.count[0].count);\r\n}\r\n\r\nexport function getPageVisits() {\r\n  return axios.get(`${ BASE_URL }/api/page/visits/count`)\r\n      .then(response => response.data.count[0].count);\r\n}\r\n\r\nexport function allVisitCount() {\r\n  return axios.get(`${ BASE_URL }/api/visit/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('HomePage Count Failed!!!'));\r\n}\r\n\r\nexport function loggedInVisit() {\r\n  return axios.post(`${ BASE_URL }/api/logged/visit/count`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => {});\r\n}\r\n\r\nexport function updateAboutUsVisit() {\r\n  return axios.post(`${ BASE_URL }/api/AboutUs/visit/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('HomePage Count Failed!!!'));\r\n}\r\n\r\nexport function updateClassesVisit() {\r\n  return axios.post(`${ BASE_URL }/api/Classes/visit/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('HomePage Count Failed!!!'));\r\n}\r\n\r\nexport function updateProfileVisit() {\r\n  return axios.post(`${ BASE_URL }/api/profile/visit/count`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Profile Count Failed!!!'));\r\n}\r\n\r\nexport function updateDashboardVisit() {\r\n  return axios.post(`${ BASE_URL }/api/dashboard/visit/count`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Profile Count Failed!!!'));\r\n}\r\n\r\nexport function updateHomePageVisit() {\r\n  return axios.post(`${ BASE_URL }/api/homepage/visit/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('HomePage Count Failed!!!'));\r\n}\r\n\r\nexport function insertCoach(data) {\r\n  return axios.post(`${ BASE_URL }/api/coach/insert`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('insert coach failed.'));\r\n}\r\n\r\nexport function insertAdmin(data) {\r\n  return axios.post(`${ BASE_URL }/api/admin/insert`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Insert Admin failed.'));\r\n}\r\n\r\nexport function deleteAdmin(AdminId) {\r\n  return axios.post(`${ BASE_URL }/api/admin/delete`, {AdminId: AdminId})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Delete Admin Failed.'));\r\n}\r\n\r\nexport function deleteCoach(CoachID) {\r\n  return axios.post(`${ BASE_URL }/api/coach/delete`, {CoachID: CoachID})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Delete Coach Failed.'));\r\n}\r\n\r\nexport function countPT(AccountID) {\r\n  return axios.post(`${ BASE_URL }/api/coach/countPT`,\r\n      {AccountID: AccountID})\r\n      .then(response => response.data.count[0][0])\r\n      .catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function sameUsername(username) {\r\n  return axios.post(`${ BASE_URL }/api/same/username`,\r\n      {username: username})\r\n      .then(response => response.data.count[0])\r\n      .catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function countClasses(AccountID) {\r\n  return axios.post(`${ BASE_URL }/api/coach/countClasses`,\r\n      {AccountID: AccountID})\r\n      .then(response => response.data.count[0][0])\r\n      .catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function postuserData(data) {\r\n  // noinspection JSUnresolvedVariable\r\n  return axios.post(`${ BASE_URL }/api/user/post/data`,\r\n      {'x-access-token': localStorage.getItem('x-access-token'), data: data})\r\n      .then(response => response.message)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function enrollUser(CLASS_ID, User_ID) {\r\n  // noinspection JSUnresolvedVariable\r\n  return axios.post(`${ BASE_URL }/api/BookClass/Enroll`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    CLASS_ID        : CLASS_ID,\r\n    User_ID         : User_ID,\r\n  })\r\n      .then(response => response.message)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function unenrollUser(CLASS_ID, User_ID) {\r\n  // noinspection JSUnresolvedVariable\r\n  return axios\r\n      .post(`${ BASE_URL }/api/BookClass/Unenroll`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        CLASS_ID        : CLASS_ID,\r\n        User_ID         : User_ID,\r\n      })\r\n      .then(response => response.message)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function deleteUserData() {\r\n  return axios.post(`${ BASE_URL }/api/user/delete/data`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  }).then(response => {\r\n    return response.data;\r\n  }).catch(() => Promise.reject('Authentication Failed!'));\r\n\r\n}\r\n\r\n//insert into personal training\r\nexport function insertPT(data) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/insert/PersonalTraining`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        data            : data,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//delete from personal training\r\nexport function deletePT(data) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/delete/PersonalTraining`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        data            : data,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//for coaches for personal training\r\nexport function getAllCoaches() {\r\n  return axios.post(`${ BASE_URL }/api/bookTraining/allCoaches`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//for image from database\r\n// noinspection JSUnusedGlobalSymbols\r\nexport function UserPic(name) {\r\n  return axios.post(`${ BASE_URL }/api/user/UserPic`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    name            : name,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//fetching the data for the personal training schedule\r\nexport function getPersonalTraining(User_ID) {\r\n  return axios.post(`${ BASE_URL }/api/user/getPersonalTraining`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    User_ID         : User_ID,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getPersonalSchedule(User_ID) {\r\n  return axios.post(`${ BASE_URL }/api/user/getPersonalSchedule`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    User_ID         : User_ID,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//Gets the class schedule of the user with the given User_ID\r\nexport function getClassSchedule(User_ID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/user/getClassSchedule`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        User_ID         : User_ID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//fetching the data for the personal training schedule\r\nexport function getCoachTraining(Coach_ID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/coach/getCoachTraining`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        Coach_ID        : Coach_ID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getCoachClasses(Coach_ID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/user/getCoachClasses`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        Coach_ID        : Coach_ID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//fetch pic\r\nexport function userPic(User_ID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/user/userPic`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        User_ID         : User_ID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//mine\r\nexport function userDetails(name) {\r\n  return axios.post(`${ BASE_URL }/api/user/userDetails`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    name            : name,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function signUp(data) {\r\n  return axios.post(`${ BASE_URL }/api/user/insert`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Sign Up failed.'));\r\n}\r\n\r\nexport function logOut() {\r\n  localStorage.removeItem('x-access-token');\r\n  localStorage.removeItem('x-access-token-expiration');\r\n}\r\n\r\nexport function isAuthenticated() {\r\n  return (\r\n      localStorage.getItem('x-access-token') &&\r\n      localStorage.getItem('x-access-token-expiration') > Date.now()\r\n  );\r\n}\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport function hasPermissionFor(user) {\r\n  if (!localStorage.getItem('x-access-token') ||\r\n      !localStorage.getItem('x-access-token-expiration') > Date.now()) {\r\n    return false;\r\n  }\r\n\r\n  return getUserLevel().then(level => {\r\n    if (level === 'admin') {\r\n      return true;\r\n    } else if (level === 'coach' && (\r\n        user === 'coach' || user === 'user')) {\r\n      return true;\r\n    } else {\r\n      return level === 'user' && user === 'user';\r\n    }\r\n  });\r\n}\r\n\r\nexport function getUserLevel() {\r\n  return axios.post(`${ BASE_URL }/api/userLevel`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  }).then(response => response.data.userLevel);\r\n}\r\n\r\nexport function lastVerify(data) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/verifyEmail/:id`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Verification failed.'));\r\n}\r\n\r\nexport function newPassword(data) {\r\n  return axios.post(`${ BASE_URL }/api/reset-password`, data)\r\n      // .then(response => response.data);\r\n      .then(response => {\r\n        localStorage.setItem('x-access-token', response.data.token);\r\n        // noinspection JSCheckFunctionSignatures\r\n        localStorage.setItem('x-access-token-expiration',\r\n            Date.now() + 2 * 60 * 60 * 1000);\r\n      });\r\n\r\n}\r\n\r\nexport function resetPass(data) {\r\n  return axios.post(`${ BASE_URL }/api/resetPassword/:id`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Failed to reset Password'));\r\n}\r\n\r\nexport function sendEmail(data) {\r\n  return axios.post(`${ BASE_URL }/api/email`, data)\r\n      .then(response => response.data)\r\n      .catch(error => error);\r\n}\r\n\r\n//retrieve coach info\r\nexport function getCoachInfo(coachID) {\r\n  return axios.post(`${ BASE_URL }/api/coach/getInfo`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    coachID         : coachID,\r\n\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n// Melios\r\nexport function getMessagesMelios(username) {\r\n  return axios.post(`${ BASE_URL }/api/messages/get2`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    username        : username,\r\n\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getMessages() {\r\n  return axios.post(`${ BASE_URL }/api/messages/get`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function deleteMessage(id) {\r\n  return axios.post(`${ BASE_URL }/api/messages/delete`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'), id,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getTotalMessages() {\r\n  return axios.post(`${ BASE_URL }/api/messages/total`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data.count[0])\r\n      .catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function makeMessagesRead(newMessages) {\r\n  return axios.post(`${ BASE_URL }/api/messages/unread`,\r\n      {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        newMessages     : newMessages,\r\n      }).then(response => response.data).catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function createNewMessage(data) {\r\n  return axios.post(`${ BASE_URL }/api/messages/new`,\r\n      {\r\n        'x-access-token': localStorage.getItem('x-access-token'), data,\r\n      }).then(response => response.data).catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function getCoaches() {\r\n  return axios.get(`${ BASE_URL }/api/coaches/get`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getAdmins() {\r\n  return axios.get(`${ BASE_URL }/api/admins/get`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getServerConnections() {\r\n  return axios.get(`${ BASE_URL }/api/server/connections`)\r\n      .then(response => response.data.connections);\r\n}\r\n\r\nexport function getGenderChart() {\r\n  return axios.get(`${ BASE_URL }/api/chart/pie/gender`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getClassDaysChart() {\r\n  return axios.get(`${ BASE_URL }/api/chart/pie/enroll`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getPersonalDaysChart() {\r\n  return axios.get(`${ BASE_URL }/api/chart/pie/personal`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getAgeRange() {\r\n  return axios.get(`${ BASE_URL }/api/chart/bar/age`)\r\n      .then(response => response.data[0][0]);\r\n}\r\n\r\nexport function getCoachesDayWork() {\r\n  return axios.get(`${ BASE_URL }/api/chart/line/coaches/week-work`)\r\n      .then(response => response.data[0]);\r\n}\r\n\r\nexport function getCoachesPersonalWork() {\r\n  return axios.get(`${ BASE_URL }/api/chart/line/coaches/personal-work`)\r\n      .then(response => response.data[0]);\r\n}\r\n\r\nexport function validURL(str) {\r\n  const pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n                             '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'\r\n                             + // domain name\r\n                             '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4)\r\n                             // address\r\n                             '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and\r\n                             // path\r\n                             '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n                             '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n  return !!pattern.test(str);\r\n}\r\n\r\nexport function getEvents() {\r\n  return axios.post(`${ BASE_URL }/api/events/get`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getEventsTotal() {\r\n  return axios.post(`${ BASE_URL }/api/events/total`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}","module.exports = __webpack_public_path__ + \"static/media/jccLogo.c31e2ec4.svg\";","module.exports = __webpack_public_path__ + \"static/media/paypalLogo.9984b3be.svg\";","import React, {Component}                    from 'react';\r\nimport {CSVLink}                             from 'react-csv';\r\nimport '../assets/styles/EditAccountModal.css';\r\nimport {logOut, userData, userPicByUsername} from '../../repository';\r\nimport {postuserData}                        from '../../repository';\r\nimport {deleteUserData}                      from '../../repository';\r\nimport Swal                                  from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport Spinner                               from '../Spinner';\r\nimport {AnimatedOnScroll}                    from 'react-animated-css-onscroll';\r\n\r\n\r\n\r\nclass EditAccount extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file           : '',\r\n      imagePreviewUrl: '',\r\n      username       : '',\r\n      Email          : '',\r\n      Name           : '',\r\n      Surname        : '',\r\n      password       : '',\r\n      confirmPassword: '',\r\n      image          : '',\r\n      flag           : '1',\r\n      csvData        : [],\r\n      Bdate          : '',\r\n      Age            : '',\r\n      dataPT         : [],\r\n      classes        : [],\r\n      loading        : true,\r\n      Medical_History: '',\r\n      Phone_Number   : '',\r\n      newUser        : false,\r\n      valPassword: '',\r\n      valConfirmPassword:'',\r\n    };\r\n    this.onValueInput = this.onValueInput.bind(this);\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    const {valPassword, valConfirmPassword} = this.state;\r\n    // perform all neccassary validations\r\n    if (valPassword !== valConfirmPassword) {\r\n      Swal.fire(\r\n          'Passwords don\\'t match',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return 0;\r\n    } else {\r\n      return 1;\r\n    }\r\n  };\r\n\r\n  deleted = () => {\r\n    Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteUserData().then(() => {\r\n          Swal.fire(\r\n              'Public Announcement deleted successfully',\r\n              '',\r\n              'success',\r\n          ).then(() => {\r\n            logOut();\r\n            window.location.replace('/');\r\n          });\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Account is safe :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n  };\r\n  fillCSV = (\r\n      name, surname, email, medical_history, phone_number, username, password,\r\n      bdate, age, PT, classes) => {\r\n    let day = '';\r\n    let x = '';\r\n    let time = '';\r\n    let coach = '';\r\n    let classname = '';\r\n    let array = [\r\n      ['Personal Information'], [],\r\n      [\r\n        'Firstname',\r\n        'Lastname',\r\n        'Email',\r\n        'username',\r\n        'password',\r\n        'Phone Number',\r\n        ' Date of Birth',\r\n        'Age',\r\n      ],\r\n      [name, surname, email, username, password, phone_number, bdate, age], [],\r\n      ['Medical History'], [],\r\n      [medical_history],\r\n      ['Personal Training Schedule'], [],\r\n      ['Day', 'Time', 'Coach'],\r\n\r\n    ];\r\n\r\n    for (let i = 0; i < PT.length; i++) {\r\n      x = PT[i];\r\n      for (let myKey in x) {\r\n        if (myKey === 'Day') {\r\n          // noinspection JSUnfilteredForInLoop\r\n          if (x[myKey] === 1) {\r\n            day = 'Monday';\r\n          } else { // noinspection JSUnfilteredForInLoop\r\n            if (x[myKey] === 2) {\r\n              day = 'Tuesday';\r\n            } else { // noinspection JSUnfilteredForInLoop\r\n              if (x[myKey] === 3) {\r\n                day = 'Wednesday';\r\n              } else { // noinspection JSUnfilteredForInLoop\r\n                if (x[myKey] === 4) {\r\n                  day = 'Thursday';\r\n                } else { // noinspection JSAssignmentUsedAsCondition,JSUnfilteredForInLoop\r\n                  if (x[myKey] === 6) {\r\n                    day = 'Saturday';\r\n                  } else {\r\n                    day = 'Sunday';\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else if (myKey === 'Time') {\r\n          // noinspection DuplicatedCode,JSUnfilteredForInLoop\r\n          if (x[myKey] === 1) {\r\n            time = '8:00 - 09:00';\r\n          } else { // noinspection JSUnfilteredForInLoop\r\n            if (x[myKey] === 2) {\r\n              time = '9:00 - 10:00';\r\n            } else { // noinspection JSUnfilteredForInLoop\r\n              if (x[myKey] === 3) {\r\n                time = '10:00 - 11:00';\r\n              } else { // noinspection JSUnfilteredForInLoop\r\n                if (x[myKey] === 4) {\r\n                  time = '11:00 - 12:00';\r\n                } else { // noinspection JSUnfilteredForInLoop\r\n                  if (x[myKey] === 5) {\r\n                    time = '12:00 - 13:00';\r\n                  } else { // noinspection JSUnfilteredForInLoop\r\n                    if (x[myKey] === 6) {\r\n                      time = '13:00 - 14:00';\r\n                    } else { // noinspection JSUnfilteredForInLoop\r\n                      if (x[myKey] === 7) {\r\n                        time = '14:00 - 15:00';\r\n                      } else { // noinspection JSUnfilteredForInLoop\r\n                        if (x[myKey] === 8) {\r\n                          time = '15:00 - 16:00';\r\n                        } else { // noinspection JSUnfilteredForInLoop\r\n                          if (x[myKey] === 9) {\r\n                            time = '16:00 - 17:00';\r\n                          } else { // noinspection JSUnfilteredForInLoop\r\n                            if (x[myKey] === 10) {\r\n                              time = '17:00 - 18:00';\r\n                            } else { // noinspection JSUnfilteredForInLoop\r\n                              if (x[myKey] === 11) {\r\n                                time = '18:00 - 19:00';\r\n                              } else {\r\n                                time = '19:00 - 20:00';\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else if (myKey === 'CoachName') {\r\n          // noinspection JSUnfilteredForInLoop\r\n          coach = x[myKey];\r\n        }\r\n\r\n      }\r\n      array.push([day, time, coach]);\r\n    }\r\n\r\n    array.push([], ['Enrolled Classes Schedule'], [],\r\n        ['Day', 'Time', 'ClassName']);\r\n    for (let i = 0; i < classes.length; i++) {\r\n      x = classes[i];\r\n      for (let myKey in x) {\r\n        if (myKey === 'DayCode') {\r\n          // noinspection JSUnfilteredForInLoop\r\n          if (x[myKey] === 1) {\r\n            day = 'Monday';\r\n          } else { // noinspection JSUnfilteredForInLoop\r\n            if (x[myKey] === 2) {\r\n              day = 'Tuesday';\r\n            } else { // noinspection JSUnfilteredForInLoop\r\n              if (x[myKey] === 3) {\r\n                day = 'Wednesday';\r\n              } else { // noinspection JSUnfilteredForInLoop\r\n                if (x[myKey] === 4) {\r\n                  day = 'Thursday';\r\n                } else { // noinspection JSUnfilteredForInLoop\r\n                  if (x[myKey] === 5) {\r\n                    day = 'Friday';\r\n                  } else { // noinspection JSUnfilteredForInLoop\r\n                    if (x[myKey] === 6) {\r\n                      day = 'Saturday';\r\n                    } else {\r\n                      day = 'Sunday';\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else if (myKey === 'TimeCode') {\r\n          // noinspection DuplicatedCode,JSUnfilteredForInLoop\r\n          if (x[myKey] === 1) {\r\n            time = '8:00 - 09:00';\r\n          } else { // noinspection JSUnfilteredForInLoop\r\n            if (x[myKey] === 2) {\r\n              time = '9:00 - 10:00';\r\n            } else { // noinspection JSUnfilteredForInLoop\r\n              if (x[myKey] === 3) {\r\n                time = '10:00 - 11:00';\r\n              } else { // noinspection JSUnfilteredForInLoop\r\n                if (x[myKey] === 4) {\r\n                  time = '11:00 - 12:00';\r\n                } else { // noinspection JSUnfilteredForInLoop\r\n                  if (x[myKey] === 5) {\r\n                    time = '12:00 - 13:00';\r\n                  } else { // noinspection JSUnfilteredForInLoop\r\n                    if (x[myKey] === 6) {\r\n                      time = '13:00 - 14:00';\r\n                    } else { // noinspection JSUnfilteredForInLoop\r\n                      if (x[myKey] === 7) {\r\n                        time = '14:00 - 15:00';\r\n                      } else { // noinspection JSUnfilteredForInLoop\r\n                        if (x[myKey] === 8) {\r\n                          time = '15:00 - 16:00';\r\n                        } else { // noinspection JSUnfilteredForInLoop\r\n                          if (x[myKey] === 9) {\r\n                            time = '16:00 - 17:00';\r\n                          } else { // noinspection JSUnfilteredForInLoop\r\n                            if (x[myKey] === 10) {\r\n                              time = '17:00 - 18:00';\r\n                            } else { // noinspection JSUnfilteredForInLoop\r\n                              if (x[myKey] === 11) {\r\n                                time = '18:00 - 19:00';\r\n                              } else {\r\n                                time = '19:00 - 20:00';\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else if (myKey === 'Name') {\r\n          // noinspection JSUnfilteredForInLoop\r\n          classname = x[myKey];\r\n        }\r\n\r\n      }\r\n      array.push([day, time, classname]);\r\n    }\r\n\r\n    return array;\r\n\r\n    // return   this.state.csvData =[\r\n    //     [\"Firstname\", \"Lastname\", \"Email\",\"username\",\"password\",\" Date of\r\n    // Birth\",\"Age\"],\r\n    // [name,surname,email,username,password,bdate,age,PT[0].CoachName],\r\n    // [\"Personal Training\"], [\"Day\", \"Time\", \"Coach\"]  ];\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.testLoading) {\r\n      this.setState({loading: false});\r\n    }\r\n    // const {name,surname,email,username,password} = '';\r\n    userData()\r\n        .then(response => {\r\n          this.setState(response);\r\n          this.setState({confirmPassword: response.password});\r\n        })\r\n        .then(\r\n            () => userPicByUsername().then(response => this.setState(response)))\r\n        .then(() => {\r\n          if (!this.state.image) {\r\n            this.setState({newUser: true});\r\n          }\r\n        })\r\n        .finally(() => this.setState({loading: false}));\r\n  }\r\n\r\n  onValueInput = (e) => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n\r\n  };\r\n\r\n  checkValidationPassword = () =>{\r\n    if(this.state.valPassword!==''){\r\n      if(!this.state.valPassword.match(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/,)){\r\n        Swal.fire(\r\n            'Password must has 8 letters small and cap letters and one number',\r\n            '',\r\n            'error',\r\n        ).then( () => {\r\n          return 0;\r\n        });\r\n        return 0;\r\n      }\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  Test = () => {\r\n\r\n    if (this.handleSubmit() &&this.checkValidationPassword()) {\r\n      postuserData(this.state)\r\n          .then(() => {\r\n            Swal.fire(\r\n                'Saved Changes',\r\n                '',\r\n                'success',\r\n            ).then();\r\n          })\r\n          .then(() => {\r\n            if(this.state.imagePreviewUrl) {\r\n              this.props.changeAvatar(this.state.imagePreviewUrl)\r\n            }\r\n            this.props.toggle();\r\n          })\r\n          .catch(() => Swal.fire(\r\n          'Something went wrong',\r\n          'Please try again...',\r\n          'error',\r\n      ));\r\n    }\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(this.props.testSubmit) {\r\n      this.props.testSubmit('Testing');\r\n      return;\r\n    }\r\n\r\n    if ((this.state.noValidate === 1) || !(\r\n        this.state.Name.match(new RegExp('[a-zA-Z ]+')) &&\r\n        this.state.Email.match(\r\n            new RegExp('[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$')) &&\r\n        this.state.Surname.match(new RegExp('^ *[a-zA-Z0-9]+.')) &&\r\n        this.state.username.match(new RegExp('^ *[a-zA-Z0-9]+.')))) {\r\n      Swal.fire(\r\n          'Please fill all the fields Correctly',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return;\r\n    }\r\n    this.Test();\r\n  };\r\n\r\n  checkPhoneNo = (number) => {\r\n    if ((number === '0') || (number === null)) {\r\n      this.setState({Phone_Number: ''});\r\n    }\r\n    return this.state.Phone_Number;\r\n  };\r\n\r\n  changePassword = (e) => {\r\n    if(e.target.value === '' || e.target.value === ' '){\r\n      Swal.fire(\r\n          'The password cannot be empty or have space',\r\n          '',\r\n          'error',\r\n      ).then();\r\n    }else {\r\n      this.setState({valPassword:e.target.value});\r\n      const crypto = require('crypto');\r\n      const hashCode = crypto.createHmac('sha256', 'ffn_private_key_!!!!')\r\n          .update(e.target.value)\r\n          .digest('hex');\r\n      this.setState({password: hashCode});\r\n    }\r\n  };\r\n\r\n  changeConfirmPassword = (e) => {\r\n    if (e.target.value === '' || e.target.value === ' ') {\r\n      Swal.fire(\r\n          'The password cannot be empty or have space',\r\n          '',\r\n          'warning',\r\n      ).then();\r\n    }else {\r\n      this.setState({valConfirmPassword:e.target.value});\r\n      const crypto = require('crypto');\r\n      const hashCode = crypto.createHmac('sha256', 'ffn_private_key_!!!!')\r\n          .update(e.target.value)\r\n          .digest('hex');\r\n      this.setState({confirmPassword: hashCode});\r\n    }\r\n  };\r\n\r\n  _handleImageChange(e) {\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n\r\n    // noinspection\r\n    // TypeScriptValidateTypes,TypeScriptValidateJSTypes,JSValidateTypes\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        file           : file,\r\n        imagePreviewUrl: reader.result,\r\n      });\r\n\r\n    };\r\n    if (file.size > 5000000) {\r\n      alert('Maximum File Size must be 5Mb!');\r\n      return;\r\n    }\r\n    //let x = this.state.imagePreviewUrl;\r\n    // let byteString = x.split(',')[1];\r\n\r\n    // let blob = base64ToBlob(byteString, 'image/jpg');\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  render() {\r\n    let {image} = this.state;\r\n    let imageURL = 'https://www.w3schools.com/howto/img_avatar.png';\r\n    let $imagePreview = <img data-testid = { 'image' }\r\n                             src = { imageURL }\r\n                             alt = { 'Profile Avatar' }\r\n    />;\r\n    if (image !== '') {\r\n      imageURL =\r\n          'data:image/png;base64,' + new Buffer.from(image, 'binary').toString(\r\n          'base64');\r\n      $imagePreview = (<img data-testid = { 'image' }\r\n                            src = { imageURL }\r\n                            alt = { 'Profile Avatar' }\r\n      />);\r\n    }\r\n    if (this.state.imagePreviewUrl) {\r\n      $imagePreview = (<img src = { this.state.imagePreviewUrl }\r\n                            alt = { 'Profile Avatar' }\r\n      />);\r\n    }\r\n\r\n    // noinspection SpellCheckingInspection\r\n    return (\r\n        <div className = \"container\" id = \"EditModal\">\r\n          { this.state.loading ?\r\n              <Spinner style = { {\r\n                'height'         : '250px',\r\n                'backgroundColor': 'transparent',\r\n              } }\r\n              /> :\r\n              <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                <div className = \"text-center\">\r\n                  <div className = \"avatar-upload\">\r\n                    <div className = \"avatar-edit\">\r\n                      <input type = 'file'\r\n                             id = \"imageUpload\"\r\n                             accept = \".png, .jpg, .jpeg\"\r\n                             onChange = { (e) => this._handleImageChange(e) }\r\n\r\n                      />\r\n                      <label htmlFor = \"imageUpload\" />\r\n                    </div>\r\n                    <div className = \"avatar-preview\">\r\n                      <div id = \"imagePreview\">{ $imagePreview }</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <form className = \"form-horizontal needs-validation\"\r\n                      noValidate = \"novalidate\"\r\n                      onSubmit = { this.onSubmit }\r\n                >\r\n                  <h3>Personal info</h3>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-lg-6 control-label\">First\r\n                      name:</label>\r\n                    <input className = \"form-control first-name-field\"\r\n                           name = { 'Name' }\r\n                           placeholder = { 'Enter name' }\r\n                           onChange = { this.onValueInput }\r\n                           type = \"text\"\r\n                           defaultValue = { this.state.Name }\r\n                           required = \"required\"\r\n                           pattern = \"[a-zA-Z ]+\"\r\n                    /> <span className = \"message\" />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-lg-6 control-label\">Last\r\n                      name:</label>\r\n                    <input className = \"form-control last-name-field\"\r\n                           name = { 'Surname' }\r\n                           placeholder = { 'Enter surname' }\r\n                           onChange = { this.onValueInput }\r\n                           type = \"text\"\r\n                           defaultValue = { this.state.Surname }\r\n                           required = \"required\"\r\n                           pattern = \"[a-zA-Z ]+\"\r\n                    /> <span className = \"message\" />\r\n                  </div>\r\n\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-lg-3 control-label\">Email:</label>\r\n                    <input className = \"form-control email-field\"\r\n                           name = { 'Email' }\r\n                           placeholder = { 'Enter email' }\r\n                           onChange = { this.onValueInput }\r\n                           type = \"text\"\r\n                           defaultValue = { this.state.Email }\r\n                           required = \"required\"\r\n                           pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                    /> <span className = \"message\" />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-md-6 control-label\">Phone\r\n                      Number:</label>\r\n                    <input className = \"form-control tel-field\"\r\n                           name = { 'Phone_Number' }\r\n                           placeholder = { 'Enter phone number' }\r\n                           onChange = { this.onValueInput }\r\n                           type = \"text\"\r\n                           defaultValue = { this.checkPhoneNo(\r\n                               this.state.Phone_Number) }\r\n                           pattern = \"[0-9]{8}|[0-9]{11}\"\r\n                        //required = \"required\"\r\n                    /> <span className = \"message\" />\r\n                  </div>\r\n\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-md-3 control-label\">Username:</label>\r\n                    <input className = \"form-control username-field\"\r\n                           name = { 'username' }\r\n                           placeholder = { 'Enter username' }\r\n                           onChange = { this.onValueInput }\r\n                           type = \"text\"\r\n                           defaultValue = { this.state.username }\r\n                           pattern = \"[a-zA-Z0-9 ]+\"\r\n                           required = \"required\"\r\n                    /> <span className = \"message\" />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-md-3 control-label\">Password:</label>\r\n                    <input className = \"form-control\"\r\n                           name = { 'password' }\r\n                           placeholder = { 'Enter password' }\r\n                           onChange = { this.changePassword }\r\n                           type = \"password\"\r\n                           defaultValue = \"**********\"\r\n                           required = \"required\"\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-md-6 control-label\">Confirm\r\n                      password:</label>\r\n                    <input className = \"form-control\"\r\n                           name = { 'confirmPassword' }\r\n                           placeholder = { 'Confirm password' }\r\n                           onChange = { this.changeConfirmPassword }\r\n                           type = \"password\"\r\n                           defaultValue = \"**********\"\r\n                           required = \"required\"\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"col-lg-6 control-label\">Add Medical\r\n                      History:</label>\r\n                    <textarea maxLength = \"400\"\r\n                              className = \"form-control last-name-field\"\r\n                              placeholder = { 'Enter medical history' }\r\n                              name = { 'Medical_History' }\r\n                              onChange = { this.onValueInput }\r\n                              defaultValue = { this.state.Medical_History }\r\n                              pattern = \"[a-zA-Z ]+\"\r\n\r\n                    /> <span className = \"message\" />\r\n                  </div>\r\n                  <div className = \"form-group\" id = \"buttons\">\r\n                    <label className = \"col-md-12 control-label\" id = \"savel\">\r\n                      <input type = \"submit\"\r\n                             data-testid = { 'button' }\r\n                             className = \"btn btn-primary\"\r\n                             defaultValue = \"Save Changes\"\r\n                             id = \"save\"\r\n                      />\r\n                    </label>\r\n                    <label className = \"col-md-12 control-label\" id = \"resetl\">\r\n                      <input onClick = { this.props.toggle }\r\n                             data-testid = { 'button-reset' }\r\n                             type = \"button\"\r\n                             className = \"btn btn-default\"\r\n                             value = \"Reset\"\r\n                             id = \"reset\"\r\n                      />\r\n                      <input type = \"submit\"\r\n                             data-testid = { 'button-delete' }\r\n                             className = \"btn btn-default\"\r\n                             defaultValue = \"Delete Account\"\r\n                             id = \"delete\"\r\n                             onClick = { this.deleted }\r\n                      />\r\n\r\n                    </label>\r\n\r\n                    { !this.props.testLoading &&\r\n                    <label id = \"csv\">\r\n                      <CSVLink data = { this.fillCSV(this.state.Name,\r\n                          this.state.Surname, this.state.Email,\r\n                          this.state.Medical_History, this.state.Phone_Number,\r\n                          this.state.username, this.state.password,\r\n                          this.state.Bdate, this.state.Age, this.props.dataPT,\r\n                          this.props.classes) }\r\n                      >Download my Data</CSVLink>\r\n                    </label>\r\n                    }\r\n                  </div>\r\n                </form>\r\n              </AnimatedOnScroll>\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditAccount;","import React, {Component}            from 'react';\r\nimport {userData, userPicByUsername} from '../../repository';\r\nimport Spinner                       from '../Spinner';\r\n\r\nclass ProfileInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name        : '',\r\n      Surname     : '',\r\n      username    : '',\r\n      image       : '',\r\n      imagePreviewURL: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    userData()\r\n        .then(response => {\r\n          this.setState(response);\r\n        })\r\n        .then(\r\n            () => userPicByUsername().then(response => this.setState(response)))\r\n        .then(() => {\r\n          let {image} = this.state;\r\n          let imageURL = 'https://www.w3schools.com/howto/img_avatar.png';\r\n\r\n          if (image !== '') {\r\n            imageURL =\r\n                'data:image/png;base64,' + new Buffer.from(image, 'binary').toString(\r\n                'base64');\r\n          }\r\n          this.setState({imagePreviewURL: imageURL});\r\n        })\r\n        .finally(() => this.props.toggleLoading());\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.newAvatar !== prevProps.newAvatar && this.props.newAvatar\r\n        !== '') {\r\n      this.setState({imagePreviewURL: this.props.newAvatar});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const name = this.state.Name + ' ' + this.state.Surname;\r\n\r\n    return (\r\n        <div className = \"col-lg-4 col-md-12 col-sm-12\">\r\n          <div className = \"profile block\" id = \"profileBlock\">\r\n            <br />\r\n            { this.props.loadingInfo ?\r\n                <Spinner secondaryStyle = { true }\r\n                         style = { {\r\n                           'height'         : 'auto',\r\n                           'backgroundColor': 'transparent',\r\n                         } }\r\n                />\r\n                :\r\n                <div className = \"profile-picture big-profile-picture clear\">\r\n                  {/*<img id = \"profpic\" width = \"150px\" alt = \"Member Name\"*/ }\r\n                  {/*     src = { image }*/ }\r\n                  {/*/>*/ }\r\n                  <div className = \"avatar-preview d-flex justify-content-center\">\r\n                    <div id = \"imagePreview\">\r\n                      <img data-testid = { 'image' }\r\n                           src = { this.state.imagePreviewURL }\r\n                           alt = { 'Profile Avatar' }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className = \"middleEdit\" id = \"Edit-Add\">\r\n                    <div className = \"mytext\">Add/Edit<br />\r\n                                              Profile Picture\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            }\r\n            <div className = \"user-name\">{ name }</div>\r\n            <div className = \"profile-description\">\r\n              <p className = \"scnd-font-color\">Welcome to your Fitness Factory\r\n                                               Profile!</p>\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileInfo;","import React, {Component}        from 'react';\r\n// noinspection ES6CheckImport\r\nimport {Redirect}                from 'react-router-dom';\r\nimport '../assets/styles/adminCoachProfile.css';\r\nimport {\r\n  getPrivateAnnouncementsAdmin,\r\n  userDetails,\r\n  updateAnnouncement,\r\n  deleteAnnouncement,\r\n  addPrivateAnnouncement,\r\n  getAllCoaches,\r\n  loggedInVisit,\r\n  updateProfileVisit,\r\n  userPic,\r\n  getCoachInfo,\r\n  getClassSchedule,\r\n  getTotalMessages,\r\n  staffData,\r\n  getAccountID\r\n}                                from '../../repository';\r\nimport AnnouncementModal         from '../common/AnnouncementModal';\r\nimport {Button}                  from 'reactstrap';\r\nimport Box                       from '../common/SelectionPT';\r\nimport Timetable                 from '../common/PersonalTrainingCreate';\r\nimport AnnouncementsPrivateModal from '../common/AnnouncementsPrivateModal';\r\nimport Swal                      from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport ButtonLoader              from '../common/ButtonLoader';\r\nimport Spinner                   from '../Spinner';\r\nimport ToggleModal               from '../common/ToggleModal';\r\nimport MessagesModalAdminCoach   from '../common/MessagesModalAdminCoach.jsx';\r\n\r\nclass ProfileAdmin extends Component {\r\n\r\n  // noinspection DuplicatedCode\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userAccountID         : '',\r\n      nameStart            : '',\r\n      Name                 : '',\r\n      Surname              : '',\r\n      Email                : '',\r\n      username             : '',\r\n      searchResults        : [],\r\n      announcements        : [],\r\n      modal                : false,\r\n      modal2               : false,\r\n      modalTitle           : '',\r\n      modalMessage         : '',\r\n      modalAnnId           : '',\r\n      day                  : '',\r\n      time                 : '',\r\n      flag                 : false,\r\n      image                : '',\r\n      User_ID              : '',\r\n      personalTraining     : [],\r\n      selectedCoaches      : [],\r\n      Coach_ID             : '',\r\n      loadingSearchUser    : false,\r\n      loadingInfo          : false,\r\n      trainingScheduleCoach: [],\r\n      classSchedule        : [],\r\n      coachIDAssigned      : '',\r\n      coachIDRet           : '',\r\n      TotalMessages        : 0,\r\n      ownerName            : '',\r\n    };\r\n\r\n    this.toggleAnnouncementsData = this.toggleAnnouncementsData.bind(this);\r\n    this.onAnnouncementSubmit = this.onAnnouncementSubmit.bind(this);\r\n    this.toggleAnnouncementsData2 = this.toggleAnnouncementsData2.bind(this);\r\n    this.onAnnouncementSubmit2 = this.onAnnouncementSubmit2.bind(this);\r\n    this.handleDayTimeChange = this.handleDayTimeChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.toggleAnnouncements = this.toggleAnnouncements.bind(this);\r\n    this.toggleAnnouncements2 = this.toggleAnnouncements2.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChange2 = this.handleChange2.bind(this);\r\n    this.onAnnouncementDelete = this.onAnnouncementDelete.bind(this);\r\n    this.toggleMessages = this.toggleMessages.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    loggedInVisit().then();\r\n    updateProfileVisit().then();\r\n    staffData().then(response => {\r\n      // this.setState({image: response.image});\r\n      this.setState({ownerName: response.username});\r\n    });\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({loadingSearchUser: true}, () => {\r\n      userDetails(this.state.nameStart)\r\n          .then(response => {\r\n            this.setState({searchResults: response, loadingSearchUser: false});\r\n          });\r\n    });\r\n  };\r\n\r\n  toggleMessages = () => {\r\n    this.setState({modalMessages: !this.state.modalMessages});\r\n  };\r\n\r\n  // noinspection DuplicatedCode\r\n  onAnnouncementSubmit = async(Title, Message, Ann_ID) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === this.state.announcements[this.state.modalAnnId].Title\r\n        && Message\r\n        === this.state.announcements[this.state.modalAnnId].Message) {\r\n      Swal.fire(\r\n          'Please give new data to update',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === '' || Message === '') {\r\n      Swal.fire(\r\n          'Please fill in all boxes',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await updateAnnouncement(Ann_ID, Title, Message).then(response => {\r\n      this.setState({\r\n        announcements: this.state.announcements.map(ann => {\r\n          let x = ann;\r\n          if (ann.ANNOUNCEMENT_ID === response.ANNOUNCEMENT_ID) {\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Title = Title;\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Message = Message;\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Ann_ID = Ann_ID;\r\n          }\r\n          return x;\r\n        }),\r\n      });\r\n      this.toggle();\r\n    }).then(() => {\r\n      flag = true;\r\n      Swal.fire(\r\n          'Private Announcement was updated successfully',\r\n          '',\r\n          'success',\r\n      );\r\n      this.toggle();\r\n    }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ));\r\n\r\n    return flag;\r\n  };\r\n\r\n  onAnnouncementDelete = async(ANNOUNCEMENT_ID) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then(async(result) => {\r\n      if (result.value) {\r\n        await deleteAnnouncement(\r\n            this.state.announcements[ANNOUNCEMENT_ID].ANNOUNCEMENT_ID)\r\n            .then(() => {\r\n              this.setState({\r\n                announcements: this.state.announcements.filter(\r\n                    ann => ann.ANNOUNCEMENT_ID\r\n                           !== this.state.announcements[ANNOUNCEMENT_ID].ANNOUNCEMENT_ID),\r\n              }, () => Swal.fire(\r\n                  'Private Announcement deleted successfully',\r\n                  '',\r\n                  'success',\r\n              ));\r\n              flag = true;\r\n            })\r\n            .catch(() => Swal.fire(\r\n                'Something went wrong',\r\n                'Please try again...',\r\n                'error',\r\n            ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Private Announcement is safe :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n\r\n    return flag;\r\n  };\r\n\r\n  onAnnouncementSubmit2 = async(Title, Message) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (!this.state.username || this.state.username === '') {\r\n      Swal.fire(\r\n          'Please select a user first',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === '' || Message === '') {\r\n      Swal.fire(\r\n          'Please fill in all boxes',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await addPrivateAnnouncement(Title, Message, this.state.username)\r\n        .then(response => {\r\n          let prevAnn = this.state.announcements.slice(0);\r\n          prevAnn.push(\r\n              {\r\n                ANNOUNCEMENT_ID: response.data.ANNOUNCEMENT_ID,\r\n                Title          : Title,\r\n                Message        : Message,\r\n                TIMESTAMP      : new Date().toISOString(),\r\n              });\r\n          this.setState({announcements: prevAnn});\r\n        }).then(() => {\r\n          flag = true;\r\n          Swal.fire(\r\n              'Private Announcement added successfully',\r\n              '',\r\n              'success',\r\n          );\r\n          this.toggle2();\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n\r\n    return flag;\r\n  };\r\n\r\n  toggle = () => {\r\n    if (this.state.level <= 1) {\r\n      return;\r\n    }\r\n\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  toggle2 = () => {\r\n    if (this.state.level <= 1) {\r\n      return;\r\n    }\r\n\r\n    this.setState({modal2: !this.state.modal2});\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({nameStart: e.target.value});\r\n  };\r\n\r\n  handleChange2 = (e) => {\r\n    const username = e.target.value;\r\n    const user = this.state.searchResults.find(\r\n        usr => usr.username === username);\r\n    if (!user) {\r\n      return null;\r\n    }\r\n\r\n    this.setState({loadingInfo: true}, async() => {\r\n      await this.updateCoaches(user, username);\r\n      await this.updatePrivateAnnouncements(username);\r\n      await this.updateUserPic(user);\r\n      this.setState({loadingInfo: false});\r\n    });\r\n  };\r\n\r\n  updateUserPic = async(user) => {\r\n    return new Promise((resolve) => {\r\n      userPic(user.User_ID).then(response => {\r\n        this.setState({image: ''}, () => {\r\n          if (response[0] !== undefined) {\r\n            this.setState({image: response[0].image});\r\n          }\r\n        });\r\n        return resolve();\r\n      });\r\n      getTotalMessages().then(response => {\r\n        this.setState(\r\n            {TotalMessages: response.TotalMessages});\r\n      });\r\n    });\r\n\r\n  };\r\n\r\n  updateCoaches = async(user, username) => {\r\n    return new Promise((resolve) => {\r\n      this.setState({\r\n        Name   : user.Name,\r\n        Surname: user.Surname,\r\n        Email  : user.Email,\r\n        username,\r\n        // image: user.image,\r\n        User_ID: user.User_ID,\r\n      }, () => {\r\n        getAllCoaches().then(response => {\r\n          this.setState({selectedCoaches: response});\r\n        });\r\n        getAccountID(this.state.username).then(response => {\r\n          this.setState({userAccountID: response.AccountID},() => {\r\n            console.log(response.AccountID);\r\n          });\r\n        })\r\n\r\n      });\r\n      return resolve();\r\n    });\r\n  };\r\n\r\n  updatePrivateAnnouncements = async(username) => {\r\n    return new Promise((resolve) => {\r\n      getPrivateAnnouncementsAdmin(username).then(response => {\r\n        this.setState({announcements: response.data.announcements});\r\n      });\r\n      return resolve();\r\n    });\r\n  };\r\n\r\n  toggleAnnouncements = () => {\r\n    this.setState({modalAnnouncements: !this.state.modalAnnouncements});\r\n  };\r\n\r\n  toggleAnnouncements2 = () => {\r\n    this.setState({modalAnnouncements2: !this.state.modalAnnouncements2});\r\n  };\r\n\r\n  handleDayTimeChange = (day, time, flag, Coach_ID) => {\r\n    this.setState({day, time, flag, Coach_ID}, () => {\r\n    });\r\n  };\r\n\r\n  retrievedCoach = (coachID) => {\r\n    if (coachID !== '') {\r\n      this.setState({coachIDRet: coachID}, () => {\r\n        getCoachInfo(coachID).then(response => {\r\n          this.setState({selectedCoaches: response.messages});\r\n        });\r\n      });\r\n    } else {\r\n      this.setState({selectedCoaches: []}, ()=> {\r\n        getClassSchedule(this.state.User_ID).then(response => {\r\n          if (response !== []) {\r\n            getAllCoaches().then(response => {\r\n              this.setState({selectedCoaches: response});\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n\r\n    }\r\n  };\r\n\r\n  toggleAnnouncementsData = (e) => {\r\n    const x = this.state.announcements[e.target.id - 100];\r\n    if (x === undefined) {\r\n      return;\r\n    }\r\n    // console.log(x.Title);\r\n    this.setState({\r\n      modalTitle  : x.Title,\r\n      modalMessage: x.Message,\r\n      modalAnnId  : e.target.id - 100,\r\n    }, () => {\r\n      this.toggleAnnouncements();\r\n    });\r\n  };\r\n\r\n  toggleAnnouncementsData2 = () => {\r\n    this.toggleAnnouncements2();\r\n  };\r\n\r\n  render() {\r\n    let {image} = this.state;\r\n    let imageURL = 'https://www.w3schools.com/howto/img_avatar.png';\r\n    let $imagePreview = <img src = { imageURL } alt = { 'Profile' } />;\r\n    if (image !== '') {\r\n      imageURL =\r\n          'data:image/png;base64,' + new Buffer.from(image, 'binary').toString(\r\n          'base64');\r\n      $imagePreview = (<img src = { imageURL } alt = { 'Profile' } />);\r\n    }\r\n\r\n    return (\r\n        <div id = 'profile' className = \"\">\r\n          { (this.props.userLevel === 'admin') ? '' : <Redirect to = \"/\" /> }\r\n          <div className = \"container-back\">\r\n            <div className = \"row\">\r\n              <div className = \"col-md-4\">\r\n                <h4>Search for Client:</h4>\r\n                <form className = \"adminViewClient\">\r\n                  <div className = \"d-flex bd-highlight\">\r\n                    <div className = \"p-lg-2 flex-fill w-100\">\r\n                      <input className = \"h-100 w-100 m-0\"\r\n                             name = { 'Name' }\r\n                             onChange = { this.handleChange }\r\n                             type = \"text\"\r\n                             placeholder = \"Search\"\r\n                             aria-label = \"Search\"\r\n                             id = \"searchClient\"\r\n                      />\r\n                    </div>\r\n                    <div className = \"p-sm-1 flex-fill bd-highlight \">\r\n                      <ButtonLoader text = { '' }\r\n                                    textIcon = { true }\r\n                                    loadingText = { '' }\r\n                                    size = { 'lg' }\r\n                                    type = { 'submit' }\r\n                                    onClick = { this.onSubmit }\r\n                                    loading = { this.state.loadingSearchUser }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <br />\r\n                <div className = \"form-group\">\r\n                  <label htmlFor = \"userList\"><h6>Clients Retrieved:</h6>\r\n                  </label>\r\n                  <select className = \"form-control\"\r\n                          name = { 'username' }\r\n                          id = \"userList\"\r\n                          onChange = { this.handleChange2 }\r\n                          required\r\n                  >\r\n                    <option value = \"\" hidden>Client List Generated</option>\r\n                    { this.state.searchResults.map((res, index) => {\r\n                      return <option value = { res.username } key = { index }>\r\n                        { res.Name } { res.Surname } { res.username }\r\n                      </option>;\r\n                    })\r\n                    }\r\n\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className = \"col-md-4\">\r\n                <h4>Client Details:</h4>\r\n                <div className = \"avatar-preview d-flex justify-content-center\">\r\n                  <div id = \"imagePreview\">\r\n                    { this.state.loadingInfo ?\r\n                        <Spinner secondaryStyle = { true }\r\n                                 style = { {\r\n                                   'height'         : 'auto',\r\n                                   'backgroundColor': 'transparent',\r\n                                 } }\r\n                        />\r\n                        :\r\n                        $imagePreview\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <form id = \"clientDetails\">\r\n                  <div className = \"form-group\">\r\n                    <label htmlFor = \"nameInput\">Name</label>\r\n                    <input type = \"name\"\r\n                           className = \"form-control\"\r\n                           id = \"nameInput\"\r\n                           value = { this.state.Name }\r\n                           readOnly\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label htmlFor = \"nameInput\">Surname</label>\r\n                    <input type = \"surname\"\r\n                           className = \"form-control\"\r\n                           id = \"surnameInput\"\r\n                           value = { this.state.Surname }\r\n                           readOnly\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label htmlFor = \"exampleInputEmail1\">Email address</label>\r\n                    <input type = \"email\"\r\n                           className = \"form-control\"\r\n                           id = \"exampleInputEmail1\"\r\n                           value = { this.state.Email }\r\n                           readOnly\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"usernameIn\">Username</label>\r\n                    <input type = \"username\"\r\n                           className = \"form-control\"\r\n                           id = \"usernameIn\"\r\n                           value = { this.state.username }\r\n                           readOnly\r\n                    />\r\n                  </div>\r\n\r\n\r\n                </form>\r\n              </div>\r\n              <div className = \"col-md-4\">\r\n                <label htmlFor = \"comment\"><h4>Messages:</h4></label>\r\n                <div className=\"form-group\">\r\n                  <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                          onClick = { this.toggleMessages }\r\n                          style = { {width: '100%'} }\r\n                  >\r\n                    <i className = \"scnd-font-color fa fa-envelope\" /> Exchange Messages with this Client\r\n                    { this.state.TotalMessages > 0 &&\r\n                    <div className = \"menu-box-number\">{ this.state.TotalMessages }</div> }\r\n                  </Button>\r\n                  <ToggleModal\r\n                      modal = { this.state.modalMessages }\r\n                      toggle = { this.toggleMessages }\r\n                      modalSize = { 'md' }\r\n                      modalHeader = { 'Messages' }\r\n                      modalBody = {\r\n                        <MessagesModalAdminCoach\r\n                            userName = {this.state.ownerName}\r\n                            userLevel = { this.props.userLevel}\r\n                            TotalMessages = { this.state.TotalMessages }\r\n                            toggleTotalMessages = { this.toggleTotalMessages }\r\n                            username = {this.state.username}\r\n                            user_ID = {this.state.userAccountID}\r\n\r\n                        /> }\r\n                  />\r\n                </div>\r\n                <br/>\r\n                <label htmlFor = \"comment\"><h4>Announcements:</h4></label>\r\n\r\n                <div className = \"menu-box-tab menu-text\" id = \"EditAnns\">\r\n                  { this.state.announcements.sort(\r\n                      function(a, b) {\r\n                        return b.ANNOUNCEMENT_ID\r\n                               - a.ANNOUNCEMENT_ID;\r\n                      }).map((ann, index) => {\r\n                    return <Button className = \"nav-link menu-box-tab menu-text\"\r\n                                   onClick = { this.toggleAnnouncementsData } id = { index + 100 }\r\n                                   key = { index + 1 }\r\n                    ><i style = { {marginRight: 10 + 'px'} }\r\n                        className = \"scnd-font-color fa fa-tasks\"\r\n                    />\r\n                      { ann.Title }{ <p> (</p> }{ ann.TIMESTAMP[0] }\r\n                      { ann.TIMESTAMP[1] }{ ann.TIMESTAMP[2] }{ ann.TIMESTAMP[3] }{ ann.TIMESTAMP[4] }{ ann.TIMESTAMP[5] }\r\n                      { ann.TIMESTAMP[6] }{ ann.TIMESTAMP[7] } { ann.TIMESTAMP[8] }{ ann.TIMESTAMP[9] }{\r\n                        <p\r\n                            id = \"extra\"\r\n                        >)</p> }\r\n                    </Button>;\r\n                  }) }\r\n\r\n                </div>\r\n                <Button id = \"addAnn\"\r\n                        className = { ' edit nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleAnnouncements2 }\r\n                >\r\n                  <i style = { {marginRight: 10 + 'px'} }\r\n                     className = \"scnd-font-color fa fa-tasks\"\r\n                  /> Add Announcement\r\n                </Button>\r\n\r\n                {/*<AnnouncementModal onSubmit = { this.onAnnouncementSubmit }*/ }\r\n                {/*                   toggle = { this.toggleAnnouncements }*/ }\r\n                {/*                   modal = { this.state.modalAnnouncements }*/ }\r\n                {/*                   announcements = { this.state.announcements }*/ }\r\n                {/*                   title = { this.state.modalTitle }*/ }\r\n                {/*                   message = { this.state.modalMessage }*/ }\r\n                {/*                   announcement_id = { this.state.modalAnnId }*/ }\r\n                {/*/>*/ }\r\n                <AnnouncementsPrivateModal\r\n                    onSubmit = { this.onAnnouncementSubmit2 }\r\n                    toggle = { this.toggleAnnouncements2 }\r\n                    modal = { this.state.modalAnnouncements2 }\r\n                    resetOnSubmit = { true }\r\n                />\r\n                <AnnouncementModal onSubmit = { this.onAnnouncementSubmit }\r\n                                   DeleteAnn = { this.onAnnouncementDelete }\r\n                                   toggle = { this.toggleAnnouncements }\r\n                                   modal = { this.state.modalAnnouncements }\r\n                                   announcements = { this.state.announcements }\r\n                                   title = { this.state.modalTitle }\r\n                                   message = { this.state.modalMessage }\r\n                                   announcement_id = { this.state.modalAnnId }\r\n                                   isPrivate = { true }\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/*<div className = \"row\">*/}\r\n            {/*  <div id = \"timeTableHeading\">Create Personal Training Schedule*/}\r\n            {/*  </div>*/}\r\n            {/*  <div className = \"col-md-8\">*/}\r\n            {/*    <Timetable day = { this.state.day }*/}\r\n            {/*               time = { this.state.time }*/}\r\n            {/*               flag = { this.state.flag }*/}\r\n            {/*               coachID = { this.state.Coach_ID }*/}\r\n            {/*               userID = { this.state.User_ID }*/}\r\n            {/*               coachIDret = { this.retrievedCoach }*/}\r\n            {/*    />*/}\r\n            {/*  </div>*/}\r\n            {/*  <div className = \"col-md-4\">*/}\r\n            {/*    <Box toogle = { this.handleDayTimeChange }*/}\r\n            {/*         coaches = { this.state.selectedCoaches }*/}\r\n            {/*         coachID = { this.state.coachIDRet }*/}\r\n            {/*         userID = { this.state.User_ID }*/}\r\n            {/*    />*/}\r\n            {/*  </div>*/}\r\n            {/*</div>*/}\r\n          </div>\r\n        </div>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default ProfileAdmin;","import React, {Component} from 'react';\r\nimport './assets/styles/Spinner.css';\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    return (\r\n        <div id = \"wrapper\"\r\n             style = { this.props.style || {\r\n               'height'         : '100vh',\r\n               'backgroundColor': '#252830',\r\n             } }\r\n        >\r\n          <div className = { !this.props.secondaryStyle\r\n              ? 'profile-main-loader'\r\n              : 'profile-secondary-loader' }\r\n          >\r\n            <div className = \"loader\">\r\n              <svg className = \"circular-loader\"\r\n                   viewBox = \"25 25 50 50\"\r\n              >\r\n                <circle className = \"loader-path\"\r\n                        cx = \"50\"\r\n                        cy = \"50\"\r\n                        r = \"20\"\r\n                        fill = \"none\"\r\n                        stroke = \"#D90429\"\r\n                        strokeWidth = \"2\"\r\n                />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spinner;","import React                                                from 'react';\r\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\n\r\nexport default class ToggleModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {isBrowser: false, isAndroid: false};\r\n  }\r\n\r\n  // noinspection JSUnresolvedVariable,DuplicatedCode,\r\n  componentDidMount() {\r\n    // Opera 8.0+\r\n    // noinspection JSUnresolvedVariable\r\n    let isOpera = (!!window.opr) || !!window.opera\r\n                  || navigator.userAgent.indexOf(' OPR/') >= 0;\r\n    // Firefox 1.0+\r\n    // noinspection JSUnresolvedVariable\r\n    let isFirefox = typeof InstallTrigger !== 'undefined';\r\n    // Safari 3.0+ \"[object HTMLElementConstructor]\"\r\n    // noinspection ES6ModulesDependencies\r\n    const {HTMLElement} = window;\r\n    // noinspection ES6ModulesDependencies\r\n    let isSafari = /constructor/i.test(HTMLElement) || (function(p) {\r\n      return p.toString() === '[object SafariRemoteNotification]';\r\n    })(!window['safari'] || (typeof safari !== 'undefined'));\r\n    // Internet Explorer 6-11\r\n    // noinspection JSUnresolvedVariable,PointlessBooleanExpressionJS\r\n    let isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n    // Edge 20+\r\n    let isEdge = !isIE && !!window.StyleMedia;\r\n    // Chrome 1 - 79\r\n    // noinspection JSUnresolvedVariable\r\n    let isChrome = !!window.chrome && (!!window.chrome.webstore\r\n                                       || !!window.chrome.runtime);\r\n    // Edge (based on chromium) detection\r\n    // noinspection EqualityComparisonWithCoercionJS\r\n    let isEdgeChromium = isChrome && (navigator.userAgent.indexOf('Edg') !== -1);\r\n    // Blink engine detection\r\n    let isBlink = (isChrome || isOpera) && !!window.CSS;\r\n\r\n    this.setState({\r\n      isBrowser: isOpera || isFirefox || isSafari || isIE || isEdge || isChrome\r\n                 || isEdgeChromium || isBlink,\r\n      isAndroid: navigator.userAgent.match(/Android/i),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let Comp = this.props.modalBody;\r\n    // noinspection JSUnresolvedVariable\r\n    return (\r\n        <div>\r\n          <Modal isOpen = { this.props.modal } toggle = { this.props.toggle }\r\n                 size = { this.props.modalSize || 'lg' }\r\n                 aria-labelledby = \"contained-modal-title-vcenter\"\r\n                 centered\r\n          >\r\n            <ModalHeader toggle = { this.props.toggle }>{ this.props.modalHeader }</ModalHeader>\r\n            <ModalBody>\r\n              { React.cloneElement(Comp, {\r\n                ...this.props,\r\n              }) }\r\n            </ModalBody>\r\n            { this.state.isBrowser && !this.state.isAndroid &&\r\n              <ModalFooter>\r\n                <Button onClick = { this.props.toggle }>{ this.props.btnCancel\r\n                                                          || 'Cancel' }</Button>\r\n              </ModalFooter>\r\n            }\r\n          </Modal>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport '../assets/styles/BookDropdown.css'\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass SelectionPT extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            day: '',\r\n            time: '',\r\n            flag: false,\r\n            Coach_ID: '',\r\n            coaches: [],\r\n            selectionDay: '',\r\n            selectionTime: '',\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.handleDay = this.handleDay.bind(this);\r\n        this.handleTime = this.handleTime.bind(this);\r\n        this.clearOptions = this.clearOptions.bind(this);\r\n    }\r\n\r\n    handleDay = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            selectionDay: e.target.value,\r\n        }, () => {\r\n        });\r\n    };\r\n\r\n    handleTime = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            selectionTime: e.target.value,\r\n        }, () => {\r\n        });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n\r\n        });\r\n    };\r\n\r\n\r\n    onSubmit = () => {\r\n        if (this.state.selectionTime === '' || this.state.selectionDay === '') {\r\n            Swal.fire(\r\n                'Required selections are empty',\r\n                'Make sure that you have filled every selection first!',\r\n                'error',\r\n            ).then();\r\n        } else {\r\n            this.setState({flag: true},\r\n                () => {\r\n                    this.props.toogle(this.state.day, this.state.time, this.state.flag, this.state.Coach_ID);\r\n                });\r\n        }\r\n    };\r\n\r\n    onDelete = () => {\r\n        if (this.state.selectionTime === '' || this.state.selectionDay === '') {\r\n            Swal.fire(\r\n                'Required selections are empty',\r\n                'Make sure that you have filled every selection first!',\r\n                'error',\r\n            ).then();\r\n        } else {\r\n            this.setState({flag: false},\r\n                () => {\r\n                    this.props.toogle(this.state.day, this.state.time, this.state.flag, this.state.Coach_ID);\r\n                });\r\n        }\r\n    };\r\n\r\n    clearOptions() {\r\n        const timeNode = document.getElementById('TimePers');\r\n        timeNode.value = 0;\r\n        const dayNode = document.getElementById('DayPers');\r\n        dayNode.value = 0;\r\n        const coachNode = document.getElementById('CoachPers');\r\n        coachNode.value = 0;\r\n    }\r\n\r\n    // noinspection JSUnusedLocalSymbols\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // noinspection JSUnresolvedVariable\r\n        if (prevProps.coaches !== this.props.coaches || prevProps.coachesRet !== this.props.coachesRet\r\n            || prevProps.coachID !== this.props.coachID\r\n            || prevProps.userID !== this.props.userID) {\r\n            (async () => {\r\n                // if(this.props.coachIDRet !==)\r\n                if (prevProps.userID !== this.props.userID) {\r\n                    await this.clearOptions();\r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"form\" id=\"backBox\">\r\n                    <h3 id=\"bmiHeading\"><b>C</b>hoose <b>D</b>ay and <b>T</b>ime</h3>\r\n                    <div className=\"row\" id=\"first-row\">\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <label htmlFor=\"DropDays\">Day:</label>\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"day\" id=\"DayPers\"\r\n                                    onChange={this.handleDay} required>\r\n                                <option value=\"0\" hidden>Day Option</option>\r\n                                <option value=\"1\">Monday</option>\r\n                                <option value=\"2\">Tuesday</option>\r\n                                <option value=\"3\">Wednesday</option>\r\n                                <option value=\"4\">Thursday</option>\r\n                                <option value=\"5\">Friday</option>\r\n                                <option value=\"6\">Saturday</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <label htmlFor=\"DropClass\">Time:</label>\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"time\" id=\"TimePers\"\r\n                                    onChange={this.handleTime} required>\r\n                                <option value=\"0\" hidden>Time Option</option>\r\n                                <option value=\"1\">08:00-09:00</option>\r\n                                <option value=\"2\">09:00-10:00</option>\r\n                                <option value=\"3\">10:00-11:00</option>\r\n                                <option value=\"4\">11:00-12:00</option>\r\n                                <option value=\"5\">12:00-13:00</option>\r\n                                <option value=\"6\">13:00-14:00</option>\r\n                                <option value=\"7\">14:00-15:00</option>\r\n                                <option value=\"8\">15:00-16:00</option>\r\n                                <option value=\"9\">16:00-17:00</option>\r\n                                <option value=\"10\">17:00-18:00</option>\r\n                                <option value=\"11\">18:00-19:00</option>\r\n                                <option value=\"12\">19:00-20:00</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row hidden\">\r\n                        <div className=\"col-md-12 RowBlock\">   {/*justify-content-center*/}\r\n                            <label htmlFor=\"DropClass\">Coach:</label>\r\n\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"Coach_ID\" id=\"CoachPers\"\r\n                                    onChange={this.handleChange} required>\r\n                                <option value=\"0\" hidden>Select a Coach</option>\r\n                                {\r\n                                    this.props.coaches.map((res, index) => {\r\n                                        return <option value={res.Coach_ID} key={index}>\r\n                                            {res.CoachName} {res.Surname}\r\n                                        </option>\r\n                                    })\r\n                                }\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <button type=\"button\" className=\"RowButton\" onClick={this.onSubmit}>Submit</button>\r\n                        </div>\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <button type=\"button\" className=\"RowButton\" onClick={this.onDelete}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectionPT;","import React, {Component} from 'react';\r\nimport '../assets/styles/PersonalTrainingTimetable.css';\r\nimport {\r\n  insertPT, deletePT, getCoachTraining, getClassSchedule, getPersonalSchedule, getCoachClasses,\r\n} from '../../repository';\r\nimport Swal               from \"sweetalert2\";\r\n\r\nclass PersonalTrainingCreate extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.state = {\r\n      personalTraining     : [],\r\n      classSchedule        : [],\r\n      trainingScheduleCoach: [],\r\n      Coach_ID             : '',\r\n      User_ID              : '',\r\n      coachBooked          : false,\r\n      userBooked           : false,\r\n      incorrectCoach       : false,\r\n      classConflict        : false,\r\n      coachName            : '',\r\n\r\n      refIDs     : [],\r\n      cIDs       : [],\r\n      cNames     : [],\r\n      Name       : '',\r\n      ClassColors: [\r\n        '#812029',\r\n        '#1A63D9',\r\n        '#CF1B1B',\r\n        '#FFAD1F',\r\n        '#704585',\r\n        '#53878C',\r\n        '#C97200',\r\n        '#489655',\r\n        '#158CA3',\r\n        '#9E134B',\r\n      ],\r\n    };\r\n\r\n    this.insertDeleteMethodStates = this.insertDeleteMethodStates.bind(this);\r\n    this.fillTable = this.fillTable.bind(this);\r\n  }\r\n\r\n  // Modals for error messages in case of wrong input.\r\n  toggleModalCoachBooked = () => {\r\n    Swal.fire(\r\n        'The coach has another scheduled client at this time.',\r\n        '',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalClassConflict = () => {\r\n    Swal.fire(\r\n        'The user has a registered class at that time.',\r\n        '',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalUserBooked = () => {\r\n    Swal.fire(\r\n        'The user has another class or personal training at this time.',\r\n        '',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalIncorrectCoach = () => {\r\n    Swal.fire(\r\n        'The coach registered for personal training to this user is ' + this.state.coachName + '.',\r\n        'Please log in and try again...',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  //method responsible for displaying the enrolled classes and personal\r\n  // training according to the user data from the database\r\n  fillTable(refIDs, classesRefIDs, cNames, coaches) {\r\n    let node;\r\n    for (let i = 1; i <= 6; i++) {\r\n      for (let x = 1; x <= 12; x++) {\r\n        let refID = '';\r\n        if (x < 10) {\r\n          refID = i + '.0' + x;\r\n        } else {\r\n          refID = i + '.' + x;\r\n        }\r\n        if (refIDs.includes(refID)) {\r\n          node = document.getElementById(refID);\r\n          node.className = 'blackBackSelected';\r\n        } else {\r\n          if (classesRefIDs.includes(refID)) {\r\n            node = document.getElementById(refID);\r\n            node.className = 'classesBackground';\r\n          } else {\r\n            if (coaches.includes(refID)) {\r\n              node = document.getElementById(refID);\r\n              node.className = 'coachBooked';\r\n            } else {\r\n              node = document.getElementById(refID);\r\n              node.className = '';\r\n              node.textContent = '';\r\n            }\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  insertDeleteMethodStates() {\r\n    this.setState({\r\n      // refIDs: x,\r\n      User_ID : this.props.userID,\r\n      Coach_ID: this.props.coachID,\r\n      time    : this.props.time,\r\n      day     : this.props.day,\r\n    }, () => {\r\n      if (this.props.flag === true) {\r\n        insertPT(this.state).then();\r\n      } else {\r\n        deletePT(this.state).then();\r\n      }\r\n    });\r\n  }\r\n\r\n  // noinspection DuplicatedCode\r\n  ColorLuminance = (hex, lum) => {\r\n    // validate hex string\r\n    hex = String(hex).replace(/[^0-9a-f]/gi, '');\r\n    if (hex.length < 6) {\r\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    lum = lum || 0;\r\n    // convert to decimal and change luminosity\r\n    let rgb = '#', c, i;\r\n    for (i = 0; i < 3; i++) {\r\n      c = parseInt(hex.substr(i * 2, 2), 16);\r\n      c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n      rgb += ('00' + c).substr(c.length);\r\n    }\r\n    return rgb;\r\n  };\r\n\r\n  StateSetter(x, y, z) {\r\n    this.setState({refIDs: x}, () => {\r\n      this.setState({cIDs: y}, () => {\r\n        this.setState({cNames: z});\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.day !== this.props.day || prevProps.time !== this.props.time\r\n        || prevProps.flag !== this.props.flag\r\n        || prevProps.coachID !== this.props.coachID || prevProps.userID\r\n        !== this.props.userID) {\r\n      // console.clear();\r\n      (async() => {\r\n        console.log(this.props.userID)\r\n        let refID = '';\r\n\r\n        // ************************* Clearing the arrays\r\n        // ***************************\r\n        let personalTraining = [];\r\n        let classSchedule = [];\r\n\r\n        if (this.props.userID !== '') {\r\n          await getPersonalSchedule(this.props.userID).then(response => {\r\n            personalTraining = response;\r\n          });\r\n          await getClassSchedule(this.props.userID).then(response => {\r\n            classSchedule = response;\r\n\r\n          });\r\n        }\r\n\r\n        // ************************* Filling the arrays\r\n        // *************************** ------------------------- Class Schedule\r\n        // -------------------------------\r\n        let ret = [...classSchedule];\r\n        let classRefIDs = [];\r\n        let cNames = [];\r\n        // for loop for traversing fetched data for ClassSchedule and filling\r\n        // tables accordingly\r\n        ret.forEach((item) => {\r\n              if (item.TimeCode < 10) {\r\n                refID = item.DayCode + '.0' + item.TimeCode;\r\n              } else {\r\n                refID = item.DayCode + '.' + item.TimeCode;\r\n              }\r\n              if (!classRefIDs.includes(refID)) {\r\n                classRefIDs.push(refID);\r\n                cNames.push(item.Name);\r\n              }\r\n            },\r\n        );\r\n\r\n\r\n        // ------------------------ Personal Training --------------------------\r\n        ret = [...personalTraining];\r\n        refID = '';\r\n        let coachID = '';\r\n        let refIDs = [];\r\n        let coachName = '';\r\n        ret.forEach((item) => {\r\n              if (item.Time < 10) {\r\n                refID = item.Day + '.0' + item.Time;\r\n              } else {\r\n                refID = item.Day + '.' + item.Time;\r\n              }\r\n              // Create a new array based on current state:\r\n              coachID = item.Coach_ID;\r\n              coachName = item.CoachName + ' ' + item.Surname;\r\n              if (!refIDs.includes(refID)) {\r\n                refIDs.push(refID);\r\n              }\r\n            },\r\n        );\r\n\r\n        this.setState({coachName: coachName});\r\n        // this.setState({Coach_ID: coachID});\r\n        this.props.coachIDret(coachID);\r\n\r\n\r\n\r\n        // -------------- Filling the CoachRefIDs ----------------------------\r\n        // This will be used to prevent coach from having two personal training\r\n        // sessions at the same time\r\n        let trainingScheduleCoach = [];\r\n        // trainingScheduleCoach =  await this.fetchingCoachSchedule(coachID);\r\n\r\n        await getCoachTraining(coachID).then(response => {\r\n          trainingScheduleCoach = response;\r\n        });\r\n\r\n        let retCoach = [...trainingScheduleCoach];\r\n\r\n        refID = '';\r\n        let refIDsCoach = [];\r\n\r\n        retCoach.forEach((coach) => {\r\n              if (coach.Time < 10) {\r\n                refID = coach.Day + '.0' + coach.Time;\r\n              } else {\r\n                refID = coach.Day + '.' + coach.Time;\r\n              }\r\n              // Create a new array based on current state:\r\n              if (!refIDsCoach.includes(refID)) {\r\n                refIDsCoach.push(refID);\r\n              }\r\n            },\r\n        );\r\n\r\n\r\n        // ************ Printing the filled tables on the site **************\r\n\r\n        let time = this.props.time;\r\n        let day = this.props.day;\r\n\r\n        // ********************** Getting day and time from box selection\r\n        // *********************\r\n        if (this.props.time < 10) {\r\n          refID = day + '.0' + time;\r\n        } else {\r\n          refID = day + '.' + time;\r\n        }\r\n        if (prevProps.userID !== this.props.userID || (prevProps.day\r\n                                                       === this.props.day\r\n                                                       && prevProps.time\r\n                                                       === this.props.time\r\n                                                       && prevProps.coachID\r\n                                                       === this.props.coachID\r\n                                                       && prevProps.flag\r\n                                                       === this.props.flag)) {\r\n          refID = '';\r\n        }\r\n\r\n        if (!refIDs.includes(refID) && !refIDsCoach.includes(refID)\r\n            && this.props.flag === true && String(this.props.coachID) !== ''\r\n            && (String(coachID) === String(this.props.coachID) || String(\r\n                coachID) === '') && refID !== '' && !classRefIDs.includes(\r\n                refID)) {\r\n          refIDs.push(refID);\r\n          refIDsCoach.push(coachID);\r\n          await this.insertDeleteMethodStates(String(coachID),\r\n              String(this.props.coachID));\r\n        } else {\r\n          let pos = refIDs.indexOf(refID);\r\n          let posCoach = refIDsCoach.indexOf(refID);\r\n          if (refIDs.includes(refID) && this.props.flag === false && String(\r\n              this.props.coachID) !== ''\r\n              && (String(coachID) === String(this.props.coachID) || String(\r\n                  coachID) === '') && refID !== '') {\r\n\r\n            refIDs.splice(pos, 1);\r\n            refIDsCoach.splice(posCoach, 1);\r\n            await this.insertDeleteMethodStates(String(coachID),\r\n                String(this.props.coachID));\r\n          } else {\r\n\r\n            if ((refIDs.includes(refID) || classRefIDs.includes(refID))\r\n                && this.props.flag === true) {\r\n              this.toggleModalUserBooked();\r\n              coachID = '';\r\n            }\r\n\r\n            if (classRefIDs.includes(refID) && this.props.flag === false) {\r\n              this.toggleModalClassConflict();\r\n              coachID = '';\r\n            }\r\n            if (refIDsCoach.includes(refID) && !refIDs.includes(refID)\r\n                && this.props.flag === true && String(coachID)\r\n                === this.props.coachID) {\r\n              this.toggleModalCoachBooked();\r\n            }\r\n\r\n            if (String(coachID) !== String(this.props.coachID) && String(\r\n                coachID) !== '' && prevProps.userID === this.props.userID) { //\r\n              this.toggleModalIncorrectCoach();\r\n            }\r\n          }\r\n\r\n        }\r\n        await this.fillTable(refIDs, classRefIDs, cNames, refIDsCoach);\r\n\r\n      })();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = { 'container' }>\r\n          <div className = \"row\">\r\n            <div className = \"timetable\">\r\n              <div className = \"week-names\">\r\n                <div>monday</div>\r\n                <div>tuesday</div>\r\n                <div>w/day</div>\r\n                <div>thursday</div>\r\n                <div>friday</div>\r\n                <div>saturday</div>\r\n                <div className = \"weekend\">sunday</div>\r\n              </div>\r\n              <div className = \"time-interval\">\r\n                <div>8:00 - 09:00</div>\r\n                <div>09:00 - 10:00</div>\r\n                <div>10:00 - 11:00</div>\r\n                <div>11:00 - 12:00</div>\r\n                <div>12:00 - 13:00</div>\r\n                <div>13:00 - 14:00</div>\r\n                <div>14:00 - 15:00</div>\r\n                <div>15:00 - 16:00</div>\r\n                <div>16:00 - 17:00</div>\r\n                <div>17:00 - 18:00</div>\r\n                <div>18:00 - 19:00</div>\r\n                <div>19:00 - 20:00</div>\r\n              </div>\r\n              <div className = \"content\">\r\n                { [...Array(6).keys()].map(x => (x + 1.01).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.02).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.03).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.04).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.05).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.06).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.07).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.08).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.09).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.10).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.11).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.12).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*<div> <span><small>&emsp;*The personal training sessions registered are represented by: </small></span><p className='smallCellBox'></p></div>*/ }\r\n          <br />\r\n          <div className = { 'row' }>\r\n            <div className = 'col-sm-12 col-md-9 legendsBoxPT'>\r\n              <div className = \"sameRow\">\r\n                <div className = 'smallCellBox' />\r\n                {/*<div className='smallCellBox'></div>*/ }\r\n                <small>&emsp;User Booked</small>\r\n                <div className = 'coachBookedSmall' />\r\n                <small>&emsp;Coach Booked</small>\r\n                <div className = 'classBookedSmall' />\r\n                <small>&emsp;Class Enrolled</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PersonalTrainingCreate;","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React                  from 'react';\r\nimport {ValidatorForm}        from 'react-material-ui-form-validator';\r\nimport TextField              from '@material-ui/core/TextField';\r\nimport Radio                  from '@material-ui/core/Radio';\r\nimport RadioGroup             from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel       from '@material-ui/core/FormControlLabel';\r\nimport FormControl            from '@material-ui/core/FormControl';\r\nimport Recaptcha              from 'react-recaptcha';\r\nimport Swal                   from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport '../assets/styles/SignInUp.css';\r\nimport {sameUsername, signUp} from '../../repository';\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formData  : {\r\n        fname           : '',\r\n        lname           : '',\r\n        username        : '',\r\n        email           : '',\r\n        password        : '',\r\n        confirm_password: '',\r\n        bdate           : '',\r\n        gender          : '',\r\n        age             : '',\r\n      },\r\n      isVerified: false,\r\n      submitted : false,\r\n      countTotal: 0,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.rotate = this.rotate.bind(this);\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    this.calcDate = this.calcDate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    // noinspection JSUnresolvedFunction\r\n    ValidatorForm.addValidationRule('isPasswordMatch', value => {\r\n      const {formData} = this.state;\r\n      return value === formData.password;\r\n    });\r\n  }\r\n\r\n  handleChange = event => {\r\n    const {formData} = this.state;\r\n    formData[event.target.name] = event.target.value;\r\n    this.setState({formData});\r\n\r\n    if (event.target.name === 'bdate') {\r\n      this.calcDate(event);\r\n    }\r\n\r\n    if (\r\n        event.target.name === 'password' &&\r\n        !event.target.value.match(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/)\r\n    ) {\r\n      event.target.setCustomValidity(\r\n          'Enter a combination of at least 8 numbers, lower and uppercase letters.',\r\n      );\r\n    } else if (\r\n        event.target.name === 'confirm_password' &&\r\n        event.target.value !== this.state.formData.password\r\n    ) {\r\n      event.target.setCustomValidity('Passwords don\\'t match.');\r\n    } else {\r\n      event.target.setCustomValidity('');\r\n    }\r\n  };\r\n\r\n  verifyCallback = response => {\r\n    if (response) {\r\n      this.setState({isVerified: true});\r\n    }\r\n  };\r\n\r\n  rotate = () => {\r\n    this.setState({\r\n      formData  : {\r\n        fname           : '',\r\n        lname           : '',\r\n        username        : '',\r\n        email           : '',\r\n        password        : '',\r\n        confirm_password: '',\r\n        bdate           : '',\r\n        gender          : '',\r\n      },\r\n      isVerified: false,\r\n      submitted : false,\r\n    });\r\n    this.props.rotate();\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(this.props.testSubmit) {\r\n      this.props.testSubmit('Testing');\r\n      return;\r\n    }\r\n    if (\r\n        !this.state.formData.fname ||\r\n        !this.state.formData.lname ||\r\n        !this.state.formData.username ||\r\n        !this.state.formData.bdate ||\r\n        !this.state.formData.gender ||\r\n        !this.state.formData.email.match(\r\n            /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\r\n        ) ||\r\n        !this.state.formData.password.match(\r\n            /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/,\r\n        ) ||\r\n        this.state.formData.confirm_password !== this.state.formData.password\r\n    ) {\r\n      return;\r\n    }\r\n    if (!this.state.isVerified) {\r\n      Swal.fire(\r\n          'Please verify that you are not a robot 🤖!!!',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return;\r\n    }\r\n    // Create output query\r\n    const crypto = require('crypto');\r\n    const newToken = crypto.randomBytes(10).toString('hex');\r\n\r\n    const hashCode = crypto.createHmac('sha256', 'ffn_private_key_!!!!')\r\n        .update(this.state.formData.password)\r\n        .digest('hex');\r\n\r\n    const dataSign = {\r\n      username: this.state.formData.username,\r\n      password: hashCode,\r\n      fname   : this.state.formData.fname,\r\n      lname   : this.state.formData.lname,\r\n      email   : this.state.formData.email,\r\n      age     : this.state.formData.age,\r\n      gender  : this.state.formData.gender === 'male' ? 1 : 2,\r\n      level   : this.state.formData.level,\r\n      bDate   : this.state.formData.bdate,\r\n      verify  : 0,\r\n      hash    : newToken,\r\n    };\r\n    sameUsername(this.state.formData.username)\r\n        .then(response => {\r\n          this.setState(\r\n              {countTotal: response.countTotal},\r\n              () => {\r\n                if (this.state.countTotal === 1) {\r\n                  Swal.fire(\r\n                      'Someone else have this username!!!',\r\n                      '',\r\n                      'error',\r\n                  ).then(() => {\r\n                  }).catch(() => Swal.fire(\r\n                      'Something went wrong!!',\r\n                      'Please try again...',\r\n                      'error',\r\n                  ));\r\n                } else if(this.state.formData.age < 13){\r\n                  Swal.fire(\r\n                      'You must be over 13 to able to sign up!!!',\r\n                      '',\r\n                      'error',\r\n                  ).then(() => {\r\n                  }).catch(() => Swal.fire(\r\n                      'Something went wrong ',\r\n                      '',\r\n                      'error',\r\n                  ));\r\n                } else {\r\n                  signUp(dataSign)\r\n                      .then(() => {\r\n                        Swal.fire(\r\n                            'Successful sign up',\r\n                            'Please proceed to your email, so you can verify your account.',\r\n                            'success',\r\n                        ).then(() => {\r\n                          // Reset\r\n                          this.setState({\r\n                            formData  : {\r\n                              fname           : '',\r\n                              lname           : '',\r\n                              username        : '',\r\n                              email           : '',\r\n                              password        : '',\r\n                              confirm_password: '',\r\n                              bdate           : '',\r\n                              gender          : '',\r\n                            },\r\n                            isVerified: false,\r\n                            submitted : false,\r\n                          }, () => this.props.toggleModal());\r\n                        });\r\n                      }).catch(() => Swal.fire(\r\n                      'Something went wrong',\r\n                      'Please try again...',\r\n                      'error',\r\n                  ));\r\n                }\r\n              },\r\n          );\r\n        });\r\n  };\r\n\r\n  calcDate = (dDate) => {\r\n    let thenD = dDate.target.value;\r\n    let str = thenD.split('-');\r\n    let now = new Date();\r\n    let ageDif = now.getFullYear() - str[0];\r\n\r\n    const {formData} = this.state;\r\n    formData.age = ageDif;\r\n    this.setState({formData});\r\n  };\r\n\r\n  render() {\r\n    // noinspection JSUnresolvedVariable\r\n    return (\r\n        <form id = \"signup\"\r\n              onSubmit = { this.handleSubmit }\r\n              autoComplete = \"off\"\r\n        >\r\n          <h1>Sign up</h1>\r\n          <input\r\n              placeholder = \"First Name\"\r\n              name = \"fname\"\r\n              type = \"text\"\r\n              value = { this.state.formData.fname }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Last Name\"\r\n              name = \"lname\"\r\n              type = \"text\"\r\n              value = { this.state.formData.lname }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Email Address\"\r\n              name = \"email\"\r\n              type = \"email\"\r\n              value = { this.state.formData.email }\r\n              onChange = { this.handleChange }\r\n              pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n              required\r\n          />\r\n          <input\r\n              placeholder = \"Username\"\r\n              name = \"username\"\r\n              type = \"text\"\r\n              value = { this.state.formData.username }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Password\"\r\n              name = \"password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.password }\r\n              required\r\n              pattern = \"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Confirm Password\"\r\n              name = \"confirm_password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.confirm_password }\r\n              required\r\n              pattern = \"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <TextField\r\n              placeholder = \"Birthday\"\r\n              name = \"bdate\"\r\n              type = \"date\"\r\n              value = { this.state.formData.bday }\r\n              InputLabelProps = { {\r\n                shrink: true,\r\n              } }\r\n              onChange = { this.handleChange }\r\n              required\r\n          />\r\n          <br />\r\n          <FormControl component = \"fieldset\">\r\n            {/* <FormLabel component=\"legend\">Gender</FormLabel> */ }\r\n            <RadioGroup\r\n                aria-label = \"gender\"\r\n                name = \"gender\"\r\n                value = { this.state.formData.gender }\r\n                onChange = { this.handleChange }\r\n                className = { 'gender-radio' }\r\n            >\r\n              <FormControlLabel\r\n                  value = \"male\"\r\n                  control = { <Radio required /> }\r\n                  label = \"Male\"\r\n              />\r\n              <FormControlLabel\r\n                  value = \"female\"\r\n                  control = { <Radio required /> }\r\n                  label = \"Female\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Recaptcha\r\n              elementID = { 'g-recaptcha' }\r\n              sitekey = \"6Lf0od8UAAAAAFoog9iFIpVd8rcPxBwHpUKpnCua\"\r\n              size = \"normal\"\r\n              render = \"explicit\"\r\n              theme = \"dark\"\r\n              verifyCallback = { this.verifyCallback }\r\n          />\r\n          <button data-testid={'button'}>Sign up</button>\r\n          <br />\r\n          <span className = \"login rotateForms\" onClick = { this.rotate }>\r\n            <i className = \"fa fa-sign-in\" />\r\n            Sign In\r\n          </span>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React   from 'react';\r\nimport '../assets/styles/SignInUp.css';\r\nimport Swal    from 'sweetalert2';\r\nimport history from '../../history';\r\nimport {isVerified, logIn, logOut} from '../../repository';\r\n\r\nclass Signup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formData: {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      Verify    :0,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.rotate = this.rotate.bind(this);\r\n  }\r\n\r\n  handleChange = event => {\r\n    const {formData} = this.state;\r\n    formData[event.target.name] = event.target.value;\r\n    this.setState({formData});\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n      if(this.props.testSubmit) {\r\n          this.props.testSubmit('Testing');\r\n          return;\r\n      }\r\n\r\n    // const crypto = require('crypto');\r\n    // noinspection JSUnusedLocalSymbols\r\n    // const newToken = crypto.randomBytes(10).toString('hex');\r\n\r\n    const crypto = require('crypto');\r\n      const hashCode = crypto.createHmac('sha256', 'ffn_private_key_!!!!')\r\n          .update(this.state.formData.password)\r\n          .digest('hex');\r\n      const dataLogIn = {\r\n      username: this.state.formData.username,\r\n      password: hashCode,\r\n    };\r\n\r\n\r\n    // Call for query\r\n    logIn(dataLogIn)\r\n        .then(data => {\r\n          // Error\r\n          if (!data.level) {\r\n            throw Error;\r\n          }\r\n\r\n          // Success\r\n          this.setState({\r\n            formData: {\r\n              username: '',\r\n              password: '',\r\n            },\r\n          }, () => {\r\n           if(data.level==='user'){\r\n                isVerified().then(d => {\r\n                  this.setState({Verify : d.Verify.data[0]},\r\n                      () => {\r\n                          if(this.state.Verify === 1){\r\n                            this.props.toggleModal();\r\n                            this.props.setUserLevel('user');\r\n                            history.push('/user/profile');\r\n                          }else{\r\n                            Swal.fire(\r\n                                'This Account is not Verified yet!!',\r\n                                'Please go and verify it!!',\r\n                                'warning',\r\n                            ).then(() => {logOut();});\r\n                          }\r\n                      });\r\n                });\r\n            }else{\r\n              this.props.toggleModal();\r\n              this.props.setUserLevel(data.level);\r\n             history.push('/' + data.level + '/profile');\r\n            }\r\n          });\r\n        }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ));\r\n  };\r\n\r\n  rotate = () => {\r\n    this.setState({\r\n      formData : {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      submitted: false,\r\n    });\r\n    this.props.rotate();\r\n  };\r\n\r\n  forgotPassword = () => {\r\n    history.push('/forgotPassword');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <form id = \"login\"\r\n              onSubmit = { this.handleSubmit }\r\n              autoComplete = \"off\"\r\n        >\r\n          <h1>Sign in</h1>\r\n          <input\r\n              placeholder = \"Username\"\r\n              name = \"username\"\r\n              type = \"text\"\r\n              value = { this.state.formData.username }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Password\"\r\n              name = \"password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.password }\r\n              required\r\n              // pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <p className = { 'forgot-passsword' }\r\n             onClick = { this.forgotPassword }\r\n          >Forgot your password?</p>\r\n          <button data-testid={'button'}>Sign in</button>\r\n          <br />\r\n          <span className = \"login rotateForms\" onClick = { this.rotate }>\r\n            <i className = \"fa fa-user-plus\" />\r\n            Sign up\r\n          </span>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React  from 'react';\r\nimport $      from 'jquery';\r\nimport Modal  from 'react-bootstrap/Modal';\r\nimport Signup from './SignUp';\r\nimport LogIn  from './LogIn';\r\nimport '../assets/styles/SignInUpModal.css';\r\n\r\nclass SignInUpModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showModal: false,\r\n    };\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({showModal: !this.state.showModal});\r\n  };\r\n\r\n  rotate = () => {\r\n    // noinspection JSJQueryEfficiency\r\n    if ($('.flipper').css('transform') === 'none') {\r\n      $('.flipper').css('transform', 'rotateY(180deg)');\r\n    } else {\r\n      $('.flipper').css('transform', '');\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <button className = { 'nav-link login btn btn-secondary' }\r\n                  onClick = { this.toggleModal }\r\n          >\r\n            Login/Register\r\n          </button>\r\n\r\n          <Modal show = { this.state.showModal }\r\n                 onHide = { this.toggleModal }\r\n                 className = { 'sign-in-up-modal' }\r\n                 size = { 'md' }\r\n                 centered\r\n          >\r\n            {/*<Modal.Header closeButton>*/ }\r\n            {/*  <Modal.Title>Modal heading</Modal.Title>*/ }\r\n            {/*</Modal.Header>*/ }\r\n            <Modal.Body>\r\n              <div className = \"flip-container\">\r\n                <div className = \"flipper\">\r\n                  <div className = \"front\">\r\n                    {/* <!-- front content --> */ }\r\n                    <div className = \"card\">\r\n                      <LogIn rotate = { this.rotate }\r\n                             toggleModal = { this.toggleModal }\r\n                             setUserLevel = { this.props.setUserLevel }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className = \"back\">\r\n                    {/* <!-- back content --> */ }\r\n                    <div className = \"card\">\r\n                      <Signup rotate = { this.rotate }\r\n                              toggleModal = { this.toggleModal }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n            {/*<Modal.Footer>*/ }\r\n            {/*  <Button variant = \"secondary\" onClick = { this.toggleModal }>*/ }\r\n            {/*    Close*/ }\r\n            {/*  </Button>*/ }\r\n            {/*  <Button variant = \"primary\" onClick = { this.toggleModal }>*/ }\r\n            {/*    Save Changes*/ }\r\n            {/*  </Button>*/ }\r\n            {/*</Modal.Footer>*/ }\r\n          </Modal>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignInUpModal;\r\n","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n// import ToggleModal                 from './ToggleModal';\r\n// import LoginModal                  from './LoginModal';\r\n// import { Button }                  from 'reactstrap';\r\nimport {isAuthenticated, logOut} from '../../repository';\r\nimport logo_img from '../assets/img/logos/ffLogoTransparent.png';\r\nimport history from '../../history';\r\nimport SignInUpModal from './SignInUpModal';\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  };\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    localStorage.setItem('path', history.location.pathname);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  onLogOut = () => {\r\n    this.setState({userLevel: undefined, modal: false});\r\n    logOut();\r\n    // window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        // Navigation\r\n        <nav className = \"navbar navbar-expand-lg navbar-dark fixed-top\"\r\n             id = \"mainNav\"\r\n        >\r\n          <div className = \"container-fluid mx-auto\">\r\n            <NavLink className = \"navbar-brand\" to = \"/\" exact = { true }>\r\n              <span className = \"gym-name\">Fitness Factory Nicosia&nbsp;</span>\r\n              <img id = { 'logo' }\r\n                   src = { logo_img }\r\n                   alt = 'Logo'\r\n                   height = { 64 }\r\n                   width = { 64 }\r\n              />\r\n            </NavLink>\r\n            <button className = \"navbar-toggler navbar-toggler-right\"\r\n                    type = \"button\"\r\n                    data-toggle = \"collapse\"\r\n                    data-target = \"#navbarResponsive\"\r\n                    aria-controls = \"navbarResponsive\"\r\n                    aria-expanded = \"false\"\r\n                    aria-label = \"Toggle navigation\"\r\n            >\r\n              Menu&nbsp;<i className = \"fa fa-bars\" />\r\n            </button>\r\n            <div className = \"collapse navbar-collapse\" id = \"navbarResponsive\">\r\n              <ul className = \"navbar-nav text-uppercase ml-auto\">\r\n                <li className = \"nav-item\">\r\n                  <NavLink className = \"nav-link\"\r\n                           to = \"/\"\r\n                           exact = { true }\r\n                  >Home</NavLink>\r\n                </li>\r\n                <li className = \"nav-item\">\r\n                  <NavLink className = \"nav-link\"\r\n                           to = \"/classes\"\r\n                  >Classes</NavLink>\r\n                </li>\r\n                { isAuthenticated() &&\r\n                  <>\r\n                    { this.props.userLevel === 'user' &&\r\n                      <li className = \"nav-item\">\r\n                        <NavLink className = \"nav-link\"\r\n                                 to = \"/user/profile\"\r\n                        >Profile</NavLink>\r\n                      </li> }\r\n\r\n                    { this.props.userLevel === 'coach' &&\r\n                      <li className = \"nav-item\">\r\n                        <NavLink className = \"nav-link\"\r\n                                 to = \"/coach/profile\"\r\n                        >Profile</NavLink>\r\n                      </li> }\r\n\r\n                    { this.props.userLevel === 'admin' &&\r\n                      <li className = \"nav-item\">\r\n                        <NavLink className = \"nav-link\"\r\n                                 to = \"/admin/profile\"\r\n                        >Profile</NavLink>\r\n                      </li> }\r\n\r\n                    { this.props.userLevel === 'admin' &&\r\n                      <li className = \"nav-item\">\r\n                        <NavLink className = \"nav-link\"\r\n                                 to = \"/admin/dashboard\"\r\n                        >Dashboard</NavLink>\r\n                      </li> }\r\n                  </>\r\n                }\r\n                <li className = \"nav-item\">\r\n                  <NavLink className = \"nav-link\" to = \"/about\">About\r\n                                                                Us</NavLink>\r\n                </li>\r\n                {\r\n                  (\r\n                      isAuthenticated()) ?\r\n                      <li className = \"nav-item\">\r\n                        <NavLink to = \"/\"\r\n                                 className = { 'nav-link logout btn btn-secondary' }\r\n                                 onClick = { this.onLogOut }\r\n                        >\r\n                          Logout <i className = \"fas fa-sign-out-alt\" />\r\n                        </NavLink>\r\n                      </li>\r\n                      :\r\n                      <li className = \"nav-item\">\r\n                        {/*<Button className = { 'nav-link login btn btn-secondary' }*/ }\r\n                        {/*        onClick = { this.toggle }*/ }\r\n                        {/*>*/ }\r\n                        {/*    Login/Register <i className = \"fas fa-sign-in-alt\" />*/ }\r\n                        {/*</Button>*/ }\r\n                        {/*<ToggleModal*/ }\r\n                        {/*    modal = { this.state.modal }*/ }\r\n                        {/*    toggle = { this.toggle }*/ }\r\n                        {/*    modalSize = { 'md' }*/ }\r\n                        {/*    modalHeader = { 'Login Form' }*/ }\r\n                        {/*    modalBody = { <LoginModal /> }*/ }\r\n                        {/*    setUserLevel = { this.props.setUserLevel }*/ }\r\n                        {/*/>*/ }\r\n                        <SignInUpModal setUserLevel = { this.props.setUserLevel } />\r\n                      </li>\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;","import React, {Component} from 'react';\r\nimport {NavLink}          from 'react-router-dom';\r\nimport '../assets/styles/homePage.css';\r\nimport * as Icons         from '@fortawesome/fontawesome-free-solid';\r\nimport {FontAwesomeIcon}  from '@fortawesome/react-fontawesome';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    // noinspection HtmlUnknownTarget\r\n    return (\r\n        // Footer\r\n        <footer>\r\n          <div id = \"footer\" className = \"information container-fluid\">\r\n            <div className = \"row justify-content-center\">\r\n              <div id = \"socials-footer\"\r\n                   className = \"col-lg-3 col-md-12 col-sm-12\"\r\n              >\r\n                <h2>Get Social</h2>\r\n                <p data-testid = { 'text' }>{ this.props.stylesheetData['social']['text'] }</p>\r\n                <br />\r\n                <p>\r\n                  <a data-testid = { 'facebook' }\r\n                     href = { this.props.stylesheetData['social']['facebook'] }\r\n                  >\r\n                    <i className = \"fa fa-facebook footer-icon\" />\r\n                  </a>\r\n                  <a data-testid = { 'instagram' }\r\n                     href = { this.props.stylesheetData['social']['instagram'] }\r\n                  >\r\n                    <i className = \"fa fa-instagram footer-icon footer-icon-centered\" />\r\n                  </a>\r\n                </p>\r\n              </div>\r\n              <div id = \"about-footer\"\r\n                   className = \"col-lg-3 col-md-12 col-sm-12\"\r\n              >\r\n                <h2>About Us</h2>\r\n                <p>\r\n                  <i className = \"fa fa-map-marker footer-icon\" /> Address:\r\n                  <span data-testid = { 'address' }\r\n                        className = \"about-footer-text\"\r\n                  > { this.props.stylesheetData['about-us']['address'] }</span>\r\n                </p>\r\n                <br />\r\n                <p>\r\n                  <i className = \"fa fa-envelope footer-icon\" />\r\n                  <span data-testid = { 'email' }\r\n                        className = \"about-footer-text\"\r\n                  > { this.props.stylesheetData['about-us']['email'] }</span>\r\n                </p>\r\n              </div>\r\n              { !this.props.testLoading &&\r\n                <div id = \"help-footer\"\r\n                     className = \"col-lg-3 col-md-12 col-sm-12\"\r\n                >\r\n                  <h2>Get Help</h2>\r\n                  <div>\r\n                    <p><i className = \"fa fa-home footer-icon\" /> <NavLink\r\n                        className = \"Nav_link\"\r\n                        to = \"/\"\r\n                    >Home Page</NavLink></p>\r\n                  </div>\r\n                  <div>\r\n                    <p><i className = \"fa fa-phone footer-icon\" /> <NavLink\r\n                        className = \"Nav_link\"\r\n                        to = \"/about\"\r\n                    >Contact Us</NavLink></p>\r\n                  </div>\r\n                  <div>\r\n                    <p><i className = \"fa fa-info footer-icon\" /> <NavLink\r\n                        className = \"Nav_link\"\r\n                        to = \"/classes\"\r\n                    >See the classes</NavLink></p>\r\n                  </div>\r\n                </div>\r\n              }\r\n              <div id = \"about-footer\"\r\n                   className = \"col-lg-3 col-md-12 col-sm-12\"\r\n              >\r\n                <h2>About The Club</h2>\r\n                { this.props.stylesheetData['about-club'].map((v, i) => {\r\n                  return (\r\n                      <div data-testid = { 'about-club' }\r\n                           key = { i }\r\n                           style = { {padding: 0} }\r\n                      >\r\n                        <p>{ v }</p>\r\n                      </div>\r\n                  );\r\n                }) }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div id = \"copyrights\" className = \"container-fluid\">\r\n            <div className = \"row justify-content-center\">\r\n              <p><FontAwesomeIcon icon = { Icons.faCopyright }\r\n                                  size = \"sm\"\r\n              /> Copyrights Fitness Factory Nicosia</p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport $                  from 'jquery';\r\nimport Navigation         from './common/Navigation';\r\nimport Footer             from './common/Footer';\r\n\r\nclass PageWrapper extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {isBrowser: false, isAndroid: false};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleClick();\r\n\r\n    // Opera 8.0+\r\n    // noinspection JSUnresolvedVariable\r\n    let isOpera = (!!window.opr) || !!window.opera\r\n                  || navigator.userAgent.indexOf(' OPR/') >= 0;\r\n    // Firefox 1.0+\r\n    // noinspection JSUnresolvedVariable\r\n    let isFirefox = typeof InstallTrigger !== 'undefined';\r\n    // Safari 3.0+ \"[object HTMLElementConstructor]\"\r\n    // noinspection ES6ModulesDependencies\r\n    const {HTMLElement} = window;\r\n    // noinspection ES6ModulesDependencies\r\n    let isSafari = /constructor/i.test(HTMLElement) || (function(p) {\r\n      return p.toString() === '[object SafariRemoteNotification]';\r\n    })(!window['safari'] || (typeof safari !== 'undefined'));\r\n    // Internet Explorer 6-11\r\n    // noinspection JSUnresolvedVariable,PointlessBooleanExpressionJS\r\n    let isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n    // Edge 20+\r\n    let isEdge = !isIE && !!window.StyleMedia;\r\n    // Chrome 1 - 79\r\n    // noinspection JSUnresolvedVariable\r\n    let isChrome = !!window.chrome && (!!window.chrome.webstore\r\n                                       || !!window.chrome.runtime);\r\n    // Edge (based on chromium) detection\r\n    // noinspection EqualityComparisonWithCoercionJS\r\n    let isEdgeChromium = isChrome && (navigator.userAgent.indexOf('Edg') !== -1);\r\n    // Blink engine detection\r\n    let isBlink = (isChrome || isOpera) && !!window.CSS;\r\n\r\n    this.setState({\r\n      isBrowser: isOpera || isFirefox || isSafari || isIE || isEdge || isChrome\r\n                 || isEdgeChromium || isBlink,\r\n      isAndroid: navigator.userAgent.match(/Android/i),\r\n    });\r\n  }\r\n\r\n  handleClick = () => {\r\n    // Scroll to top\r\n    $('#to-top').on('click', function() {\r\n      let hash = $(this).data('hash');\r\n      if (hash) {\r\n        $('html, body').animate({\r\n          scrollTop: $(document.getElementById(hash)).offset().top,\r\n        }, 800, function() {\r\n          window.location.hash = hash;\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // noinspection JSCheckFunctionSignatures\r\n    const childrenWithProps = React.Children.map(this.props.children, child =>\r\n        React.cloneElement(child, {userLevel: this.props.userLevel}),\r\n    );\r\n    return (\r\n\r\n        <div id = \"top-of-page\"\r\n             style = { {\r\n               display        : 'flex',\r\n               minHeight      : '100vh',\r\n               flexDirection  : 'column',\r\n               backgroundColor: '#1B1B1B',\r\n             } }\r\n        >\r\n          { this.state.isBrowser && !this.state.isAndroid &&\r\n            <Navigation userLevel = { this.props.userLevel }\r\n                        setUserLevel = { this.props.setUserLevel }\r\n            />\r\n          }\r\n          <div style = { {flex: '1'} }>\r\n            { childrenWithProps }\r\n          </div>\r\n          { this.state.isBrowser && !this.state.isAndroid &&\r\n            <Footer stylesheetData = { this.props.stylesheetData['Footer'] } />\r\n          }\r\n\r\n          {/* Back To Top Button */ }\r\n          <button data-hash = \"top-of-page\"\r\n                  id = \"to-top\"\r\n                  className = \"button\"\r\n                  type = \"button\"\r\n          >Top\r\n          </button>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageWrapper;","import React, {Component} from 'react';\r\nimport {Carousel}         from 'react-bootstrap';\r\nimport {validURL}         from '../../repository';\r\n// Images\r\n\r\nclass ControlledCarousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      index    : 0,\r\n      direction: null,\r\n    };\r\n\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n  }\r\n\r\n  handleSelect = (selectedIndex, e) => {\r\n    this.setState({index: selectedIndex, direction: e.direction});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <Carousel activeIndex = { this.state.index }\r\n                  direction = { this.state.direction }\r\n                  onSelect= { (i,e)=>this.handleSelect(i,e) }\r\n                  pauseOnHover = { true }\r\n                  touch = { true }\r\n        >\r\n          { this.props.stylesheetData['Home']['carousel'].map((item, index) => {\r\n            return (\r\n                <Carousel.Item key = { index }>\r\n                  <img\r\n                      className = \"d-block img-responsive fit-image\"\r\n                      src = { validURL(item.src) ? item.src : process.env.PUBLIC_URL + item.src }\r\n                      alt = { item.label }\r\n                  />\r\n                  <Carousel.Caption>\r\n                    <h3>{ item.label }</h3>\r\n                    <p>{ item.text }</p>\r\n                  </Carousel.Caption>\r\n                </Carousel.Item>\r\n            );\r\n          }) }\r\n        </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\nclass CarouselHp extends Component {\r\n  render() {\r\n    return (\r\n        <ControlledCarousel stylesheetData = { this.props.stylesheetData } />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CarouselHp;","import React, {Component}         from 'react';\r\nimport '../assets/styles/homePage.css';\r\nimport * as Icons                 from '@fortawesome/fontawesome-free-solid';\r\nimport {FontAwesomeIcon}          from '@fortawesome/react-fontawesome';\r\nimport {faMedal, faWeightHanging} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ServiceGoal extends Component {\r\n  render() {\r\n    return (\r\n        <div className = { 'col-xl-3 col-lg-6 col-md-6' }>\r\n          <div className = { 'service-box' }>\r\n            <div className = { 'service-box-icon' }>\r\n              {/*<FontAwesome*/ }\r\n              {/*    name={this.props.icon}*/ }\r\n              {/*    size=\"2x\"*/ }\r\n              {/*/>*/ }\r\n              {\r\n                this.props.icon === 'medal' ?\r\n                    <FontAwesomeIcon data-testid = { 'icon' }\r\n                                     icon = { faMedal }\r\n                                     size = \"2x\"\r\n                    />\r\n                    :\r\n                    this.props.icon === 'weight' ?\r\n                        <FontAwesomeIcon data-testid = { 'icon' }\r\n                                         icon = { faWeightHanging }\r\n                                         size = \"2x\"\r\n                        />\r\n                        :\r\n                        <FontAwesomeIcon data-testid = { 'icon' }\r\n                                         icon = { Icons['fa'\r\n                                                        + this.props.icon.charAt(\r\n                                             0).toUpperCase()\r\n                                                        + this.props.icon.slice(\r\n                                             1)] }\r\n                                         size = \"2x\"\r\n                        />\r\n              }\r\n            </div>\r\n            <div className = { 'service-box-content' }>\r\n              <h1 data-testid = { 'title' }\r\n                  className = { 'service-box-title' }\r\n              >{ this.props.title }</h1>\r\n              <p data-testid = { 'message' }>{ this.props.message }</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServiceGoal;","import React, {Component} from 'react';\r\nimport '../assets/styles/homePage.css';\r\nimport ServiceGoal        from './ServiceGoal';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\nimport bgImage            from '../assets/img/logos/ffLogoTransparent.png';\r\n\r\nclass Services extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      services: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({services: this.props.stylesheetData['Home']['services']});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div id = { 'our-services' }>\r\n          <div className = \"container\">\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12\">\r\n                <div className = \"service-title text-center padding-bottom-35\">\r\n                  <p className = \"subtitle\">Service we provide</p>\r\n                  <h1 className = \"title\">Our Services</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          { this.state.services.length === 6 &&\r\n            <div className = { 'service-area' }>\r\n              <div className = { 'container' }>\r\n                <div className = { 'row' }>\r\n                  <AnimatedOnScroll animationInDelay = { 500 }\r\n                                    animationIn = \"zoomInRight\"\r\n                                    style = { {\r\n                                      position : 'absolute',\r\n                                      height   : 650,\r\n                                      width    : 650,\r\n                                      top      : '50%',\r\n                                      left     : '50%',\r\n                                      transform: 'translate(-50%, -50%)',\r\n                                    } }\r\n                  >\r\n                    <img className = { 'bgImage' }\r\n                         src = { bgImage }\r\n                         alt = { 'Background' }\r\n                    />\r\n                  </AnimatedOnScroll>\r\n\r\n                  <AnimatedOnScroll animationIn = \"fadeInLeft\">\r\n                    <div className = { 'col-lg-12' }>\r\n                      <div className = { 'row d-flex justify-content-between' }>\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[0].icon }\r\n                            title = { this.state.services[0].title }\r\n                            message = { this.state.services[0].message }\r\n                        />\r\n\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[1].icon }\r\n                            title = { this.state.services[1].title }\r\n                            message = { this.state.services[1].message }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </AnimatedOnScroll>\r\n\r\n                  <AnimatedOnScroll animationIn = \"fadeInRight\">\r\n                    <div className = { 'col-lg-12' }>\r\n                      <div className = { 'row d-flex justify-content-between' }>\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[2].icon }\r\n                            title = { this.state.services[2].title }\r\n                            message = { this.state.services[2].message }\r\n                        />\r\n\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[3].icon }\r\n                            title = { this.state.services[3].title }\r\n                            message = { this.state.services[3].message }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </AnimatedOnScroll>\r\n\r\n                  <AnimatedOnScroll animationIn = \"fadeInLeft\">\r\n                    <div className = { 'col-lg-12' }>\r\n                      <div className = { 'row d-flex justify-content-between' }>\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[4].icon }\r\n                            title = { this.state.services[4].title }\r\n                            message = { this.state.services[4].message }\r\n                        />\r\n\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[5].icon }\r\n                            title = { this.state.services[5].title }\r\n                            message = { this.state.services[5].message }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </AnimatedOnScroll>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Services;","import React, {Component} from 'react';\r\nimport '../assets/styles/Announcement.css';\r\n\r\nclass Announcement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {hover: false};\r\n        this.toggleHover = this.toggleHover.bind(this);\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState({hover: !this.state.hover});\r\n    };\r\n\r\n    onSlickRemove = () => {\r\n        if (this.props.level !== -1) {\r\n            this.props.slickRemove(this.props.id);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let dataStyle;\r\n        let imgStyle;\r\n        if (this.props.level <= 1) {\r\n            dataStyle = {display: 'block'};\r\n            imgStyle = {display: 'none'};\r\n        }\r\n        return (\r\n            !this.props.isAdder ?\r\n                (\r\n                    <div className = { 'ann-card' }\r\n                         onClick = { this.onSlickRemove }\r\n                         onMouseOver = { this.toggleHover }\r\n                         onMouseOut = { this.toggleHover }\r\n                    >\r\n                        <div className = \"ann-data\" style = { dataStyle }>\r\n                            <h5 data-testid = { 'title' } className = \"card-title\">\r\n                                { this.props.title }\r\n                            </h5>\r\n                            <p data-testid = { 'message' } className = \"card-text\">\r\n                                { this.props.message }\r\n                            </p>\r\n                        </div>\r\n                        { this.props.level >= 2\r\n                          &&\r\n                          <i data-testid = { 'minus' }\r\n                             className = \"fa fa-minus-circle ann-img\"\r\n                             style = { imgStyle }\r\n                          /> }\r\n                    </div>)\r\n                :\r\n                (\r\n                    this.props.level <= 1 ?\r\n                        <div className = \"ann-card-prompt\" />\r\n                        :\r\n                        <div className = \"ann-card\"\r\n                             onClick = { this.props.slickAdd }\r\n                        >\r\n                            <i data-testid = { 'plus' }\r\n                               className = \"fa fa-plus-circle ann-img-plus\"\r\n                            />\r\n                        </div>\r\n                )\r\n        );\r\n    }\r\n}\r\n\r\nexport default Announcement;","import React, {Component} from 'react';\r\nimport Slider             from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport '../assets/styles/AnnouncementsPublic.css';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\nimport Announcement       from './Announcement';\r\nimport AnnouncementModal  from './AnnouncementModal';\r\nimport Swal               from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport {\r\n  getPublicAnnouncements,\r\n  isAuthenticated,\r\n  removeAnnouncement,\r\n  addAnnouncement,\r\n}                         from '../../repository';\r\n\r\nclass AnnouncementsPublic extends Component {\r\n  _isMounted = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      announcements: [],\r\n      modal        : false,\r\n      level        : 0,\r\n    };\r\n    this.slickAdd = this.slickAdd.bind(this);\r\n    this.slickRemove = this.slickRemove.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  // need to see\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    let l = 0;\r\n    if (isAuthenticated()) {\r\n      const level = this.props.userLevel;\r\n      if (level === 'user') {\r\n        l = 1;\r\n      } else if (level === 'coach') {\r\n        l = 2;\r\n      } else if (level === 'admin') {\r\n        l = 3;\r\n      }\r\n    }\r\n    this.setState({level: l});\r\n\r\n    getPublicAnnouncements().then(response => {\r\n      if (this._isMounted) {\r\n        this.setState(\r\n            {announcements: response.data.announcements});\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  toggle = () => {\r\n    if (this.state.level <= 1) {\r\n      return;\r\n    }\r\n\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  slickAdd = async(Title, Message) => {\r\n    if (this.state.level <= 1) {\r\n      // Swal.fire(\r\n      //     'You are not authorized to do this!',\r\n      //     'Please log in and try again...',\r\n      //     'error',\r\n      // ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === '' || Message === '') {\r\n      Swal.fire(\r\n          'Please fill in all boxes',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let prev = this.state.announcements.length;\r\n    await addAnnouncement(Title, Message).then(response => {\r\n      let prevAnn = this.state.announcements.slice(0);\r\n      prevAnn.push(\r\n          {\r\n            ANNOUNCEMENT_ID: response.data.ANNOUNCEMENT_ID,\r\n            Title          : Title,\r\n            Message        : Message,\r\n          });\r\n      this.setState({announcements: prevAnn});\r\n    }).then(() => {\r\n      Swal.fire(\r\n          'Public Announcement added successfully',\r\n          '',\r\n          'success',\r\n      );\r\n      this.toggle();\r\n    }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ));\r\n    return (prev === (this.state.announcements.length - 1));\r\n  };\r\n\r\n  slickRemove = (ANNOUNCEMENT_ID) => {\r\n    if (this.state.level <= 1) {\r\n      // Swal.fire(\r\n      //     'You are not authorized to do this!',\r\n      //     'Please log in and try again...',\r\n      //     'error',\r\n      // ).then();\r\n      return;\r\n    }\r\n\r\n    Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        removeAnnouncement(ANNOUNCEMENT_ID).then(() => {\r\n          this.setState({\r\n            announcements: this.state.announcements.filter(\r\n                ann => ann.ANNOUNCEMENT_ID\r\n                       !== ANNOUNCEMENT_ID),\r\n          }, () => Swal.fire(\r\n              'Public Announcement deleted successfully',\r\n              '',\r\n              'success',\r\n          ));\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Public Announcement is safe :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const settings = {\r\n      dots          : true,\r\n      infinite      : false,\r\n      speed         : 300,\r\n      slidesToShow  : 4,\r\n      slidesToScroll: 4,\r\n      centerPadding : 0,\r\n      centerMode    : false,\r\n      responsive    : [\r\n        {\r\n          breakpoint: 1024,\r\n          settings  : {\r\n            slidesToShow  : 3,\r\n            slidesToScroll: 3,\r\n            infinite      : true,\r\n            dots          : true,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 800,\r\n          settings  : {\r\n            slidesToShow  : 2,\r\n            slidesToScroll: 2,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 600,\r\n          settings  : {\r\n            slidesToShow  : 1,\r\n            slidesToScroll: 1,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    return (\r\n        <div id = 'AnnouncementsPub'>\r\n          <AnimatedOnScroll animationIn = \"fadeInLeft\">\r\n            <div id = \"ann-container\"\r\n                 className = \"container-fluid mt-2\"\r\n            >\r\n              <h1 className = \"ann-title\">Announcements</h1>\r\n              <div className = \"row\">\r\n                <div className = \"col-lg-12\">\r\n                  <div className = \"ann-cards\">\r\n                    <Slider { ...settings }>\r\n                      {/*//need to see for public*/ }\r\n                      { this.state.announcements.sort(\r\n                          function(a, b) {\r\n                            return b.ANNOUNCEMENT_ID\r\n                                   - a.ANNOUNCEMENT_ID;\r\n                          }).map(ann => {\r\n                        return <Announcement key = { ann.ANNOUNCEMENT_ID }\r\n                                             isAdder = { false }\r\n                                             id = { ann.ANNOUNCEMENT_ID }\r\n                                             title = { ann.Title }\r\n                                             message = { ann.Message }\r\n                                             slickRemove = { this.slickRemove }\r\n                                             level = { this.state.level }\r\n                        />;\r\n                      }) }\r\n                      { this.state.announcements.length === 0\r\n                        &&\r\n                        <Announcement isAdder = { true }\r\n                                      id = { 0 }\r\n                                      slickAdd = { this.toggle }\r\n                                      level = { this.state.level }\r\n                        /> }\r\n                      { this.state.announcements.length <= 1\r\n                        &&\r\n                        <Announcement isAdder = { true }\r\n                                      id = { 0 }\r\n                                      slickAdd = { this.toggle }\r\n                                      level = { this.state.level }\r\n                        /> }\r\n                      { this.state.announcements.length <= 2\r\n                        &&\r\n                        <Announcement\r\n                            isAdder = { true }\r\n                            id = { 0 }\r\n                            slickAdd = { this.toggle }\r\n                            level = { this.state.level }\r\n                        /> }\r\n                      { this.state.level <= 1\r\n                        &&\r\n                        this.state.announcements.length <= 3\r\n                        &&\r\n                        <Announcement\r\n                            isAdder = { true }\r\n                            id = { 0 }\r\n                            slickAdd = { this.toggle }\r\n                            level = { this.state.level }\r\n                        /> }\r\n                      { this.state.level >= 2\r\n                        &&\r\n                        <Announcement isAdder = { true }\r\n                                      id = { 0 }\r\n                                      slickAdd = { this.toggle }\r\n                                      level = { this.state.level }\r\n                        /> }\r\n                    </Slider>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </AnimatedOnScroll>\r\n\r\n          <AnnouncementModal onSubmit = { this.slickAdd }\r\n                             toggle = { this.toggle }\r\n                             modal = { this.state.modal }\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnnouncementsPublic;","import React, {Component}                   from 'react';\r\n// Re-usable components\r\nimport CarouselHp                           from '../common/CarouselHP';\r\nimport Services                             from '../common/Services';\r\nimport logo_img\r\n                                            from '../assets/img/logos/fitnessFactoryLogo.png';\r\nimport AnnouncementsPublic\r\n                                            from '../common/AnnouncementsPublic';\r\nimport {loggedInVisit, updateHomePageVisit} from '../../repository';\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    loggedInVisit().then();\r\n    updateHomePageVisit().then();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <CarouselHp stylesheetData = { this.props.stylesheetData } />\r\n\r\n          <div id = \"author\">\r\n            <img src = { logo_img } alt = { 'author' } />\r\n          </div>\r\n\r\n          <Services stylesheetData = { this.props.stylesheetData } />\r\n\r\n          <AnnouncementsPublic userLevel = { this.props.userLevel } />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport '../assets/styles/About.css';\r\nimport {sendEmail}        from '../../repository';\r\nimport ButtonLoader       from './ButtonLoader';\r\nimport Swal               from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\n\r\nclass ContactUs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name   : '',\r\n      email  : '',\r\n      phone  : '',\r\n      message: '',\r\n      loading: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.value.match() != null) {\r\n      this.setState({[e.target.name]: e.target.value.trim()});\r\n    }\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(this.props.testSubmit) {\r\n      this.props.testSubmit('Testing');\r\n      return;\r\n    }\r\n\r\n    if (!(\r\n        this.state.name.match('[a-zA-Z ]+') &&\r\n        this.state.email.match('[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$') &&\r\n        this.state.phone.match('^ *[0-9]+.*') &&\r\n        this.state.message.match('^ *[a-zA-Z0-9]+.*'))) {\r\n      return;\r\n    }\r\n\r\n    this.setState({loading: true}, () => {\r\n      sendEmail(this.state)\r\n          .then((response) => {\r\n            if (response.status === 'success') {\r\n              Swal.fire(\r\n                  'Message sent successfully',\r\n                  'Check your email inbox for a confirmation.',\r\n                  'success',\r\n              ).then(() => window.location.reload());\r\n            } else {\r\n              Swal.fire(\r\n                  'Something went wrong',\r\n                  'Please try again...',\r\n                  'error',\r\n              ).then();\r\n            }\r\n          })\r\n          .then(() => this.setState({loading: false}))\r\n          .catch(() => Swal.fire(\r\n              'Something went wrong',\r\n              'Please try again...',\r\n              'error',\r\n              ).then(),\r\n          );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <section className = \"page-section\" id = \"contact\">\r\n          <div className = \"container-fluid\">\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12 text-center col-md-12 col-sm-12\">\r\n                <h1 className = \"section-heading\">\r\n                  Let's keep in touch\r\n                </h1>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-3\">\r\n                <h2>Contact Us</h2>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12 col-md-12 col-sm-12 text-center\">\r\n                <form\r\n                    className = \" needs-validation\"\r\n                    id = \"contactForm\"\r\n                    name = \"sentMessage\"\r\n                    // noValidate = \"novalidate\"\r\n                    onSubmit = { this.onSubmit }\r\n                >\r\n                  <div className = \"row mb-4\">\r\n                    <div className = \"col-md-6\">\r\n                      <div className = \"form-group\">\r\n                        <input\r\n                            className = \"form-control\"\r\n                            id = \"name\"\r\n                            name = \"name\"\r\n                            type = \"text\"\r\n                            placeholder = \"Name\"\r\n                            required = \"required\"\r\n                            pattern = \"[a-zA-Z ]+\"\r\n                            onChange = { this.handleChange }\r\n                        />\r\n                        <p className = \"help-block text-danger\" />\r\n                        <div\r\n                            className = \"colored invalid-feedback\"\r\n                        >\r\n                          Please enter your name!\r\n                        </div>\r\n                      </div>\r\n                      <div className = \"form-group\">\r\n                        <input\r\n                            className = \"form-control\"\r\n                            id = \"email\"\r\n                            name = \"email\"\r\n                            type = \"email\"\r\n                            placeholder = \"Email\"\r\n                            required = \"required\"\r\n                            pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                            onChange = { this.handleChange }\r\n                        />\r\n                        <p className = \"help-block text-danger\" />\r\n                        <div className = \"colored invalid-feedback\">\r\n                          Please enter a correct email!\r\n                        </div>\r\n                      </div>\r\n                      <div className = \"form-group\">\r\n                        <input\r\n                            className = \"form-control\"\r\n                            id = \"phone\"\r\n                            name = \"phone\"\r\n                            type = \"tel\"\r\n                            placeholder = \"Phone\"\r\n                            required = \"required\"\r\n                            pattern = \"^ *[0-9]+.*\"\r\n                            onChange = { this.handleChange }\r\n                        />\r\n                        <p className = \"help-block text-danger\" />\r\n                        <div className = \"colored invalid-feedback\">\r\n                          Please enter your phone!\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className = \"col-md-6\">\r\n                      <div className = \"form-group\">\r\n                                            <textarea\r\n                                                className = \"form-control\"\r\n                                                id = \"message\"\r\n                                                name = \"message\"\r\n                                                placeholder = \"Message\"\r\n                                                required = \"required\"\r\n                                                pattern = \"^ *[a-zA-Z0-9]+.*\"\r\n                                                onChange = { this.handleChange }\r\n                                            />\r\n                        <p className = \"help-block text-danger\" />\r\n                        <div\r\n                            className = \"colored invalid-feedback\"\r\n                        >\r\n                          Please enter your message!\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className = \"clearfix\" />\r\n                    <div className = \"col-lg-3 \">\r\n                      <div id = \"success\" />\r\n                      <ButtonLoader loading = { this.state.loading }\r\n                                    text = { 'Submit Message' }\r\n                                    loadingText = { 'Sending Message...' }\r\n                                    type = { 'submit' }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-6 col-md-12 col-sm-12\">\r\n                <h2>Contact Information</h2>\r\n                <p>\r\n                  { ' ' }\r\n                  Address: { this.props.contact.address }\r\n                  <br />\r\n                  Phone: { this.props.contact.phone }\r\n                  <br />\r\n                  Email: { this.props.contact.email }\r\n                  <br />\r\n                </p>\r\n                <br />\r\n                <p>\r\n                  <a href = { this.props.contact.facebook }>\r\n                    <i className = \"fa fa-facebook\" />\r\n                  </a>\r\n                  <a href = { this.props.contact.instagram }>\r\n                    <i className = \"fa fa-instagram\" />\r\n                  </a>\r\n                </p>\r\n              </div>\r\n              <div className = \"col-lg-6 col-md-12 col-sm-12 text-center\">\r\n                <div className = \"mapouter\">\r\n                  <div className = \"gmap_canvas\">\r\n                    <iframe\r\n                        title = \"gmap_canvas\"\r\n                        width = \"550\"\r\n                        height = \"400\"\r\n                        id = \"gmap_canvas\"\r\n                        src = \"https://maps.google.com/maps?q=fitness%20factory%20nicosia&t=&z=13&ie=UTF8&iwloc=&output=embed\"\r\n                        frameBorder = \"0\"\r\n                        scrolling = \"no\"\r\n                        marginHeight = \"0\"\r\n                        marginWidth = \"0\"\r\n                    />\r\n                    <a href = \"https://www.embedgooglemap.net/blog/divi-discount-code-elegant-themes-coupon/\">\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p />\r\n          </div>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactUs;\r\n","import React, {Component} from 'react';\r\nimport {validURL}         from '../../repository';\r\n\r\nclass TeamMember extends Component {\r\n  render() {\r\n    return (\r\n        <li className = { this.props.className }>\r\n          <div className = \"timeline-image\">\r\n            <img className = \"rounded-circle img-fluid\"\r\n                 src = { validURL(this.props.src)\r\n                     ? this.props.src\r\n                     : process.env.PUBLIC_URL + this.props.src }\r\n                 alt = \"\"\r\n            />\r\n          </div>\r\n          <div className = { this.props.right\r\n              ? 'timeline-panel timeline-panel-right'\r\n              : 'timeline-panel' }\r\n          >\r\n            <div className = \"timeline-heading\">\r\n              <h4>{ this.props.name }</h4>\r\n            </div>\r\n            <div className = \"timeline-body\">\r\n              <p className = \"text-muted\">{ this.props.text }</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamMember;","import React, {Component}   from 'react';\r\nimport '../assets/styles/coaches.css';\r\nimport TeamMember           from './TeamMember';\r\nimport {updateClassesVisit} from '../../repository';\r\n\r\nclass Team extends Component {\r\n  componentDidMount() {\r\n    updateClassesVisit().then();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <section className = \"page-section\" id = \"about\">\r\n          <div className = \"container-fluid\">\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12 text-center\">\r\n                <h2 id = \"test\" className = \"section-heading text-uppercase\">\r\n                  Our trainers\r\n                </h2>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12\">\r\n                <ul className = \"timeline\">\r\n\r\n                  { this.props.coaches.map((coach, index) => {\r\n                    return (<TeamMember\r\n                        right = {index % 2 === 1}\r\n                        key = { index }\r\n                        { ...coach }\r\n                    />);\r\n                  }) }\r\n\r\n                  <li className = \"timeline-inverted\">\r\n                    <div className = \"timeline-image\">\r\n                      <h4>Start\r\n                        <br />Your Journey\r\n                        <br />Now!</h4>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Team;","import React, {Component}                  from 'react';\r\n\r\nimport {loggedInVisit} from '../../repository';\r\nimport '../assets/styles/privacy.css'\r\n\r\nclass PrivacyPolicy extends Component {\r\n\r\n    componentDidMount() {\r\n        loggedInVisit().then();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id = { 'privacy-policy' }>\r\n                <h1>Privacy Policy of Fitness Factory Nicosia</h1>\r\n\r\n                <p>Fitness Factory Nicosia operates the <a href=\"http://cproject.in.cs.ucy.ac.cy/ffn_webapp/\">http://cproject.in.cs.ucy.ac.cy/ffn_webapp/</a> website.</p>\r\n\r\n                <p>This page is used to inform website visitors regarding our policies with the collection, use, and disclosure of Personal Information if anyone decided to use our Service, the Fitness Factory Nicosia website.</p>\r\n\r\n                <p>If you choose to use our Service, then you agree to the collection and use of information in relation with this policy. The Personal Information that we collect are used for providing and improving the Service. We will not use or share your information with anyone except as described in this Privacy Policy.</p>\r\n\r\n                <p>The terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, which is accessible at http://cproject.in.cs.ucy.ac.cy/ffn_webapp/, unless otherwise defined in this Privacy Policy. Our Privacy Policy was created with the help of the <a href=\"https://www.privacypolicytemplate.net\">Privacy Policy Template</a> and the <a href=\"https://www.privacy-policy-template.com/\">Online Privacy Policy Template</a>.</p>\r\n\r\n                <h2>Information Collection and Use</h2>\r\n\r\n                <p>For a better experience while using our Service, we may require you to provide us with certain personally identifiable information, including but not limited to your Name, Surname, Medical History, Phone Number, E-mai Address, Date of Birth, username and your Personal Schedule. The information that we collect will be used to contact or identify you.</p>\r\n\r\n                <h2>Log Data</h2>\r\n\r\n                <p>We want to inform you that whenever you visit our Service, we collect information that your browser sends to us that is called Log Data. This Log Data may include information such as your computer’s Internet Protocol (\"IP\") address, browser version, pages of our Service that you visit, the time and date of your visit, the time spent on those pages, and other statistics.</p>\r\n\r\n                <h2>Cookies</h2>\r\n\r\n                <p>Cookies are files with small amount of data that is commonly used an anonymous unique identifier. These are sent to your browser from the website that you visit and are stored on your computer’s hard drive.\r\n                Our website uses these \"cookies\" to collection information and to improve our Service.</p>\r\n\r\n                <p>For more general information on cookies, please read <a href=\"https://www.cookieconsent.com/what-are-cookies/\">\"What Are Cookies\"</a>.</p>\r\n\r\n                <h2>Service Providers</h2>\r\n\r\n                <p>We may employ third-party companies and individuals due to the following reasons:</p>\r\n\r\n                <ul>\r\n                    <li>To facilitate our Service;</li>\r\n                    <li>To provide the Service on our behalf;</li>\r\n                    <li>To perform Service-related services; or</li>\r\n                    <li>To assist us in analyzing how our Service is used.</li>\r\n                </ul>\r\n\r\n                <p>We want to inform our Service users that these third parties have access to your Personal Information. The reason is to perform the tasks assigned to them on our behalf. However, they are obligated not to disclose or use the information for any other purpose.</p>\r\n\r\n                <h2>Security</h2>\r\n\r\n                <p>We value your trust in providing us your Personal Information, thus we are striving to use commercially acceptable means of protecting it. But remember that no method of transmission over the internet, or method of electronic storage is 100% secure and reliable, and we cannot guarantee its absolute security.</p>\r\n\r\n                <h2>Links to Other Sites</h2>\r\n\r\n                <p>Our Service may contain links to other sites. If you click on a third-party link, you will be directed to that site. Note that these external sites are not operated by us. Therefore, we strongly advise you to review the Privacy Policy of these websites. We have no control over, and assume no responsibility for the content, privacy policies, or practices of any third-party sites or services.</p>\r\n\r\n                <h2>Children's Privacy</h2>\r\n\r\n                <p>Our Services do not address anyone under the age of 13. We do not knowingly collect personal identifiable information from children under 13. In the case we discover that a child under 13 has provided us with personal information, we immediately delete this from our servers. If you are a parent or guardian and you are aware that your child has provided us with personal information, please contact us so that we will be able to do necessary actions.</p>\r\n\r\n                <h2>Changes to This Privacy Policy</h2>\r\n\r\n                <p>We may update our Privacy Policy from time to time. Thus, we advise you to review this page periodically for any changes. We will notify you of any changes by posting the new Privacy Policy on this page. These changes are effective immediately, after they are posted on this page.</p>\r\n\r\n                <h2>Contact Us</h2>\r\n\r\n                <p>If you have any questions or suggestions about our Privacy Policy, do not hesitate to contact us.</p>\r\n                <p/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PrivacyPolicy;\r\n","import React, {Component}                  from 'react';\r\nimport ContactUs                           from '../common/ContactUs';\r\nimport Team                                from '../common/Team';\r\nimport {loggedInVisit, updateAboutUsVisit} from '../../repository';\r\nimport PrivacyPolicy                                from './PrivacyPolicy';\r\n\r\nclass AboutUs extends Component {\r\n    componentDidMount() {\r\n        loggedInVisit().then();\r\n        updateAboutUsVisit().then();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id = { 'about-us' }>\r\n                <Team coaches = { this.props.stylesheetData['About']['coach'] } />\r\n                <ContactUs contact = { this.props.stylesheetData['About']['contact'] } />\r\n                <PrivacyPolicy/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutUs;\r\n","import React, {Component} from 'react';\r\nimport '../assets/styles/PaymentStyle.css';\r\nimport jccLogo            from '../assets/img/logos/jccLogo.svg';\r\nimport paypalLogo         from '../assets/img/logos/paypalLogo.svg';\r\n\r\nclass PaymentModal extends Component {\r\n  onChange(value) {\r\n    console.log(value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div id = { 'payment-modal' } className = { 'text-center' }>\r\n\r\n          <div id = { 'subscription-options' }>\r\n            <h4>Subscription Options</h4>\r\n            <div className = \"option-group\">\r\n              <div className = \"option-container\">\r\n\r\n                <input className = \"option-input\"\r\n                       id = \"option-1\"\r\n                       type = \"radio\"\r\n                       name = \"options\"\r\n                       defaultChecked\r\n                />\r\n                <input className = \"option-input\"\r\n                       id = \"option-2\"\r\n                       type = \"radio\"\r\n                       name = \"options\"\r\n                />\r\n\r\n                <label className = \"option\" htmlFor = \"option-1\">\r\n                  <span className = \"option__indicator\" />\r\n                  <span className = \"option__label\">&euro;65<sub>per month</sub></span>\r\n                </label>\r\n\r\n                <label className = \"option\" htmlFor = \"option-2\">\r\n                  <span className = \"option__indicator\" />\r\n                  <span className = \"option__label\">&euro;160<sub>/ 3 months</sub></span>\r\n                </label>\r\n\r\n              </div>\r\n            </div>\r\n            <div className = \"option-group\">\r\n              <div className = \"option-container\">\r\n\r\n                <input className = \"option-input\"\r\n                       id = \"option-3\"\r\n                       type = \"radio\"\r\n                       name = \"options\"\r\n                />\r\n                <input className = \"option-input\"\r\n                       id = \"option-4\"\r\n                       type = \"radio\"\r\n                       name = \"options\"\r\n                />\r\n\r\n                <label className = \"option\" htmlFor = \"option-3\">\r\n                  <span className = \"option__indicator\" />\r\n                  <span className = \"option__label\">&euro;310<sub>/ 6 months</sub></span>\r\n                </label>\r\n\r\n                <label className = \"option\" htmlFor = \"option-4\">\r\n                  <span className = \"option__indicator\" />\r\n                  <span className = \"option__label\">&euro;590<sub>per year</sub></span>\r\n                </label>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div id = { 'payment-options' }>\r\n            <h4>Payment Options</h4>\r\n\r\n            <div className = \"container\">\r\n              <div className = \"row radio-tile-group justify-content-center\">\r\n\r\n                <div className = \"input-container\">\r\n                  <input id = \"walk\"\r\n                         className = \"radio-button\"\r\n                         type = \"radio\"\r\n                         name = \"radio\"\r\n                         defaultChecked\r\n                  />\r\n                  <div className = \"radio-tile\">\r\n                    <div className = \"icon walk-icon\">\r\n                      <img src = { jccLogo } alt = { 'JCC Logo' } />\r\n                    </div>\r\n                    <label htmlFor = \"walk\" className = \"radio-tile-label\" />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className = \"input-container\">\r\n                  <input id = \"bike\"\r\n                         className = \"radio-button\"\r\n                         type = \"radio\"\r\n                         name = \"radio\"\r\n                  />\r\n                  <div className = \"radio-tile\">\r\n                    <div className = \"icon bike-icon\">\r\n                      <img src = { paypalLogo } alt = { 'PayPal Logo' } />\r\n                    </div>\r\n                    <label htmlFor = \"bike\" className = \"radio-tile-label\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button id = \"CheckoutButton\" className = \"btn btn-primary disabled\"\r\n                  type = \"submit\" disabled\r\n          ><i className = \"fa fa-lock\" /> CHECKOUT\r\n            <span className = \"tooltiptext\">This feature is currently unavailable</span>\r\n          </button>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaymentModal;","import React, {Component} from 'react';\r\n\r\nclass Event extends Component {\r\n  render() {\r\n    return (\r\n        <div className = \"event_item\">\r\n          <div className = { 'ei_Dot ' + (this.props.active\r\n                                          && 'dot_active') }\r\n          />\r\n          <div className = \"ei_Title\">\r\n            { this.props.timeStart } { this.props.timeStart.split(':')[0] < 12\r\n              ? 'am' : 'pm' }\r\n          </div>\r\n          <div className = \"ei_Copy\">{ this.props.event }</div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, {Component} from 'react';\r\nimport '../assets/styles/EventsModal.css';\r\nimport Event              from './Event';\r\nimport {getEvents}        from '../../repository';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\nimport Spinner            from '../Spinner';\r\n\r\nclass EventsModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      events : [],\r\n      date   : '',\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const options = {\r\n      weekday: 'long',\r\n      year   : 'numeric',\r\n      month  : 'long',\r\n      day    : 'numeric',\r\n    };\r\n    const dateTimeFormat = new Intl.DateTimeFormat('en-GB', options);\r\n    this.setState({date: dateTimeFormat.format(new Date())});\r\n\r\n    getEvents().then(response => {\r\n      this.setState({events: response.events});\r\n    }).then(() => {\r\n      this.setState({loading: false});\r\n    }).catch();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div id = { 'EventsModal' } className={ 'eventClass'}>\r\n          { this.state.loading ?\r\n              <Spinner style = { {\r\n                'height'         : '250px',\r\n                'backgroundColor': 'transparent',\r\n              } }\r\n              />\r\n              :\r\n              <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                <div className = \"container\">\r\n                  <div className = \"calendar dark\">\r\n                    <div className = \"calendar_header\">\r\n                      <h1 className = \"header_title\">Welcome Back</h1>\r\n                      <p className = \"header_copy\"> Calendar Plan</p>\r\n                    </div>\r\n                    <div className = \"calendar_plan\">\r\n                      <div className = \"cl_plan\">\r\n                        <div className = \"cl_title\">Today</div>\r\n                        <div className = \"cl_copy\">{ this.state.date }</div>\r\n                        {/*<div class = \"cl_add\">*/ }\r\n                        {/*  <i class = \"fas fa-plus\"/>*/ }\r\n                        {/*</div>*/ }\r\n                      </div>\r\n                    </div>\r\n                    <div className = \"calendar_events\">\r\n                      <p className = \"ce_title\">Upcoming Events</p>\r\n                      { this.state.events.length === 0 ?\r\n                          <div style = { {'textAlign': 'center'} }>\r\n                            You have no training planned today.<br />\r\n                            Take the day off, you deserve it!\r\n                          </div>\r\n                          :\r\n                          this.state.events.map((event, index) => {\r\n                            const startSplit = event.timeStart.split(':');\r\n                            const start = parseInt(startSplit[0]) * 60\r\n                                          + parseInt(startSplit[1]);\r\n                            const now = new Date().getHours() * 60\r\n                                        + new Date().getMinutes();\r\n                            const end = start + 60;\r\n                            let active = false;\r\n                            if (start <= now && now <= end) {\r\n                              active = true;\r\n                            }\r\n                            return <Event key = { index } { ...event }\r\n                                          active = { active }\r\n                            />;\r\n                          })\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </AnimatedOnScroll>\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventsModal;","import React, {Component} from 'react';\r\nimport '../assets/styles/AnnouncmentsPrivate.css';\r\n\r\nclass AnnouncementCompPub extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {hover: false};\r\n    this.toggleHover = this.toggleHover.bind(this);\r\n  }\r\n\r\n  toggleHover = () => {\r\n    this.setState({hover: !this.state.hover});\r\n  };\r\n\r\n  render() {\r\n    let dataStyle;\r\n    let imgStyle;\r\n    if (this.props.level <= 1) {\r\n      dataStyle = {display: 'block'};\r\n      imgStyle = {display: 'none'};\r\n    }\r\n    return (\r\n        <div className = { 'ann-card' }\r\n             onMouseOver = { this.toggleHover }\r\n             onMouseOut = { this.toggleHover }\r\n             data-testid = { 'announcement' }\r\n        >\r\n          <div className = \"ann-data\" style = { dataStyle }>\r\n            <h5 data-testid = { 'title' } className = \"card-title\">\r\n              { this.props.title }\r\n            </h5>\r\n            <p data-testid = { 'message' } className = \"card-text\">\r\n              { this.props.message }\r\n            </p>\r\n          </div>\r\n          { this.props.level >= 2\r\n            &&\r\n            <i data-testid = { 'minus' }\r\n               className = \"fa fa-minus-circle ann-img\"\r\n               style = { imgStyle }\r\n            /> }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnnouncementCompPub;","import React, {Component}        from 'react';\r\nimport {AnimatedOnScroll}        from 'react-animated-css-onscroll';\r\nimport '../assets/styles/AnnouncmentsPrivate.css';\r\nimport AnnouncementCompPub       from './AnnouncementCompPub';\r\nimport {getPrivateAnnouncements} from '../../repository';\r\nimport Spinner                   from '../Spinner';\r\n\r\nclass AnnouncementsPrivate extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      announcements: [],\r\n      level        : -1,\r\n      loading      : true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({level: -1});\r\n\r\n    if (this.props.testLoading) {\r\n      this.setState({announcements: this.props.announcements, loading: false});\r\n    } else {\r\n      getPrivateAnnouncements().then(response => {\r\n        this.setState(\r\n            {announcements: response.data.announcements});\r\n      }).then(() => this.setState({loading: false}));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = \"Announcements\" id = \"AnnounceModal\">\r\n          { this.state.loading ?\r\n              <Spinner style = { {\r\n                'height'         : '250px',\r\n                'backgroundColor': 'transparent',\r\n              } }\r\n              /> :\r\n              <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                <div id = \"ann\" className = \"container mt-2\">\r\n                  { this.state.announcements.sort(\r\n                      function(a, b) {\r\n                        return b.ANNOUNCEMENT_ID\r\n                               - a.ANNOUNCEMENT_ID;\r\n                      }).map(ann => {\r\n                    return <AnnouncementCompPub key = { ann.ANNOUNCEMENT_ID }\r\n                                                id = { ann.ANNOUNCEMENT_ID }\r\n                                                title = { ann.Title }\r\n                                                message = { ann.Message }\r\n                                                level = { this.state.level }\r\n                    />;\r\n                  }) }\r\n                </div>\r\n              </AnimatedOnScroll>\r\n          }\r\n        </div>\r\n    )\r\n        ;\r\n  }\r\n}\r\n\r\nexport default AnnouncementsPrivate;","import React, {Component} from 'react';\r\n\r\nclass MessagesNewModalForm extends Component {\r\n    render() {\r\n        // noinspection JSUnresolvedVariable\r\n        return (\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"ann-modal-to\"\r\n                           className=\"col-form-label\"\r\n                           style={{color: '#D90429'}}\r\n                    >To:</label>\r\n                    <select id=\"ann-modal-to\"\r\n                            name=\"contact\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Select recipient...\"\r\n                            required\r\n                            onChange={this.props.handleChange}\r\n                    >\r\n                        <option value=''>\r\n                            Select recipient...\r\n                        </option>\r\n                        {this.props.recipients.map((rec, index) => {\r\n                            // noinspection JSUnresolvedVariable\r\n                            return <option key={index}\r\n                                           value={rec.AccountID}\r\n                            >\r\n                                {`${rec.CoachName} ${rec.Surname} - ${rec.level.toUpperCase()}`}\r\n                            </option>;\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"ann-modal-title\"\r\n                           className=\"col-form-label\"\r\n                           style={{color: '#D90429'}}\r\n                    >Title:</label>\r\n                    <input type=\"text\"\r\n                           className=\"form-control\"\r\n                           id=\"ann-modal-title\"\r\n                           placeholder=\"Enter a title...\"\r\n                           name=\"title\"\r\n                           value={this.props.title}\r\n                           required\r\n                           onChange={this.props.handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"ann-modal-message\"\r\n                           className=\"col-form-label\"\r\n                           style={{color: '#D90429'}}\r\n                    >Message:</label>\r\n                    <textarea className=\"form-control\"\r\n                              id=\"ann-modal-message\"\r\n                              placeholder=\"Enter a message...\"\r\n                              name=\"message\"\r\n                              value={this.props.message}\r\n                              required\r\n                              onChange={this.props.handleChange}\r\n                    />\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessagesNewModalForm;","import React, {Component} from 'react';\r\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\nimport MessagesNewModalForm from \"./MessagesNewModalForm\";\r\nimport Swal from \"sweetalert2\";\r\nimport {getCoaches} from \"../../repository\";\r\n\r\nclass MessagesNewModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            message: '',\r\n            recipients: [],\r\n            contact: '',\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        getCoaches().then(response => {\r\n            this.setState({recipients: response});\r\n        }).catch(err => alert(err));\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.title || !this.state.message || !this.state.contact) {\r\n            Swal.fire(\r\n                'Please fill in all boxes',\r\n                '',\r\n                'error',\r\n            ).then();\r\n            return;\r\n        }\r\n        this.props.onSubmit(e, this.state.title, this.state.message,\r\n            this.state.contact);\r\n        this.setState({title: '', message: '', contact: ''});\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            title: '',\r\n            message: '',\r\n            contact: '',\r\n        });\r\n        this.props.toggle();\r\n    };\r\n\r\n    render() {\r\n        // noinspection JSUnresolvedVariable\r\n        return (\r\n            <Modal isOpen={this.props.modal} toggle={this.toggle}\r\n                   size={'md'}\r\n                   aria-labelledby=\"contained-modal-title-vcenter\"\r\n                   centered\r\n            >\r\n                <ModalHeader toggle={this.toggle}>New Message</ModalHeader>\r\n                <ModalBody>\r\n                    <MessagesNewModalForm handleChange={this.handleChange} {...this.state} />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button onClick={this.toggle}>{this.props.btnCancel\r\n                    || 'Cancel'}</Button>\r\n                    <Button onClick={this.onSubmit}>{'Submit'}</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessagesNewModal;","import React, {Component} from 'react';\r\nimport '../assets/styles/MessagesModal.css';\r\nimport Message            from './Message';\r\nimport {\r\n  createNewMessage,\r\n  getMessages,\r\n  makeMessagesRead, userPicByUsername,\r\n}                         from '../../repository';\r\nimport MessageNewModal    from './MessageNewModal';\r\nimport Swal               from 'sweetalert2';\r\nimport Spinner            from '../Spinner';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\n\r\nclass MessagesModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      newModal: false,\r\n      loading : [true, true],\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onMessageSubmit = this.onMessageSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getMessages().then(response => {\r\n      this.setState({\r\n        messages: response.messages[0].sort(\r\n            function(a, b) {\r\n              // noinspection JSUnresolvedVariable\r\n              return b.Message_ID\r\n                     - a.Message_ID;\r\n            }),\r\n      });\r\n    }).then(() => {\r\n      let loading = this.state.loading;\r\n      loading[0] = false;\r\n      this.setState({loading});\r\n    }).catch(err => alert(err));\r\n\r\n    userPicByUsername()\r\n        .then(response => this.setState(response))\r\n        .then(() => {\r\n          let loading = this.state.loading;\r\n          loading[1] = false;\r\n          this.setState({loading});\r\n        });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.TotalMessages > 0) {\r\n      // noinspection JSUnresolvedVariable\r\n      const newMessages = this.state.messages.slice(0,\r\n          this.props.TotalMessages).map(msg => msg.Message_ID);\r\n      makeMessagesRead(newMessages).then(() => {\r\n        this.props.toggleTotalMessages();\r\n      }).catch(err => alert(err));\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({newModal: !this.state.newModal});\r\n  };\r\n\r\n  onMessageSubmit = (e, title, message, contact) => {\r\n    e.preventDefault();\r\n    createNewMessage({title, message, contact}).then(response => {\r\n      this.toggle();\r\n      let newArr = this.state.messages.slice(0);\r\n      newArr.unshift(response[0]);\r\n      this.setState({messages: newArr});\r\n      console.log(response);\r\n      if (response[0]) {\r\n        Swal.fire(\r\n            'Message sent successfully',\r\n            '',\r\n            'success',\r\n        ).then();\r\n      } else {\r\n        Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ).then();\r\n      }\r\n    }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ).then());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div id = { 'MessagesModal' }>\r\n          { this.state.loading.includes(true) ?\r\n              <Spinner style = { {\r\n                'height'         : '250px',\r\n                'backgroundColor': 'transparent',\r\n              } }\r\n              />\r\n              :\r\n              <>\r\n                <button className = { 'new-msg-btn btn btn-primary btn-xl text-uppercase' }\r\n                        onClick = { this.toggle }\r\n                >\r\n                  New Message\r\n                </button>\r\n                <div id = \"message-container\"\r\n                     className = \"container-fluid mt-2\"\r\n                >\r\n                  <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                    { this.state.messages.length === 0 &&\r\n                      <div style = { {textAlign: 'center'} }>\r\n                        <p>\r\n                          Your inbox is empty. Go ahead are send a message :)\r\n                        </p>\r\n                      </div>\r\n                    }\r\n                    { this.state.messages.map(\r\n                        (msg, index) => {\r\n                          // noinspection JSUnresolvedVariable\r\n                          const outgoing = this.props.userLevel\r\n                                           === msg.From_level;\r\n                          // noinspection JSUnresolvedVariable\r\n                          const toContact = `${ msg.To_Name } ${ msg.To_Surname } - ${ msg.To_level.toUpperCase() }`;\r\n                          // noinspection JSUnresolvedVariable\r\n                          const fromContact = `${ msg.From_Name } ${ msg.From_Surname } - ${ msg.From_level.toUpperCase() }`;\r\n                          const timestamp = msg.Timestamp.split(/[T.]+/)[0]\r\n                                            + ' '\r\n                                            + msg.Timestamp.split(/[T.]+/)[1];\r\n                          // noinspection JSUnresolvedVariable\r\n                          return (\r\n                              <div className = { 'messageDiv' } key = { index }>\r\n                                { this.props.TotalMessages > 0 &&\r\n                                  this.props.TotalMessages === index &&\r\n                                  < div className = 'new-msg-line'>\r\n                                    New Messages Above\r\n                                  </div> }\r\n                                <Message\r\n                                    key = { msg.Message_ID }\r\n                                    title = { msg.Title }\r\n                                    message = { msg.Message }\r\n                                    toContact = { toContact }\r\n                                    fromContact = { fromContact }\r\n                                    outgoing = { outgoing }\r\n                                    timestamp = { timestamp }\r\n                                    hasSeen = { msg.hasSeen }\r\n                                    image = { this.state.image }\r\n                                />\r\n                              </div>\r\n                          );\r\n                        })\r\n                    }\r\n                  </AnimatedOnScroll>\r\n                </div>\r\n              </>\r\n          }\r\n\r\n          <MessageNewModal onSubmit = { this.onMessageSubmit }\r\n                           toggle = { this.toggle }\r\n                           modal = { this.state.newModal }\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessagesModal;","import React, {Component} from 'react';\r\nimport ToggleModal        from './ToggleModal';\r\nimport PaymentModal       from './PaymentModal';\r\nimport EventsModal        from './EventsModal';\r\nimport {Button}           from 'reactstrap';\r\nimport AnnouncementsPrivate\r\n                          from './AnnouncementsPrivate';\r\nimport EditAccount        from './EditAccount';\r\nimport MessagesModal      from './MessagesModal';\r\nimport {\r\n  getEventsTotal,\r\n  getTotalMessages,\r\n  getTotalPrivateAnnouncements,\r\n}                         from '../../repository';\r\n\r\nclass SettingsProfile extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      modalPayment       : false,\r\n      modalAnnouncements : false,\r\n      modalAnnouncements2: false,\r\n      modalMessages      : false,\r\n      modalEditAccount   : false,\r\n      modalEvents        : false,\r\n      TotalMessages      : 0,\r\n      TotalAnnouncement  : 0,\r\n      TotalEvents        : 0,\r\n      sevenDaysLeft      : 0,\r\n      open               : false,\r\n      classes            : [],\r\n      dataPT             : [],\r\n    };\r\n    this.togglePayment = this.togglePayment.bind(this);\r\n    this.toggleAnnouncements = this.toggleAnnouncements.bind(this);\r\n    this.toggleAnnouncements2 = this.toggleAnnouncements2.bind(this);\r\n    this.toggleTotalMessages = this.toggleTotalMessages.bind(this);\r\n    this.toggleEvents = this.toggleEvents.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.toggleTotalEvents = this.toggleTotalEvents.bind(this);\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({open: !this.state.open});\r\n  };\r\n  togglePayment = () => {\r\n    this.setState({modalPayment: !this.state.modalPayment});\r\n  };\r\n  toggleEvents = () => {\r\n    this.setState({modalEvents: !this.state.modalEvents});\r\n  };\r\n  toggleTotalMessages = () => {\r\n    this.setState({TotalMessages: 0});\r\n  };\r\n  toggleTotalEvents = () => {\r\n    this.setState({TotalEvents: 0});\r\n  };\r\n  toggleAnnouncements = () => {\r\n    this.setState({modalAnnouncements: !this.state.modalAnnouncements});\r\n  };\r\n  toggleAnnouncements2 = () => {\r\n    this.setState({modalAnnouncements2: !this.state.modalAnnouncements2});\r\n  };\r\n  toggleEditAccount = () => {\r\n    this.setState({modalEditAccount: !this.state.modalEditAccount});\r\n  };\r\n  toggleMessages = () => {\r\n    this.setState({modalMessages: !this.state.modalMessages});\r\n  };\r\n\r\n  componentDidMount() {\r\n    getTotalPrivateAnnouncements().then(response => {\r\n      // noinspection JSUnresolvedVariable\r\n      this.setState(\r\n          {TotalAnnouncement: response.TotalAnnouncement.Count});\r\n    });\r\n\r\n    getTotalMessages().then(response => {\r\n      this.setState(\r\n          {TotalMessages: response.TotalMessages});\r\n    });\r\n\r\n    getEventsTotal().then(response => {\r\n      this.setState({TotalEvents: response.total});\r\n    }).catch();\r\n\r\n  }\r\n\r\n  //Testing\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.classes !== this.props.classes || prevProps.dataPT\r\n        !== this.props.dataPT) {\r\n      (async() => {\r\n        await this.setState(\r\n            {dataPT: this.props.dataPT, classes: this.props.classes});\r\n      })();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        /**  <>\r\n         <Popup\r\n         open = { this.state.open }\r\n         closeOnDocumentClick\r\n         onClose = { this.toggleModal }\r\n         modal\r\n         >\r\n         <div style={{backgroundColor: 'red'}}>\r\n         Your active subscription expires in less than 7 days.\r\n         <br />\r\n         If you would like to renew your subscription please click here.\r\n         </div>\r\n         </Popup>**/\r\n        <div className = \"col-lg-4 col-md-12 col-sm-12\">\r\n          <div className = \"menu-box block\" id = \"leftBlock\">\r\n            <div className = \"titular\">Settings</div>\r\n            <ul className = \"menu-box-menu\">\r\n              {/* Remember to add onClick to new modals on buttons */ }\r\n              <li>\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleMessages }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-envelope\" /> Messages\r\n                  { this.state.TotalMessages > 0 &&\r\n                    <div className = \"menu-box-number\">{ this.state.TotalMessages }</div> }\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalMessages }\r\n                    toggle = { this.toggleMessages }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Messages' }\r\n                    modalBody = {\r\n                      <MessagesModal userLevel = { this.props.userLevel }\r\n                                     TotalMessages = { this.state.TotalMessages }\r\n                                     toggleTotalMessages = { this.toggleTotalMessages }\r\n                      /> }\r\n                />\r\n              </li>\r\n              <li>\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.togglePayment }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-credit-card\"><span\r\n                      style = { {color: 'white'} }\r\n                  >Membership</span></i>\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalPayment }\r\n                    toggle = { this.togglePayment }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Payment' }\r\n                    modalBody = { <PaymentModal /> }\r\n                />\r\n              </li>\r\n              <li>\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleEvents }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-calendar\" /> Events\r\n                  { this.state.TotalEvents > 0 &&\r\n                    <div className = \"menu-box-number\">{ this.state.TotalEvents }</div> }\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalEvents }\r\n                    toggle = { this.toggleEvents }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Events' }\r\n                    modalBody = {\r\n                      <EventsModal userLevel = { this.props.userLevel }\r\n                                   TotalEvents = { this.state.TotalEvents }\r\n                      /> }\r\n                />\r\n              </li>\r\n              <li>\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleAnnouncements }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-tasks\" /> Announcements\r\n                  <div className = \"menu-box-number\">{ this.state.TotalAnnouncement }</div>\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalAnnouncements }\r\n                    toggle = { this.toggleAnnouncements }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Announcements' }\r\n                    modalBody = { <AnnouncementsPrivate /> }\r\n                />\r\n              </li>\r\n              <li id = \"editAccount\">\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleEditAccount }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-user\" /> Edit Account\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalEditAccount }\r\n                    toggle = { this.toggleEditAccount }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Edit Account' }\r\n                    modalBody = { <EditAccount dataPT = { this.state.dataPT }\r\n                                               classes = { this.state.classes }\r\n                                               toggle = { this.toggleEditAccount }\r\n                                               changeAvatar = { this.props.changeAvatar }\r\n                    /> }\r\n                />\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        /**  </>**/\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default SettingsProfile;","import React, {Component} from 'react';\r\n\r\nclass GeneralScheduleModalBody extends Component {\r\n  render() {\r\n    return (\r\n        <img src = { process.env.PUBLIC_URL + '/img/classes/timetable-new.png' }\r\n             alt = \"timetable\"\r\n             width = \"100%\"\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GeneralScheduleModalBody;","import React, {Component}       from 'react';\r\nimport '../assets/styles/BookDropdown.css';\r\nimport {getClasses}             from '../../repository';\r\nimport {getClassDay}            from '../../repository';\r\nimport {getClassTime}           from '../../repository';\r\nimport {getClassCoach}          from '../../repository';\r\nimport {getClassID}             from '../../repository';\r\nimport {getUserID}              from '../../repository';\r\nimport ToggleModal              from './ToggleModal';\r\nimport GeneralScheduleModalBody from './GeneralScheduleModalBody';\r\nimport Swal                     from 'sweetalert2';\r\n\r\nclass BookClass extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      User_ID      : '',\r\n      Name         : [],\r\n      Day          : [],\r\n      Time         : [],\r\n      CoachName    : [],\r\n      SelectedClass: 'Select...',\r\n      SelectedDay  : 'Select...',\r\n      SelectedTime : 'Select...',\r\n      SelectedCoach: 'Select...',\r\n      ClassID      : '',\r\n      DayCode      : '',\r\n      TimeCode     : '',\r\n      flag         : false,\r\n      invalid      : true,\r\n      classSchedule: [],\r\n      modalGeneral : false,\r\n    };\r\n    this.handleClass = this.handleClass.bind(this);\r\n    this.handleDay = this.handleDay.bind(this);\r\n    this.handleTime = this.handleTime.bind(this);\r\n    this.handleCoach = this.handleCoach.bind(this);\r\n    this.toggleModalGeneral = this.toggleModalGeneral.bind(this);\r\n\r\n  }\r\n\r\n  toggleModalGeneral = (e) => {\r\n    e.preventDefault();\r\n    this.setState({modalGeneral: !this.state.modalGeneral});\r\n  };\r\n\r\n  handleClass = (e) => {\r\n    if (this.props.testLoading) {\r\n      return;\r\n    }\r\n    this.setState(\r\n        {[e.target.name]: e.target.value === 'Select...' ? '' : e.target.value},\r\n        () => {\r\n          this.setState({Day: this.state.Day !== null ? [] : this.state.Day},\r\n              () => {\r\n                this.setState(\r\n                    {Time: this.state.Time !== null ? [] : this.state.Time},\r\n                    () => {\r\n                      this.setState({\r\n                        CoachName: this.state.CoachName !== null\r\n                            ? []\r\n                            : this.state.CoachName,\r\n                      }, () => {\r\n                        getClassDay(this.state.SelectedClass).then(response => {\r\n                          this.setState({Day: response}, () => {\r\n                            console.clear();\r\n                          });\r\n                        });\r\n                      });\r\n                    });\r\n              });\r\n        });\r\n  };\r\n\r\n  handleDay = (e) => {\r\n    if (this.props.testLoading) {\r\n      return;\r\n    }\r\n    this.setState(\r\n        {[e.target.name]: e.target.value === 'Select...' ? '' : e.target.value},\r\n        () => {\r\n          this.setState({Time: []}, () => {\r\n            this.setState({CoachName: []}, () => {\r\n              getClassTime(this.state.SelectedClass, this.state.SelectedDay)\r\n                  .then(response => {\r\n                    this.setState({Time: response}, () => {\r\n                      if (this.state.SelectedDay === 'Monday') {\r\n                        this.setState({DayCode: 1});\r\n                      } else if (this.state.SelectedDay === 'Tuesday') {\r\n                        this.setState({DayCode: 2});\r\n                      } else if (this.state.SelectedDay === 'Wednesday') {\r\n                        this.setState({DayCode: 3});\r\n                      } else if (this.state.SelectedDay === 'Thursday') {\r\n                        this.setState({DayCode: 4});\r\n                      } else if (this.state.SelectedDay === 'Friday') {\r\n                        this.setState({DayCode: 5});\r\n                      } else if (this.state.SelectedDay === 'Saturday') {\r\n                        this.setState({DayCode: 6});\r\n                      } else if (this.state.SelectedDay === 'Sunday') {\r\n                        this.setState({DayCode: 7});\r\n                      }\r\n                    });\r\n                  });\r\n            });\r\n          });\r\n        });\r\n  };\r\n\r\n  handleTime = (e) => {\r\n    if (this.props.testLoading) {\r\n      return;\r\n    }\r\n    this.setState(\r\n        {[e.target.name]: e.target.value === 'Select...' ? '' : e.target.value},\r\n        () => {\r\n          this.setState({CoachName: []}, () => {\r\n            getClassCoach(this.state.SelectedClass, this.state.SelectedDay,\r\n                this.state.SelectedTime).then(response => {\r\n              this.setState({CoachName: response}, () => {\r\n                if (this.state.SelectedTime === '08:00:00') {\r\n                  this.setState({TimeCode: 1});\r\n                } else if (this.state.SelectedTime === '09:00:00') {\r\n                  this.setState({TimeCode: 2});\r\n                } else if (this.state.SelectedTime === '10:00:00') {\r\n                  this.setState({TimeCode: 3});\r\n                } else if (this.state.SelectedTime === '11:00:00') {\r\n                  this.setState({TimeCode: 4});\r\n                } else if (this.state.SelectedTime === '12:00:00') {\r\n                  this.setState({TimeCode: 5});\r\n                } else if (this.state.SelectedTime === '13:00:00') {\r\n                  this.setState({TimeCode: 6});\r\n                } else if (this.state.SelectedTime === '14:00:00') {\r\n                  this.setState({TimeCode: 7});\r\n                } else if (this.state.SelectedTime === '15:00:00') {\r\n                  this.setState({TimeCode: 8});\r\n                } else if (this.state.SelectedTime === '16:00:00') {\r\n                  this.setState({TimeCode: 9});\r\n                } else if (this.state.SelectedTime === '17:00:00') {\r\n                  this.setState({TimeCode: 10});\r\n                } else if (this.state.SelectedTime === '18:00:00') {\r\n                  this.setState({TimeCode: 11});\r\n                } else if (this.state.SelectedTime === '19:00:00') {\r\n                  this.setState({TimeCode: 12});\r\n                }\r\n              });\r\n            });\r\n          });\r\n        });\r\n  };\r\n\r\n  handleCoach = (e) => {\r\n    if (this.props.testLoading) {\r\n      return;\r\n    }\r\n    this.setState(\r\n        {[e.target.name]: e.target.value === 'Select...' ? '' : e.target.value},\r\n        () => {\r\n          getClassID(this.state.SelectedClass, this.state.SelectedDay,\r\n              this.state.SelectedTime, this.state.SelectedCoach)\r\n              .then(response => {\r\n                this.setState({ClassID: response.data.ClassID.ClassID}, () => {\r\n                });\r\n              });\r\n        });\r\n\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.Day.length === 0 ||\r\n        this.state.Name.length === 0 ||\r\n        this.state.Time.length === 0 ||\r\n        this.state.CoachName.length === 0) {\r\n      Swal.fire(\r\n          'Required selections are empty',\r\n          'Make sure that you have filled every selection first!',\r\n          'error',\r\n      ).then();\r\n    } else {\r\n      this.setState({flag: true, invalid: false}, () => {\r\n        this.props.getSelections(\r\n            this.state.DayCode,\r\n            this.state.TimeCode,\r\n            true,\r\n            this.state.ClassID,\r\n            this.state.SelectedClass,\r\n            false,\r\n        );\r\n      });\r\n    }\r\n    this.setState({Name: []}, () => {\r\n      this.setState({Day: []}, () => {\r\n        this.setState({Time: []}, () => {\r\n          this.setState({CoachName: []}, () => {\r\n            getClasses().then(response => {\r\n              this.setState({Name: response});\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  onDelete = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.Day.length === 0 ||\r\n        this.state.Name.length === 0 ||\r\n        this.state.Time.length === 0 ||\r\n        this.state.CoachName.length === 0) {\r\n      Swal.fire(\r\n          'Required selections are empty',\r\n          'Make sure that you have filled every selection first!',\r\n          'error',\r\n      ).then();\r\n    } else {\r\n      this.setState({flag: false, invalid: false}, () => {\r\n        this.props.getSelections(\r\n            this.state.DayCode,\r\n            this.state.TimeCode,\r\n            false,\r\n            this.state.ClassID,\r\n            this.state.SelectedClass,\r\n            false,\r\n        );\r\n      });\r\n    }\r\n    this.setState({Name: []}, () => {\r\n      this.setState({Day: []}, () => {\r\n        this.setState({Time: []}, () => {\r\n          this.setState({CoachName: []}, () => {\r\n            getClasses().then(response => {\r\n              this.setState({Name: response});\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  //\r\n  componentDidMount() {\r\n    if (this.props.testLoading) {\r\n      this.setState({\r\n        Name     : this.props.data.Name,\r\n        Day      : this.props.data.Day,\r\n        Time     : this.props.data.Time,\r\n        CoachName: this.props.data.CoachName,\r\n      });\r\n    } else {\r\n      getUserID()\r\n          .then(response => {\r\n            this.setState(\r\n                {User_ID: response.User_ID}, () => {\r\n                });\r\n            getClasses().then(response => {\r\n              this.setState({Name: response});\r\n            });\r\n          });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = \"col-lg-4 col-md-12 col-sm-12\">\r\n          <form className = \"form\" id = \"backBox\">\r\n            <h3 id = \"bmiHeading\"><b>E</b>nroll <b>T</b>o <b>C</b>lass</h3>\r\n\r\n            <div className = \"row\" id = \"first-row\">\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <label htmlFor = \"DropClass\">Class:</label>\r\n                <select className = \"form-control\"\r\n                        id = \"DropDays\"\r\n                        name = \"SelectedClass\"\r\n                        onChange = { this.handleClass }\r\n                        data-testid = { 'class-select' }\r\n                >\r\n                  <option>Select...</option>\r\n                  { this.state.Name.map((res, index) => {\r\n                    return <option value = { res.Name } key = { index }>\r\n                      { res.Name }\r\n                    </option>;\r\n                  })\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <label htmlFor = \"DropDays\">Day:</label>\r\n                <select className = \"form-control\"\r\n                        id = \"DropDays\"\r\n                        name = \"SelectedDay\"\r\n                        onChange = { this.handleDay }\r\n                        data-testid = { 'day-select' }\r\n                >\r\n                  <option>Select...</option>\r\n                  { this.state.Day.map((res, index) => {\r\n                    return <option value = { res.Day } key = { index }>\r\n                      { res.Day }\r\n                    </option>;\r\n                  })\r\n                  }\r\n                </select>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className = \"row\" id = \"first-row\">\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <label htmlFor = \"DropDays\">Time:</label>\r\n                <select className = \"form-control\"\r\n                        id = \"DropDays\"\r\n                        name = \"SelectedTime\"\r\n                        onChange = { this.handleTime }\r\n                        data-testid = { 'time-select' }\r\n                >\r\n                  <option>Select...</option>\r\n                  { this.state.Time.map((res, index) => {\r\n                    return <option value = { res.Time } key = { index }>\r\n                      { res.Time }\r\n                    </option>;\r\n                  })\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <label htmlFor = \"DropClass\">Coach:</label>\r\n                <select className = \"form-control\"\r\n                        id = \"DropDays\"\r\n                        name = \"SelectedCoach\"\r\n                        onChange = { this.handleCoach }\r\n                        data-testid = { 'coach-select' }\r\n                >\r\n                  <option>Select...</option>\r\n                  { this.state.CoachName.map((res, index) => {\r\n                    return <option value = { res.CoachName } key = { index }>\r\n                      { res.CoachName }\r\n                    </option>;\r\n                  })\r\n                  }\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <button type = \"\"\r\n                        className = \"RowButton\"\r\n                        onClick = { this.onSubmit }\r\n                >Enroll\r\n                </button>\r\n              </div>\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <button type = \"button-important\"\r\n                        className = \"RowButton\"\r\n                        onClick = { this.onDelete }\r\n                >Unenroll\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-md-12 RowBlock\"\r\n                   style = { {'paddingBottom': '0px'} }\r\n              >\r\n                <button type = \"button-important\"\r\n                        className = \"RowButton\"\r\n                        onClick = { this.toggleModalGeneral }\r\n                >View General Schedule\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n            <ToggleModal\r\n                modal = { this.state.modalGeneral }\r\n                toggle = { this.toggleModalGeneral }\r\n                modalSize = { 'lg' }\r\n                modalHeader = { 'General Gym Schedule' }\r\n                modalBody = { <GeneralScheduleModalBody /> }\r\n            />\r\n          </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookClass;","import React, {Component} from 'react';\r\nimport '../assets/styles/PersonalTrainingTimetable.css';\r\nimport {\r\n  // getClasses,\r\n  // getPersonalTraining,\r\n  getUserID,\r\n  // insertPT,\r\n  // postuserData,\r\n  getClassSchedule,\r\n  // getClassName,\r\n  getPersonalSchedule,\r\n  enrollUser,\r\n  unenrollUser,\r\n}                         from '../../repository';\r\nimport Swal               from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\n\r\nclass EnrolledClassSchedule extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n    this.state = {\r\n      refID              : '',\r\n      refIDs             : [],\r\n      ptIDs              : [],\r\n      trainingScheduleRet: [],\r\n      flag               : false,\r\n      Coach_ID           : '',\r\n      User_ID            : '',\r\n      classSchedule      : [],\r\n      personalSchedule   : [],\r\n      cIDs               : [],\r\n      pIDs               : [],\r\n      cNames             : [],\r\n      pNames             : [],\r\n      ClassID            : '',\r\n      Name               : '',\r\n      ClassColors        : [\r\n        '#812029',\r\n        '#1A63D9',\r\n        '#CF1B1B',\r\n        '#FFAD1F',\r\n        '#704585',\r\n        '#53878C',\r\n        '#C97200',\r\n        '#489655',\r\n        '#158CA3',\r\n        '#9E134B',\r\n      ],\r\n\r\n    };\r\n    this.StateSetter = this.StateSetter.bind(this);\r\n    this.StateSetterPT = this.StateSetterPT.bind(this);\r\n    this.ColorLuminance = this.ColorLuminance.bind(this);\r\n  }\r\n\r\n  // noinspection DuplicatedCode\r\n  ColorLuminance = (hex, lum) => {\r\n\r\n    // validate hex string\r\n    hex = String(hex).replace(/[^0-9a-f]/gi, '');\r\n    if (hex.length < 6) {\r\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    lum = lum || 0;\r\n\r\n    // convert to decimal and change luminosity\r\n    let rgb = '#', c, i;\r\n    for (i = 0; i < 3; i++) {\r\n      c = parseInt(hex.substr(i * 2, 2), 16);\r\n      c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n      rgb += ('00' + c).substr(c.length);\r\n    }\r\n    return rgb;\r\n  };\r\n\r\n  StateSetter(x, y, z) {\r\n    this.setState({refIDs: x}, () => {\r\n      this.setState({cIDs: y}, () => {\r\n        this.setState({cNames: z}, () => {\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  StateSetterPT(x, y, z) {\r\n    this.setState({ptIDs: x}, () => {\r\n      this.setState({pIDs: y}, () => {\r\n        this.setState({pNames: z}, () => {\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let dataClasses = [];\r\n    let dataPT = [];\r\n    getUserID().then(response => {\r\n      this.setState(\r\n          {User_ID: response.User_ID}, () => {\r\n\r\n            // Gets the Class Name, ID, TimeCode and DayCode Based on the\r\n            // user's ID  console.clear();\r\n            getClassSchedule(this.state.User_ID).then(response => {\r\n              this.setState({classSchedule: response}, () => {\r\n                dataClasses = [...this.state.classSchedule];\r\n                let ret = this.state.classSchedule.slice(0);\r\n                let refID;\r\n\r\n                (async() => {\r\n                  let x = this.state.refIDs;\r\n                  let y = this.state.cIDs;\r\n                  let z = this.state.cNames;\r\n                  ret.forEach((item) => {\r\n                        if (item.TimeCode < 10) {\r\n                          this.setState(\r\n                              {refID: item.DayCode + '.0' + item.TimeCode});\r\n                          refID = item.DayCode + '.0' + item.TimeCode;\r\n                        } else {\r\n                          this.setState(\r\n                              {refID: item.DayCode + '.' + item.TimeCode});\r\n                          refID = item.DayCode + '.' + item.TimeCode;\r\n                        }\r\n                        // noinspection DuplicatedCode\r\n                        if (!x.includes(refID)) {\r\n                          x.push(refID);\r\n                          y.push(item.ClassID);\r\n                          z.push(item.Name);\r\n                          const node = document.getElementById(refID);\r\n                          node.className = 'BusySlot';\r\n                          node.childNodes[0].textContent = item.Name;\r\n                          if (z.includes(item.Name)) {\r\n                            node.style.backgroundImage =\r\n                                'linear-gradient(to bottom right,'\r\n                                + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                                item.Name)] % 9] + ','\r\n                                + this.ColorLuminance(\r\n                                this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                    item.Name)]) % 9], -0.5) + ')';\r\n                          } else {\r\n                            node.style.backgroundImage =\r\n                                'linear-gradient(to bottom right,'\r\n                                + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                                item.Name)] % 9] + ','\r\n                                + this.ColorLuminance(\r\n                                this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                    item.Name)]) % 9], -0.5) + ')';\r\n                          }\r\n                        }\r\n                      },\r\n                  );\r\n                  await this.StateSetter(x, y, z);\r\n                })();\r\n              });\r\n            });\r\n\r\n            getPersonalSchedule(this.state.User_ID).then(response => {\r\n              this.setState({personalSchedule: response}, () => {\r\n                dataPT = [...this.state.personalSchedule];\r\n                this.props.userSchedule(dataClasses, dataPT);\r\n                let retPer = this.state.personalSchedule.slice(0);\r\n                let refID;\r\n\r\n                (async() => {\r\n                  let x = this.state.ptIDs;\r\n                  let y = this.state.pIDs;\r\n                  let z = this.state.pNames;\r\n                  retPer.forEach((item) => {\r\n                        if (item.Time < 10) {\r\n                          this.setState({refID: item.Day + '.0' + item.Time});\r\n                          refID = item.Day + '.0' + item.Time;\r\n                        } else {\r\n                          this.setState({refID: item.Day + '.' + item.Time});\r\n                          refID = item.Day + '.' + item.Time;\r\n                        }\r\n                        if (!x.includes(refID)) {\r\n                          x.push(refID);\r\n                          y.push(item.Coach_ID);\r\n                          z.push(item.CoachName);\r\n                          const node = document.getElementById(refID);\r\n                          node.className = 'PTSlot';\r\n                          node.childNodes[0].textContent = item.CoachName;\r\n                          node.style.backgroundImage = 'radial-gradient( #4c4c4c,'\r\n                                                       + this.ColorLuminance(\r\n                                  '#4C4C4C', -0.7) + ')';\r\n                        }\r\n                      },\r\n                  );\r\n                  await this.StateSetterPT(x, y, z);\r\n                })();\r\n              });\r\n            });\r\n\r\n          });\r\n    }).finally(() => this.props.toggleLoading());\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (\r\n        prevProps.DayCode !== this.props.DayCode\r\n        || prevProps.TimeCode !== this.props.TimeCode\r\n        || prevProps.flag !== this.props.flag\r\n    ) {\r\n\r\n      let refID;\r\n      if (this.props.TimeCode < 10) {\r\n        this.setState({refID: this.props.DayCode + '.0' + this.props.TimeCode});\r\n        refID = this.props.DayCode + '.0' + this.props.TimeCode;\r\n      } else {\r\n        this.setState({refID: this.props.DayCode + '.' + this.props.TimeCode});\r\n        refID = this.props.DayCode + '.' + this.props.TimeCode;\r\n      }\r\n\r\n      this.setState({flag: this.props.flag});\r\n      // Create a new array based on current state:\r\n      let x = this.state.refIDs.slice(0);\r\n      let y = this.state.cIDs.slice(0);\r\n      let z = this.state.cNames.slice(0);\r\n      let p = this.state.ptIDs.slice(0);\r\n\r\n      //Checks if the user wants to enroll or unenroll. Flag is true for enroll\r\n      // and false otherwise.\r\n      if (this.props.flag === true) {\r\n        if (this.props.invalid === true) {\r\n          Swal.fire(\r\n              'Please select a user first!',\r\n              '',\r\n              'error',\r\n          ).then();\r\n        } else {\r\n          //Checks if there is not any personal training or class scehduled for\r\n          // the user at that specific time\r\n          if (!p.includes(refID) && !x.includes(refID)) {\r\n            (async() => {\r\n\r\n              //Copies the tables for the Class timetable entries, Class ID's\r\n              // and Class names into temporary ones.\r\n              x.push(refID);\r\n              y.push(this.props.ClassID);\r\n              z.push(this.props.Name);\r\n\r\n              //waiting to copy all the tables before proceeding\r\n              await this.StateSetter(x, y, z);\r\n\r\n              //node is the div element containing the specified Class\r\n              // enrollment\r\n              const node = document.getElementById(refID);\r\n\r\n              //Sets that timetable entry as \"enrolled\"\r\n              node.className = 'BusySlot';\r\n              node.childNodes[0].textContent = this.props.Name;\r\n              if (z.includes(this.props.Name)) {\r\n                // node.style.backgroundColor =\r\n                // this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(item.Name)]];\r\n                node.style.backgroundImage = 'linear-gradient(to bottom right,'\r\n                                             + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                        this.props.Name)] % 9] + ','\r\n                                             + this.ColorLuminance(\r\n                        this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                            this.props.Name)]) % 9], -0.5) + ')';\r\n              } else {\r\n                // node.style.backgroundColor =\r\n                // this.state.ClassColors[item.ClassID];\r\n                node.style.backgroundImage = 'linear-gradient(to bottom right,'\r\n                                             + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                        this.props.Name)] % 9] + ','\r\n                                             + this.ColorLuminance(\r\n                        this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                            this.props.Name)]) % 9], -0.5) + ')';\r\n              }\r\n              enrollUser(this.state.cIDs[this.state.refIDs.indexOf(refID)],\r\n                  this.state.User_ID).then();\r\n            })();\r\n\r\n            // })();\r\n          } else {\r\n            Swal.fire(\r\n                'You have something else scheduled for that time',\r\n                '',\r\n                'error',\r\n            ).then();\r\n          }\r\n        }\r\n\r\n      } else {\r\n        if (this.props.flag === false) {\r\n          if (!p.includes(refID)) {\r\n            if (x.includes(refID)) {\r\n              if (this.props.ClassID\r\n                  === this.state.cIDs[this.state.refIDs.indexOf(refID)]) {\r\n                // console.clear();\r\n                (async() => {\r\n\r\n                  //wait to unenroll first and then remove the entries from the\r\n                  // arrays\r\n                  await unenrollUser(\r\n                      this.state.cIDs[this.state.refIDs.indexOf(refID)],\r\n                      this.state.User_ID,\r\n                  ).then();\r\n\r\n                  //Copy of timetable Class entry array\r\n                  const newList = this.state.refIDs.slice(0);\r\n                  newList.splice(this.state.refIDs.indexOf(refID), 1);\r\n\r\n                  //Copy of Class ID's array\r\n                  const newList2 = this.state.cIDs.slice(0);\r\n                  newList2.splice(this.state.refIDs.indexOf(refID), 1);\r\n\r\n                  //Copy of Class's Names array\r\n                  const newList3 = this.state.cNames.slice(0);\r\n                  newList3.splice(this.state.refIDs.indexOf(refID), 1);\r\n\r\n                  this.StateSetter(newList, newList2, newList3);\r\n                  const node = document.getElementById(refID);\r\n                  node.className = '';\r\n                  node.childNodes[0].textContent = '';\r\n                  node.style.backgroundImage = '';\r\n\r\n                })();\r\n              } else {\r\n                Swal.fire(\r\n                    'You are enrolled to another class at that time',\r\n                    '',\r\n                    'error',\r\n                ).then();\r\n              }\r\n            } else {\r\n              Swal.fire(\r\n                  'There is no class to unenroll from',\r\n                  '',\r\n                  'error',\r\n              ).then();\r\n            }\r\n          } else {\r\n            Swal.fire(\r\n                'You should speak with your coach in order to cancel a Personal Training session',\r\n                '',\r\n                'error',\r\n            ).then();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <div className = \"row\">\r\n            <div className = \"timetable\">\r\n              <div className = \"week-names\">\r\n                <div>monday</div>\r\n                <div>tuesday</div>\r\n                <div>w/day</div>\r\n                <div>thursday</div>\r\n                <div>friday</div>\r\n                <div>saturday</div>\r\n                <div className = \"weekend\">sunday</div>\r\n              </div>\r\n              <div className = \"time-interval\">\r\n                <div>8:00 - 09:00</div>\r\n                <div>09:00 - 10:00</div>\r\n                <div>10:00 - 11:00</div>\r\n                <div>11:00 - 12:00</div>\r\n                <div>12:00 - 13:00</div>\r\n                <div>13:00 - 14:00</div>\r\n                <div>14:00 - 15:00</div>\r\n                <div>15:00 - 16:00</div>\r\n                <div>16:00 - 17:00</div>\r\n                <div>17:00 - 18:00</div>\r\n                <div>18:00 - 19:00</div>\r\n                <div>19:00 - 20:00</div>\r\n              </div>\r\n              <div className = \"content\" ref = { this.myRef }>\r\n                { [...Array(6).keys()].map(x => (x + 1.01).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.02).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.03).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.04).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.05).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.06).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.07).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.08).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.09).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.10).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.11).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.12).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index }\r\n                            id = { x }\r\n                        >\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnrolledClassSchedule;","import React, {Component}                  from 'react';\r\nimport '../assets/styles/profile.css';\r\nimport '../assets/styles/timetable.css';\r\nimport SettingsProfile                     from '../common/SettingsProfile';\r\nimport ProfileInfo                         from '../common/ProfileInfo';\r\nimport BookClass                           from '../common/BookClass';\r\nimport Timetable\r\n                                           from '../common/EnrolledClassSchedule';\r\n// noinspection ES6CheckImport\r\nimport {NavLink, Redirect}                 from 'react-router-dom';\r\nimport {loggedInVisit, updateProfileVisit} from '../../repository';\r\n\r\nclass ProfileUser extends Component {\r\n  componentDidMount() {\r\n    loggedInVisit().then();\r\n    updateProfileVisit().then();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ClassID      : '',\r\n      DayCode      : '',\r\n      TimeCode     : '',\r\n      CoachID      : '',\r\n      User_ID      : '',\r\n      EnrollID     : '',\r\n      flag         : '',\r\n      classSchedule: [],\r\n      Name         : '',\r\n      dataPT       : [],\r\n      dataClasses  : [],\r\n      loadingInfo  : 2,\r\n      invalid      : '',\r\n      image        : '',\r\n    };\r\n    this.handleSelections = this.handleSelections.bind(this);\r\n    this.toggleLoading = this.toggleLoading.bind(this);\r\n    this.handlePTClass = this.handlePTClass.bind(this);\r\n    this.changeAvatar = this.changeAvatar.bind(this);\r\n  }\r\n\r\n  handleSelections = (DayCode, TimeCode, flag, ClassID, Name, invalid) => {\r\n    this.setState({\r\n      DayCode,\r\n      TimeCode,\r\n      flag,\r\n      ClassID,\r\n      Name,\r\n      invalid,\r\n    });\r\n  };\r\n\r\n  toggleLoading = () => {\r\n    this.setState({loadingInfo: this.state.loadingInfo - 1});\r\n  };\r\n\r\n  handlePTClass = (dataClasses, dataPT) => {\r\n    this.setState({dataPT, dataClasses});\r\n  };\r\n\r\n  changeAvatar = (image) => {\r\n    this.setState({image});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n        <div id = 'profile' className = \"main-container container-fluid\">\r\n          { (navigator.userAgent.match(/Android/i)) &&\r\n            <NavLink to = \"/\"\r\n                     className = { 'logout btn btn-danger text-uppercase d-flex justify-content-center' }\r\n                     onClick = { this.onLogOut }\r\n            >\r\n              Logout <i className = \"fas fa-sign-out-alt\" />\r\n            </NavLink>\r\n          }\r\n          { (this.props.userLevel === 'user') ? '' :\r\n              <Redirect to = \"/\" /> }\r\n\r\n          <div className = \"container-fluid mb-4\">\r\n            <div className = \"row \">\r\n              <SettingsProfile dataPT = { this.state.dataPT }\r\n                               classes = { this.state.dataClasses }\r\n                               userLevel = { this.props.userLevel }\r\n                               changeAvatar = { this.changeAvatar }\r\n              />\r\n              <ProfileInfo loadingInfo = { this.state.loadingInfo }\r\n                           toggleLoading = { this.toggleLoading }\r\n                           newAvatar = { this.state.image }\r\n              />\r\n              <BookClass getSelections = { this.handleSelections } />\r\n            </div>\r\n          </div>\r\n          <Timetable DayCode = { this.state.DayCode }\r\n                     TimeCode = { this.state.TimeCode }\r\n                     flag = { this.state.flag }\r\n                     ClassID = { this.state.ClassID }\r\n                     Name = { this.state.Name }\r\n                     invalid = { this.state.invalid }\r\n                     userSchedule = { this.handlePTClass }\r\n                     toggleLoading = { this.toggleLoading }\r\n          />\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileUser;","import React, {Component} from 'react';\r\nimport '../assets/styles/BookDropdown.css'\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass SelectionPTCoach extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            day: '',\r\n            time: '',\r\n            flag: false,\r\n            selectionDay : '',\r\n            selectionTime : '',\r\n\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.handleDay = this.handleDay.bind(this);\r\n        this.handleTime = this.handleTime.bind(this);\r\n        this.clearOptions = this.clearOptions.bind(this);\r\n    }\r\n\r\n    handleDay = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            selectionDay : e.target.value,\r\n        }, () => {\r\n        });\r\n    };\r\n\r\n    handleTime = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            selectionTime : e.target.value,\r\n        }, () => {\r\n        });\r\n    };\r\n\r\n\r\n    onSubmit = () => {\r\n        if (this.state.selectionTime === '' || this.state.selectionDay === ''){\r\n            Swal.fire(\r\n                'Required selections are empty',\r\n                'Make sure that you have filled every selection first!',\r\n                'error',\r\n            ).then();\r\n        }else {\r\n            this.setState({flag: true},\r\n                () => {\r\n                    this.props.toogle(\r\n                        this.state.day,\r\n                        this.state.time,\r\n                        this.state.flag,\r\n                        this.state.Coach_ID,\r\n                    );\r\n                });\r\n        }\r\n    };\r\n\r\n    onDelete = () => {\r\n        if (this.state.selectionTime === '' || this.state.selectionDay === ''){\r\n            Swal.fire(\r\n                'Required selections are empty',\r\n                'Make sure that you have filled every selection first!',\r\n                'error',\r\n            ).then();\r\n        }else {\r\n            this.setState({flag: false},\r\n                () => {\r\n                    this.props.toogle(\r\n                        this.state.day,\r\n                        this.state.time,\r\n                        this.state.flag,\r\n                        this.state.Coach_ID,\r\n                    );\r\n                });\r\n        }\r\n\r\n    };\r\n\r\n    clearOptions() {\r\n        const timeNode = document.getElementById('TimePers');\r\n        timeNode.value = 0;\r\n        const dayNode = document.getElementById('DayPers');\r\n        dayNode.value = 0;\r\n    }\r\n\r\n    // noinspection JSUnusedLocalSymbols\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.userID !== this.props.userID) {\r\n            (async () => {\r\n                if (prevProps.userID !== this.props.userID) {\r\n                    await this.clearOptions();\r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"form smallerBack\" id=\"backBox\" >\r\n                    <h3 id=\"bmiHeading\"><b>C</b>hoose <b>D</b>ay and <b>T</b>ime</h3>\r\n                    <div className=\"row\" id=\"first-row\">\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <label htmlFor=\"DropDays\">Day:</label>\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"day\" id=\"DayPers\"\r\n                                    onChange={this.handleDay} required>\r\n                                <option value=\"0\" hidden>Day Option</option>\r\n                                <option value=\"1\">Monday</option>\r\n                                <option value=\"2\">Tuesday</option>\r\n                                <option value=\"3\">Wednesday</option>\r\n                                <option value=\"4\">Thursday</option>\r\n                                <option value=\"5\">Friday</option>\r\n                                <option value=\"6\">Saturday</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <label htmlFor=\"DropClass\">Time:</label>\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"time\" id=\"TimePers\"\r\n                                    onChange={this.handleTime} required>\r\n                                <option value=\"0\" hidden>Time Option</option>\r\n                                <option value=\"1\">08:00-09:00</option>\r\n                                <option value=\"2\">09:00-10:00</option>\r\n                                <option value=\"3\">10:00-11:00</option>\r\n                                <option value=\"4\">11:00-12:00</option>\r\n                                <option value=\"5\">12:00-13:00</option>\r\n                                <option value=\"6\">13:00-14:00</option>\r\n                                <option value=\"7\">14:00-15:00</option>\r\n                                <option value=\"8\">15:00-16:00</option>\r\n                                <option value=\"9\">16:00-17:00</option>\r\n                                <option value=\"10\">17:00-18:00</option>\r\n                                <option value=\"11\">18:00-19:00</option>\r\n                                <option value=\"12\">19:00-20:00</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <button type=\"button\" className=\"RowButton\" onClick={this.onSubmit}>Submit</button>\r\n                        </div>\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <button type=\"button\" className=\"RowButton\" onClick={this.onDelete}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectionPTCoach;","import React, {Component} from 'react';\r\nimport '../assets/styles/PersonalTrainingTimetable.css';\r\nimport {\r\n  insertPT,\r\n  deletePT,\r\n  getCoachTraining,\r\n  getCoachID, getPersonalSchedule, getClassSchedule,\r\n  getCoachClasses,\r\n}                         from '../../repository';\r\nimport Swal               from 'sweetalert2';\r\n\r\nclass CoachSchedule extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.state = {\r\n      Coach_ID : '',\r\n      User_ID  : '',\r\n      coachName: '',\r\n\r\n      clientNames: [],\r\n      flag       : false,\r\n      refIDsCoach: [],\r\n\r\n      refIDs     : [],\r\n      cIDs       : [],\r\n      cNames     : [],\r\n      Name       : '',\r\n      ClassColors: [\r\n        '#812029',\r\n        '#1A63D9',\r\n        '#CF1B1B',\r\n        '#FFAD1F',\r\n        '#704585',\r\n        '#53878C',\r\n        '#C97200',\r\n        '#489655',\r\n        '#158CA3',\r\n        '#9E134B',\r\n      ],\r\n    };\r\n\r\n    this.insertDeleteMethodStates = this.insertDeleteMethodStates.bind(this);\r\n    this.fillTable = this.fillTable.bind(this);\r\n    this.ColorLuminance = this.ColorLuminance.bind(this);\r\n    this.StateSetter = this.StateSetter.bind(this);\r\n  }\r\n\r\n  // Modals for error messages in case of wrong input.\r\n  toggleModalCoachBooked = () => {\r\n    Swal.fire(\r\n        'This time is unavailable.',\r\n        // 'The coach has another scheduled client or a class at this time.',\r\n        '',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n    toggleModalCoachHasClass = () =>{\r\n        Swal.fire(\r\n            'You have a class scheduled for this time.',\r\n            // 'The coach has another scheduled client or a class at this time.',\r\n            '',\r\n            'error',\r\n        ).then();\r\n    }\r\n\r\n  toggleModalAnotherClient = () => {\r\n    Swal.fire(\r\n        'You cannot delete the Personal Training Session of a different client.',\r\n        'Please choose the appropriate client.',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalEmptyCell = () => {\r\n    Swal.fire(\r\n        'There is no Personal Training Session to delete here.',\r\n        '',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalClientHasClass = () => {\r\n    Swal.fire(\r\n        'The client has a class enrolled at this time.',\r\n        'You are not authorised to delete that.',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalClientHasClassInsert = () => {\r\n    Swal.fire(\r\n        'The client has a class enrolled at this time.',\r\n        'You cannot schedule a Personal Training Session.',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  //method responsible for displaying the enrolled classes and personal\r\n  // training according to the user data from the database\r\n  fillTable(coaches, clientNames, classRefIDs) {\r\n    let node;\r\n    for (let i = 1; i <= 6; i++) {\r\n      for (let x = 1; x <= 12; x++) {\r\n        let refID = '';\r\n        if (x < 10) {\r\n          refID = i + '.0' + x;\r\n        } else {\r\n          refID = i + '.' + x;\r\n        }\r\n        if (coaches.includes(refID)) {\r\n          node = document.getElementById(refID);\r\n          node.setAttribute('style', 'white-space: pre;');\r\n          node.className = 'coachBooked';\r\n            node.style.backgroundImage = 'radial-gradient( #4c4c4c,'\r\n                + this.ColorLuminance(\r\n                    '#4C4C4C', -0.7) + ')';\r\n          node.textContent = clientNames[coaches.indexOf(refID)];\r\n        } else {\r\n          if (classRefIDs.includes(refID) && !this.state.refIDs.includes(\r\n              refID)) {\r\n            node = document.getElementById(refID);\r\n            node.style.backgroundImage = '';\r\n            node.className = 'classesBackground';\r\n            node.textContent = '';\r\n          } else {\r\n            if (!this.state.refIDsCoach.includes(refID)\r\n                && !this.state.refIDs.includes(refID)) {\r\n              node = document.getElementById(refID);\r\n              node.style.backgroundImage = '';\r\n              node.className = '';\r\n              node.textContent = '';\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  insertDeleteMethodStates() {\r\n    this.setState({\r\n      // refIDs: x,\r\n      User_ID: this.props.userID,\r\n      time   : this.props.time,\r\n      day    : this.props.day,\r\n    }, () => {\r\n      if (this.props.flag === true) {\r\n        insertPT(this.state).then();\r\n      } else {\r\n        deletePT(this.state).then();\r\n      }\r\n    });\r\n  }\r\n\r\n  // noinspection DuplicatedCode\r\n  ColorLuminance = (hex, lum) => {\r\n    // validate hex string\r\n    hex = String(hex).replace(/[^0-9a-f]/gi, '');\r\n    if (hex.length < 6) {\r\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    lum = lum || 0;\r\n    // convert to decimal and change luminosity\r\n    let rgb = '#', c, i;\r\n    for (i = 0; i < 3; i++) {\r\n      c = parseInt(hex.substr(i * 2, 2), 16);\r\n      c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n      rgb += ('00' + c).substr(c.length);\r\n    }\r\n    return rgb;\r\n  };\r\n\r\n  StateSetter(x, y, z) {\r\n    this.setState({refIDs: x}, () => {\r\n      this.setState({cIDs: y}, () => {\r\n        this.setState({cNames: z});\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.clear();\r\n    let coachID = '';\r\n    // let coachName = '';\r\n    getCoachID().then(response => {\r\n      this.setState(\r\n          {Coach_ID: response.Coach_ID}, () => {\r\n            coachID = response.Coach_ID;\r\n            // coachName = response.CoachName;\r\n            getCoachClasses(this.state.Coach_ID).then(response => {\r\n              let ret = response.slice(0);\r\n              let refID;\r\n              (async() => {\r\n                let x = this.state.refIDs;\r\n                let y = this.state.cIDs;\r\n                let z = this.state.cNames;\r\n                ret.forEach((item) => {\r\n                      if (item.TimeCode < 10) {\r\n                        this.setState(\r\n                            {refID: item.DayCode + '.0' + item.TimeCode});\r\n                        refID = item.DayCode + '.0' + item.TimeCode;\r\n                      } else {\r\n                        this.setState(\r\n                            {refID: item.DayCode + '.' + item.TimeCode});\r\n                        refID = item.DayCode + '.' + item.TimeCode;\r\n                      }\r\n                      // noinspection DuplicatedCode\r\n                      if (!x.includes(refID)) {\r\n                        x.push(refID);\r\n                        y.push(item.ClassID);\r\n                          if(item.Name === \"Functional Hypertrophy\") {\r\n                              item.Name = \"Fun. Hypertrophy\";\r\n                          }\r\n                        z.push(item.Name);\r\n                        let node = document.getElementById(refID);\r\n                        node.className = 'BusySlot';\r\n\r\n                        node.childNodes[0].textContent = item.Name;\r\n                          if (/\\s/.test(item.Name)) {\r\n                              let string = item.Name;\r\n                              string = string.split(\" \");\r\n                              const stringArray = [];\r\n                              for(let i =0; i < string.length; i++){\r\n                                  stringArray.push(string[i]);\r\n                                  // if(i !== string.length-1){\r\n                                  //     stringArray.push(\"\");\r\n                                  // }\r\n                              }\r\n                              for(let i = 0; i < stringArray.length; i++){\r\n                                  console.log(\"\\n\" + stringArray[i]);\r\n                              }\r\n                              // node.childNodes[0].setAttribute('style', 'font-size: 70%;');\r\n                          }\r\n\r\n                        if (z.includes(item.Name)) {\r\n                          node.style.backgroundImage =\r\n                              'linear-gradient(to bottom right,'\r\n                              + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                              item.Name)] % 9] + ','\r\n                              + this.ColorLuminance(\r\n                              this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                  item.Name)]) % 9], -0.5) + ')';\r\n                        } else {\r\n                          node.style.backgroundImage =\r\n                              'linear-gradient(to bottom right,'\r\n                              + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                              item.Name)] % 9] + ','\r\n                              + this.ColorLuminance(\r\n                              this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                  item.Name)]) % 9], -0.5) + ')';\r\n                        }\r\n                      }\r\n                    },\r\n                );\r\n                await this.StateSetter(x, y, z);\r\n              })();\r\n            });\r\n          });\r\n\r\n      (async() => {\r\n        let trainingScheduleCoach = [];\r\n\r\n        await getCoachTraining(coachID).then(response => {\r\n          trainingScheduleCoach = response;\r\n        });\r\n\r\n        let retCoach = [...trainingScheduleCoach];\r\n        let refID = '';\r\n        let refIDsCoach = [];\r\n        let clientNames = [];\r\n        // Finding the personal training schedule of the coach\r\n        retCoach.forEach((coach) => {\r\n              if (coach.Time < 10) {\r\n                refID = coach.Day + '.0' + coach.Time;\r\n              } else {\r\n                refID = coach.Day + '.' + coach.Time;\r\n              }\r\n              // Create a new array based on current state:\r\n              if (!refIDsCoach.includes(refID)) {\r\n                refIDsCoach.push(refID);\r\n                let fullName = coach.Name + '\\r\\n' + coach.Surname;\r\n                clientNames.push(fullName);\r\n              }\r\n            },\r\n        );\r\n        await this.setState(\r\n            {refIDsCoach: refIDsCoach, clientNames: clientNames});\r\n        // Inserting to table\r\n\r\n        await this.fillTable(this.state.refIDsCoach, this.state.clientNames,\r\n            []);\r\n      })();\r\n\r\n    });\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.day !== this.props.day || prevProps.time !== this.props.time\r\n        || prevProps.flag !== this.props.flag || prevProps.userID\r\n        !== this.props.userID || prevProps.userName !== this.props.userName) {\r\n      console.clear();\r\n      (async() => {\r\n        let user = this.props.userID;\r\n        if (user === '') {\r\n          Swal.fire(\r\n              'Please select a user first!',\r\n              '',\r\n              'error',\r\n          ).then();\r\n          return;\r\n        }\r\n\r\n        let refID = '';\r\n        //  Client's PT and Classes\r\n        let personalTraining = [];\r\n        let classSchedule = [];\r\n\r\n        if (this.props.userID !== '') {\r\n          //  Retrieving the Personal Schedule of the client (Classes and PT)\r\n          await getPersonalSchedule(this.props.userID).then(response => {\r\n            personalTraining = response;\r\n\r\n          });\r\n          await getClassSchedule(this.props.userID).then(response => {\r\n            classSchedule = response;\r\n          });\r\n        }\r\n\r\n        // ****************** Filling the arrays ***************************\r\n        // -------------------- Class Schedule -------------------------\r\n        let ret = [...classSchedule];\r\n        let classRefIDs = [];\r\n        // for loop for traversing fetched data for ClassSchedule and filling\r\n        // tables accordingly\r\n        ret.forEach((item) => {\r\n              if (item.TimeCode < 10) {\r\n                refID = item.DayCode + '.0' + item.TimeCode;\r\n              } else {\r\n                refID = item.DayCode + '.' + item.TimeCode;\r\n              }\r\n              if (!classRefIDs.includes(refID)) {\r\n                classRefIDs.push(refID);\r\n              }\r\n            },\r\n        );\r\n\r\n        // ------------------------ Personal Training --------------------------\r\n        ret = [...personalTraining];\r\n        refID = '';\r\n        let coachID = '';\r\n        let ClientRefIDs = [];\r\n        if (ret.length !== 0) {\r\n          // let coachName = '';\r\n          ret.forEach((item) => {\r\n                if (item.Time < 10) {\r\n                  refID = item.Day + '.0' + item.Time;\r\n                } else {\r\n                  refID = item.Day + '.' + item.Time;\r\n                }\r\n                // Create a new array based on current state:\r\n                coachID = item.Coach_ID;\r\n                // coachName = item.CoachName + ' ' + item.Surname;\r\n                if (!ClientRefIDs.includes(refID)) {\r\n                  ClientRefIDs.push(refID);\r\n                }\r\n              },\r\n          );\r\n        }\r\n\r\n        /* Printing the Client Classes */\r\n        await this.fillTable(this.state.refIDsCoach, this.state.clientNames,\r\n            classRefIDs);\r\n\r\n        // Checking if the client has the same coach assigned for PT\r\n        if (coachID !== this.state.Coach_ID && coachID !== '') {\r\n          Swal.fire(\r\n              'A different coach is registered for personal training for this client',\r\n              'You cannot add a personal schedule session to this client',\r\n              'error',\r\n          ).then();\r\n          return;\r\n        }\r\n        // *********** Getting day and time from box select ***************\r\n        let time = this.props.time;\r\n        let day = this.props.day;\r\n        if (this.props.time < 10) {\r\n          refID = day + '.0' + time;\r\n        } else {\r\n          refID = day + '.' + time;\r\n        }\r\n        if (prevProps.userID !== this.props.userID) {\r\n          refID = '';\r\n        }\r\n\r\n        if ((time === '' || day === '')) {\r\n          refID = '';\r\n        }\r\n\r\n        let refIDsCoach = [...this.state.refIDsCoach];\r\n        let clientNames = [...this.state.clientNames];\r\n        if (!this.state.refIDsCoach.includes(refID)\r\n            && this.props.flag === true && refID !== ''\r\n            && !classRefIDs.includes(\r\n                refID) && !this.state.refIDs.includes(refID)) {\r\n\r\n          refIDsCoach.push(refID);\r\n          clientNames.push(this.props.userName);\r\n          await this.setState(\r\n              {refIDsCoach: refIDsCoach, clientNames: clientNames});\r\n          await this.insertDeleteMethodStates();\r\n        } else {\r\n          let pos = ClientRefIDs.indexOf(refID);\r\n          let posCoach = refIDsCoach.indexOf(refID);\r\n          if (refIDsCoach.includes(refID) && ClientRefIDs.includes(refID)\r\n              && this.props.flag === false && refID !== '') {\r\n            ClientRefIDs.splice(pos, 1);\r\n            refIDsCoach.splice(posCoach, 1);\r\n            clientNames.splice(posCoach, 1);\r\n            await this.setState(\r\n                {refIDsCoach: refIDsCoach, clientNames: clientNames});\r\n\r\n            await this.insertDeleteMethodStates();\r\n          } else {\r\n            /* Conflict and Error Messages */\r\n            // Insert Warnings\r\n            // Coach has another PT or class at this time\r\n            if ((refIDsCoach.includes(refID) || this.state.refIDs.includes(\r\n                refID))\r\n                && this.props.flag === true) {\r\n              this.toggleModalCoachBooked();\r\n              coachID = '';\r\n            }\r\n            // User has a class at that time.\r\n            if ((!refIDsCoach.includes(refID) && !this.state.refIDs.includes(\r\n                refID))\r\n                && classRefIDs.includes(refID) && this.props.flag === true) {\r\n              this.toggleModalClientHasClassInsert();\r\n              coachID = '';\r\n            }\r\n\r\n            // Deletion Warnings\r\n            // Different Client\r\n            if ((refIDsCoach.includes(refID) && !ClientRefIDs.includes(refID))\r\n                && this.props.flag === false) {\r\n              this.toggleModalAnotherClient();\r\n              coachID = '';\r\n            }\r\n            //Empty Cell\r\n            if (!refIDsCoach.includes(refID) && !ClientRefIDs.includes(refID) &&\r\n                !this.state.refIDs.includes(refID) && !classRefIDs.includes(\r\n                    refID) &&\r\n                this.props.flag === false && refID !== '') {\r\n              this.toggleModalEmptyCell();\r\n              coachID = '';\r\n            }\r\n            // Client has a class\r\n            if (classRefIDs.includes(refID) && this.props.flag === false) {\r\n              this.toggleModalClientHasClass();\r\n              coachID = '';\r\n            }\r\n            //Coach has a class\r\n              if (this.state.refIDs.includes(refID) && this.props.flag === false) {\r\n                  this.toggleModalCoachHasClass();\r\n                  coachID = '';\r\n              }\r\n          }\r\n\r\n        }\r\n        await this.fillTable(refIDsCoach, clientNames, classRefIDs);\r\n      })();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = { 'container' }>\r\n          <div className = \"row\">\r\n            <div className = \"timetable\">\r\n              <div className = \"week-names\">\r\n                <div>monday</div>\r\n                <div>tuesday</div>\r\n                <div>w/day</div>\r\n                <div>thursday</div>\r\n                <div>friday</div>\r\n                <div>saturday</div>\r\n                <div className = \"weekend\">sunday</div>\r\n              </div>\r\n              <div className = \"time-interval\">\r\n                <div>8:00 - 09:00</div>\r\n                <div>09:00 - 10:00</div>\r\n                <div>10:00 - 11:00</div>\r\n                <div>11:00 - 12:00</div>\r\n                <div>12:00 - 13:00</div>\r\n                <div>13:00 - 14:00</div>\r\n                <div>14:00 - 15:00</div>\r\n                <div>15:00 - 16:00</div>\r\n                <div>16:00 - 17:00</div>\r\n                <div>17:00 - 18:00</div>\r\n                <div>18:00 - 19:00</div>\r\n                <div>19:00 - 20:00</div>\r\n              </div>\r\n              <div className = \"content\">\r\n                { [...Array(6).keys()].map(x => (x + 1.01).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.02).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.03).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.04).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.05).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.06).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.07).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.08).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.09).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.10).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.11).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.12).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div key = { index } id = { x }>\r\n                          <p />\r\n                        </div>,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div className = { 'row' }>\r\n            <div className = 'col-sm-12 col-md-12 legendsBoxPT'>\r\n              <div className = \"sameRow\">\r\n                <div className = 'classBookedSmall' />\r\n                <small>&emsp;Client Class Enrolled</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CoachSchedule;","import React, {Component} from 'react';\r\n// noinspection ES6CheckImport\r\nimport {Redirect}         from 'react-router-dom';\r\nimport '../assets/styles/adminCoachProfile.css';\r\nimport {\r\n  getPrivateAnnouncementsAdmin,\r\n  userDetails,\r\n  updateAnnouncement,\r\n  deleteAnnouncement,\r\n  addPrivateAnnouncement,\r\n  loggedInVisit,\r\n  updateProfileVisit,\r\n  staffData,\r\n  getAccountID,\r\n}                         from '../../repository';\r\n\r\nimport AnnouncementModal         from '../common/AnnouncementModal';\r\nimport {Button}                  from 'reactstrap';\r\nimport Box                       from '../common/SelectionPTCoach';\r\nimport Timetable                 from '../common/CoachSchedule';\r\nimport AnnouncementsPrivateModal from '../common/AnnouncementsPrivateModal';\r\nimport Swal                      from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport ButtonLoader              from '../common/ButtonLoader';\r\nimport ToggleModal               from '../common/ToggleModal';\r\nimport MessagesModalAdminCoach   from '../common/MessagesModalAdminCoach';\r\n\r\nclass ProfileCoach extends Component {\r\n\r\n    // noinspection DuplicatedCode\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userAccountID        :'',\r\n            nameStart            : '',\r\n            Name                 : '',\r\n            Surname              : '',\r\n            Email                : '',\r\n            username             : '',\r\n            searchResults        : [],\r\n            announcements        : [],\r\n            modal                : false,\r\n            modal2               : false,\r\n            modalTitle           : '',\r\n            modalMessage         : '',\r\n            modalAnnId           : '',\r\n            day                  : '',\r\n            time                 : '',\r\n            flag                 : false,\r\n            image                : '',\r\n            User_ID              : '',\r\n            Coach_ID             : '',\r\n            loadingSearchUser    : false,\r\n            loadingInfo          : false,\r\n            trainingScheduleCoach: [],\r\n            cleared              : false,\r\n            ownerName            :''\r\n        };\r\n\r\n    this.toggleAnnouncementsData = this.toggleAnnouncementsData.bind(this);\r\n    this.onAnnouncementSubmit = this.onAnnouncementSubmit.bind(this);\r\n    this.toggleAnnouncementsData2 = this.toggleAnnouncementsData2.bind(this);\r\n    this.onAnnouncementSubmit2 = this.onAnnouncementSubmit2.bind(this);\r\n    this.handleDayTimeChange = this.handleDayTimeChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.toggleAnnouncements = this.toggleAnnouncements.bind(this);\r\n    this.toggleAnnouncements2 = this.toggleAnnouncements2.bind(this);\r\n    this.searchButton = this.searchButton.bind(this);\r\n    this.userDropdown = this.userDropdown.bind(this);\r\n    this.onAnnouncementDelete = this.onAnnouncementDelete.bind(this);\r\n    this.clearOptions = this.clearOptions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    loggedInVisit().then();\r\n    updateProfileVisit().then();\r\n    staffData().then(response => {\r\n      this.setState({ownerName: response.username});\r\n    });\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.clearOptions();\r\n    this.setState({loadingSearchUser: true}, () => {\r\n      userDetails(this.state.nameStart)\r\n          .then(response => {\r\n            this.setState({searchResults: response, loadingSearchUser: false});\r\n          });\r\n    });\r\n  };\r\n\r\n  toggleMessages = () => {\r\n    this.setState({modalMessages: !this.state.modalMessages});\r\n  };\r\n\r\n  // noinspection DuplicatedCode\r\n  onAnnouncementSubmit = async(Title, Message, Ann_ID) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === this.state.announcements[this.state.modalAnnId].Title\r\n        && Message\r\n        === this.state.announcements[this.state.modalAnnId].Message) {\r\n      Swal.fire(\r\n          'Please give new data to update',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === '' || Message === '') {\r\n      Swal.fire(\r\n          'Please fill in all boxes',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await updateAnnouncement(Ann_ID, Title, Message).then(response => {\r\n      this.setState({\r\n        announcements: this.state.announcements.map(ann => {\r\n          let x = ann;\r\n          if (ann.ANNOUNCEMENT_ID === response.ANNOUNCEMENT_ID) {\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Title = Title;\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Message = Message;\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Ann_ID = Ann_ID;\r\n          }\r\n          return x;\r\n        }),\r\n      });\r\n      this.toggle();\r\n    }).then(() => {\r\n      flag = true;\r\n      Swal.fire(\r\n          'Private Announcement was updated successfully',\r\n          '',\r\n          'success',\r\n      );\r\n      this.toggle();\r\n    }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ));\r\n\r\n    return flag;\r\n  };\r\n\r\n  // noinspection DuplicatedCode\r\n  onAnnouncementDelete = async(ANNOUNCEMENT_ID) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then(async(result) => {\r\n      if (result.value) {\r\n        await deleteAnnouncement(\r\n            this.state.announcements[ANNOUNCEMENT_ID].ANNOUNCEMENT_ID)\r\n            .then(() => {\r\n              this.setState({\r\n                announcements: this.state.announcements.filter(\r\n                    ann => ann.ANNOUNCEMENT_ID\r\n                           !== this.state.announcements[ANNOUNCEMENT_ID].ANNOUNCEMENT_ID),\r\n              }, () => Swal.fire(\r\n                  'Private Announcement deleted successfully',\r\n                  '',\r\n                  'success',\r\n              ));\r\n              flag = true;\r\n            })\r\n            .catch(() => Swal.fire(\r\n                'Something went wrong',\r\n                'Please try again...',\r\n                'error',\r\n            ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Private Announcement is safe :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n\r\n    return flag;\r\n  };\r\n\r\n  // noinspection DuplicatedCode\r\n  onAnnouncementSubmit2 = async(Title, Message) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (!this.state.username || this.state.username === '') {\r\n      Swal.fire(\r\n          'Please select a user first',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === '' || Message === '') {\r\n      Swal.fire(\r\n          'Please fill in all boxes',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await addPrivateAnnouncement(Title, Message, this.state.username)\r\n        .then(response => {\r\n          let prevAnn = this.state.announcements.slice(0);\r\n          prevAnn.push(\r\n              {\r\n                ANNOUNCEMENT_ID: response.data.ANNOUNCEMENT_ID,\r\n                Title          : Title,\r\n                Message        : Message,\r\n                TIMESTAMP      : new Date().toISOString(),\r\n              });\r\n          this.setState({announcements: prevAnn});\r\n        }).then(() => {\r\n          flag = true;\r\n          Swal.fire(\r\n              'Private Announcement added successfully',\r\n              '',\r\n              'success',\r\n          );\r\n          this.toggle2();\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n\r\n    return flag;\r\n  };\r\n\r\n  toggle = () => {\r\n    if (this.state.level <= 1) {\r\n      return;\r\n    }\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  toggle2 = () => {\r\n    if (this.state.level <= 1) {\r\n      return;\r\n    }\r\n    this.setState({modal2: !this.state.modal2});\r\n  };\r\n\r\n  searchButton = (e) => {\r\n    this.setState({nameStart: e.target.value});\r\n  };\r\n\r\n  userDropdown = (e) => {\r\n    const username = e.target.value;\r\n    const user = this.state.searchResults.find(\r\n        usr => usr.username === username);\r\n    if (!user) {\r\n      return null;\r\n    }\r\n\r\n    this.setState({loadingInfo: true}, async() => {\r\n      await this.updateCoaches(user, username);\r\n      await this.updatePrivateAnnouncements(username);\r\n      this.setState({loadingInfo: false});\r\n    });\r\n  };\r\n\r\n    updateCoaches = async(user, username) => {\r\n        return new Promise((resolve) => {\r\n            this.setState({\r\n                Name   : user.Name,\r\n                Surname: user.Surname,\r\n                Email  : user.Email,\r\n                username,\r\n                // image: user.image,\r\n                User_ID: user.User_ID,\r\n                cleared: false,\r\n            }, () => {\r\n                getAccountID(this.state.username).then(response => {\r\n                    this.setState({userAccountID: response.AccountID}, () =>{\r\n                        console.log(response.AccountID);\r\n                    })\r\n                });\r\n            });\r\n            return resolve();\r\n        });\r\n    };\r\n\r\n  updatePrivateAnnouncements = async(username) => {\r\n    return new Promise((resolve) => {\r\n      getPrivateAnnouncementsAdmin(username).then(response => {\r\n        this.setState({announcements: response.data.announcements});\r\n      });\r\n      return resolve();\r\n    });\r\n  };\r\n\r\n  toggleAnnouncements = () => {\r\n    this.setState({modalAnnouncements: !this.state.modalAnnouncements});\r\n  };\r\n\r\n  toggleAnnouncements2 = () => {\r\n    this.setState({modalAnnouncements2: !this.state.modalAnnouncements2});\r\n  };\r\n\r\n  handleDayTimeChange = (day, time, flag, Coach_ID) => {\r\n    this.setState({day, time, flag, Coach_ID}, () => {\r\n    });\r\n  };\r\n\r\n  toggleAnnouncementsData = (e) => {\r\n    const x = this.state.announcements[e.target.id - 100];\r\n    if (x === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      modalTitle  : x.Title,\r\n      modalMessage: x.Message,\r\n      modalAnnId  : e.target.id - 100,\r\n    }, () => {\r\n      this.toggleAnnouncements();\r\n    });\r\n  };\r\n\r\n  toggleAnnouncementsData2 = () => {\r\n    this.toggleAnnouncements2();\r\n  };\r\n\r\n  clearOptions() {\r\n    this.setState({User_ID: '', announcements: [], cleared: true});\r\n    const clientList = document.getElementById('userList');\r\n    clientList.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div id = 'profile' className = \"\">\r\n          { (this.props.userLevel === 'coach') ? '' : <Redirect to = \"/\" /> }\r\n          <div className = \"container-back\">\r\n            <div className = \"row\">\r\n              <div className = \"col-md-4\">\r\n                <h4>Search for Client:</h4>\r\n                <form className = \"adminViewClient\">\r\n                  <div className = \"d-flex bd-highlight\">\r\n                    <div className = \"p-lg-2 flex-fill w-100\">\r\n                      <input className = \"h-100 w-100 m-0\"\r\n                             name = { 'Name' }\r\n                             onChange = { this.searchButton }\r\n                             type = \"text\"\r\n                             placeholder = \"Search\"\r\n                             aria-label = \"Search\"\r\n                             id = \"searchClient\"\r\n                      />\r\n                    </div>\r\n                    <div className = \"p-sm-1 flex-fill bd-highlight \">\r\n                      <ButtonLoader text = { '' }\r\n                                    textIcon = { true }\r\n                                    loadingText = { '' }\r\n                                    size = { 'lg' }\r\n                                    type = { 'submit' }\r\n                                    onClick = { this.onSubmit }\r\n                                    loading = { this.state.loadingSearchUser }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <br />\r\n                <div className = \"form-group\">\r\n                  <label htmlFor = \"userList\"><h6>Clients Retrieved:</h6>\r\n                  </label>\r\n                  <select className = \"form-control\"\r\n                          name = { 'username' }\r\n                          id = \"userList\"\r\n                          onChange = { this.userDropdown }\r\n                          required\r\n                  >\r\n                    <option value = \"\" hidden>Client List Generated</option>\r\n                    { this.state.searchResults.map((res, index) => {\r\n                      return <option value = { res.username } key = { index }>\r\n                        { res.Name } { res.Surname } { res.username }\r\n                      </option>;\r\n                    })\r\n                    }\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"col-md-4\">\r\n                            <Box toogle = { this.handleDayTimeChange }\r\n                                 userID = { this.state.User_ID }\r\n                            />\r\n                        </div>\r\n                        <div className = \"col-md-4\">\r\n                            <label htmlFor = \"comment\"><h4>Messages:</h4></label>\r\n                            <div className=\"form-group\">\r\n                                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                                        onClick = { this.toggleMessages }\r\n                                        style = { {width: '100%'} }\r\n                                >\r\n                                    <i className = \"scnd-font-color fa fa-envelope\" /> Exchange Messages with this Client\r\n                                    { this.state.TotalMessages > 0 &&\r\n                                    <div className = \"menu-box-number\">{ this.state.TotalMessages }</div> }\r\n                                </Button>\r\n                                <ToggleModal\r\n                                    modal = { this.state.modalMessages }\r\n                                    toggle = { this.toggleMessages }\r\n                                    modalSize = { 'md' }\r\n                                    modalHeader = { 'Messages' }\r\n                                    modalBody = {\r\n                                        <MessagesModalAdminCoach\r\n                                            userName = {this.state.ownerName}\r\n                                            userLevel = { this.props.userLevel}\r\n                                            TotalMessages = { this.state.TotalMessages }\r\n                                            toggleTotalMessages = { this.toggleTotalMessages }\r\n                                            username = {this.state.username}\r\n                                            user_ID = {this.state.userAccountID}\r\n                                        /> }\r\n                                />\r\n                            </div>\r\n                            <br/>\r\n                            <label htmlFor = \"comment\"><h4>Announcements:</h4></label>\r\n                            <div className = \"menu-box-tab menu-text\" id = \"EditAnns\">\r\n                                { this.state.announcements.sort(\r\n                                    function(a, b) {\r\n                                        return b.ANNOUNCEMENT_ID\r\n                                            - a.ANNOUNCEMENT_ID;\r\n                                    }).map((ann, index) => {\r\n                                    return <Button className = \"nav-link menu-box-tab menu-text\"\r\n                                                   onClick = { this.toggleAnnouncementsData.bind(\r\n                                                       this) } id = { index + 100 }\r\n                                                   key = { index }\r\n                                    ><i style = { {marginRight: 10 + 'px'} }\r\n                                        className = \"scnd-font-color fa fa-tasks\"\r\n                                    />\r\n                                        { ann.Title }{ <p> (</p> }{ ann.TIMESTAMP[0] }\r\n                                        { ann.TIMESTAMP[1] }{ ann.TIMESTAMP[2] }{ ann.TIMESTAMP[3] }{ ann.TIMESTAMP[4] }{ ann.TIMESTAMP[5] }\r\n                                        { ann.TIMESTAMP[6] }{ ann.TIMESTAMP[7] } { ann.TIMESTAMP[8] }{ ann.TIMESTAMP[9] }{\r\n                                            <p\r\n                                                id = \"extra\"\r\n                                            >)</p> }\r\n                                    </Button>;\r\n                                }) }\r\n\r\n                </div>\r\n                <Button id = \"addAnn\"\r\n                        className = { ' edit nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleAnnouncements2 }\r\n                >\r\n                  <i style = { {marginRight: 10 + 'px'} }\r\n                     className = \"scnd-font-color fa fa-tasks\"\r\n                  /> Add Announcement\r\n                </Button>\r\n                <AnnouncementsPrivateModal\r\n                    onSubmit = { this.onAnnouncementSubmit2 }\r\n                    toggle = { this.toggleAnnouncements2 }\r\n                    modal = { this.state.modalAnnouncements2 }\r\n                    resetOnSubmit = { true }\r\n                />\r\n                <AnnouncementModal onSubmit = { this.onAnnouncementSubmit }\r\n                                   DeleteAnn = { this.onAnnouncementDelete }\r\n                                   toggle = { this.toggleAnnouncements }\r\n                                   modal = { this.state.modalAnnouncements }\r\n                                   announcements = { this.state.announcements }\r\n                                   title = { this.state.modalTitle }\r\n                                   message = { this.state.modalMessage }\r\n                                   announcement_id = { this.state.modalAnnId }\r\n                                   isPrivate = { true }\r\n                />\r\n\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div className = \"row\">\r\n              <div id = \"timeTableHeading\">Personal Training Schedule\r\n              </div>\r\n              <div className = \"col-md-12 col-lg-12\">\r\n                <Timetable day = { this.state.day }\r\n                           time = { this.state.time }\r\n                           flag = { this.state.flag }\r\n                           coachID = { this.state.Coach_ID }\r\n                           userID = { this.state.User_ID }\r\n                           userName = { this.state.Name + '\\r\\n'\r\n                                        + this.state.Surname }\r\n                           cleared = { this.state.cleared }\r\n                           invalid = { this.state.invalid }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default ProfileCoach;","import React, {Component}             from 'react';\r\nimport '../assets/styles/classes.css';\r\nimport {AnimatedOnScroll}             from 'react-animated-css-onscroll';\r\nimport {updateClassesVisit, validURL} from '../../repository';\r\n\r\nclass Classes extends Component {\r\n\r\n  componentDidMount() {\r\n    updateClassesVisit().then();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <section className = \"classes-section\" id = \"classes\">\r\n          <div className = \"container\">\r\n            <div className = \"page-title\">\r\n              <h1>Our Classes</h1>\r\n            </div>\r\n            <div className = \"row\">\r\n              { this.props.stylesheetData['Class']['classes'].map((c, i) => {\r\n                return (\r\n                    <div key = { i } className = \"col-md-4 col-sm-6\">\r\n                      <div className = \"single-classes\">\r\n                        <div className = \"classes-img\">\r\n                          <img src = { validURL(c.src)\r\n                              ? c.src\r\n                              : process.env.PUBLIC_URL + c.src }\r\n                               className = \"rounded-corners\"\r\n                               alt = \"\"\r\n                          />\r\n                        </div>\r\n                        <div className = \"classes-text\">\r\n                          <h5>{ c.title }</h5>\r\n                          <p>{ c.text }</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                );\r\n              }) }\r\n            </div>\r\n          </div>\r\n          <AnimatedOnScroll animationIn = \"zoomInUp\">\r\n            <div className = 'container'>\r\n              <div className = 'full-width-image'>\r\n                <img src = { validURL(\r\n                    this.props.stylesheetData['Class']['timetable'].src)\r\n                    ? this.props.stylesheetData['Class']['timetable'].src\r\n                    : process.env.PUBLIC_URL\r\n                      + this.props.stylesheetData['Class']['timetable'].src }\r\n                     alt = \"timetable\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </AnimatedOnScroll>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Classes;","import { useEffect } from \"react\";\r\n// noinspection ES6CheckImport\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = () => {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    // noinspection JSConstructorReturnsPrimitive\r\n    return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React               from 'react';\r\n// noinspection ES6CheckImport\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isAuthenticated } from '../repository';\r\n\r\nconst PrivateRoute = ({ component: Component, userLevel: UserLevel, ...rest }) => (\r\n    <Route\r\n        { ...rest }\r\n        render = { props =>\r\n            isAuthenticated() ? (\r\n                <Component userLevel = { UserLevel } { ...props } />\r\n            ) : (\r\n                <Redirect to = { '/' } />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React, {Component} from 'react';\r\nimport '../assets/styles/forgotPassword.css'\r\nimport {newPassword} from \"../../repository\";\r\n\r\nclass forgotPassword extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            email:'',\r\n            username:'',\r\n            messageFromServer:'',\r\n            showError:false,\r\n            sendingEmail: false,\r\n            confirming: true,\r\n        };\r\n        this.onMailChange = this.onMailChange.bind(this);\r\n        this.sendEmailPass = this.sendEmailPass.bind(this);\r\n\r\n    }\r\n\r\n    onMailChange = (e) =>{\r\n        this.setState({email: e.target.value});\r\n    };\r\n\r\n    sendEmailPass=() =>{\r\n      if(this.state.email ===''){\r\n          this.setState({\r\n              messageFromServer:'',\r\n          });\r\n      }else{\r\n            const input ={\r\n                email: this.state.email,\r\n            };\r\n            newPassword(input)\r\n                .then(()=>{\r\n                    alert(\"done.\");\r\n                })\r\n                .catch(error =>{\r\n                    alert(\"not done.\"+error);\r\n                })\r\n                // .then(response =>{\r\n                //     if(response.data ==='email not in db'){\r\n                //         this.setState({\r\n                //             showError: true,\r\n                //             messageFromServer:'',\r\n                //         });\r\n                //     }else if(response.data ==='recovery email sent'){\r\n                //         this.setState({\r\n                //             showError: false,\r\n                //             messageFromServer: 'recovery email sent',\r\n                //         });\r\n                //     }\r\n                // })\r\n                // .catch(error=>{\r\n                // });\r\n      }\r\n    };\r\n    render() {\r\n        return(\r\n            <div id={\"ForgotPassword\"}>\r\n                <div className={\"PasswordContainer\"}>\r\n                    <div className={\"PageHeader\"}>\r\n                        <h1>Forgot your password?</h1>\r\n                    </div>\r\n                    <p>Enter your email.</p>\r\n                    <form className={\"passwordForm\"}>\r\n                        <input type={\"email\"} className={\"emailText\"} onChange={this.onMailChange}/>\r\n                        <input type={\"submit\"} className={\"emailSubmit\"} value={\"Submit\"} onClick={this.sendEmailPass}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default forgotPassword;\r\n","import React, {Component} from \"react\";\r\nimport '../assets/styles/VerifyEmail.css';\r\nimport {lastVerify} from \"../../repository\";\r\n\r\nclass VerifyEmail extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            // token:'',\r\n            confirm:false,\r\n        };\r\n    }\r\n\r\n   componentDidMount() {\r\n       const { id } = this.props.match.params;\r\n       const data = {\r\n           secret: id,\r\n       };\r\n       lastVerify(data)\r\n           .then(()=>{\r\n               // alert(\"Account is verified! Please Proceed to Login!.\");\r\n               this.setState({confirm: true});\r\n           })\r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <div id={\"VerifyEmail\"}>\r\n                <div className={\"PasswordContainer\"}>\r\n                    <div className={\"PageHeader\"}>\r\n                        <h1>Verify Email</h1>\r\n                    </div>\r\n                    <div>\r\n                        {this.state.confirm ?(\r\n                            <div>\r\n                                <h1>Your account was successfully verified!.</h1>\r\n                            </div>\r\n                        ):(\r\n                            <h1>There was an error!</h1>\r\n                        )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default VerifyEmail;\r\n","import React, {Component} from \"react\";\r\n\r\n// export const ResetPassword = ({ match }) => ( <div> <h3>ID: {match.params.id}</h3> </div> );\r\n\r\nimport '../assets/styles/resetPassword.css';\r\nimport {resetPass} from \"../../repository\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass ResetPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            confirm: false,\r\n            isLoading: false,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    };\r\n\r\n    getID = (e) => {\r\n        e.preventDefault();\r\n        const {id} = this.props.match.params;\r\n        this.setState({confirm: false});\r\n        if (this.state.password !== this.state.confirmPassword) {\r\n            Swal.fire(\r\n                'The password and confirm Password dont match',\r\n                '',\r\n                'warning',\r\n            ).then(() => {\r\n                return 1;\r\n            });\r\n        } else if (!this.state.password.match(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/,)) {\r\n            Swal.fire(\r\n                'The password must have 8 characters small and caps letters and 1 number',\r\n                '',\r\n                'warning',\r\n            ).then(() => {\r\n                return 1;\r\n            });\r\n        } else {\r\n            const crypto = require('crypto');\r\n            const hashCode = crypto.createHmac('sha256', 'ffn_private_key_!!!!')\r\n                .update(this.state.password)\r\n                .digest('hex');\r\n            this.setState({isLoading: true});\r\n            const data = {\r\n                token: id,\r\n                username: this.state.username,\r\n                password: hashCode,\r\n            };\r\n            resetPass(data)\r\n                .then(() => console.log(\"HERE\"))\r\n                .catch(()=> console.log(\"catch\"))\r\n                .finally(()=> console.log(\"blabla\"));\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id={\"ResetPassword\"}>\r\n                <div className={\"newPassword\"}>\r\n                    <div className={\"newHeading\"}>\r\n                        <h1>Reset Your Password</h1>\r\n                    </div>\r\n                    <p>Please fill the boxes below to reset your <i>password</i>.</p>\r\n                    <form className={\"newPassword\"}>\r\n                        <input type={\"text\"} placeholder={\"Username\"} name={\"username\"} onChange={this.handleChange}\r\n                               required/>\r\n                        <input type={\"password\"} placeholder={\"New Password\"} name={\"password\"}\r\n                               onChange={this.handleChange} required/>\r\n                        <input type={\"password\"} placeholder={\"Confirm Password\"} name={\"confirmPassword\"}\r\n                               onChange={this.handleChange} required/>\r\n                        <input type={\"submit\"} value={\"Submit\"} onClick={this.getID}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPassword;","import React, {Component} from 'react';\r\nimport Chart              from 'chart.js';\r\n\r\nclass LineChart extends Component {\r\n  _isMounted = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lineChart        : {\r\n        data  : [],\r\n        labels: 10,\r\n      },\r\n      percentChange    : 0,\r\n      percentComparison: 'Up',\r\n      lastNumber       : '0',\r\n    };\r\n\r\n    this.getChartData = this.getChartData.bind(this);\r\n    this.createChart = this.createChart.bind(this);\r\n    this.updateChart = this.updateChart.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    const self = this;\r\n    if (this._isMounted) {\r\n      self.getChartData();\r\n      self.createChart();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n    clearInterval(this.state.newNumber);\r\n  }\r\n\r\n  getChartData() {\r\n    let randomData = [];\r\n    for (let x = 0; x < this.state.lineChart.labels; x++) {\r\n      this.setState({\r\n        lineChart: {\r\n          data: this.state.lineChart.data.push(0),\r\n        },\r\n      });\r\n      randomData.push(0);\r\n    }\r\n\r\n    this.setState({\r\n      lineChart: {\r\n        data: randomData,\r\n      },\r\n    });\r\n  }\r\n\r\n  createChart() {\r\n    const ctx = document.getElementById(this.props.id);\r\n    ctx.height = 125;\r\n    const data = {\r\n      labels  : [...Array(this.state.lineChart.labels).keys()],\r\n      datasets: [\r\n        {\r\n          backgroundColor : 'rgba(255,255,255,0.5)',\r\n          strokeColor     : 'rgba(255,255,255,1)',\r\n          pointColor      : 'rgba(255,255,255,1)',\r\n          borderColor     : 'rgba(255,255,255,1)',\r\n          pointStrokeColor: '#FFFFFF',\r\n          data            : this.state.lineChart.data,\r\n        },\r\n      ],\r\n    };\r\n\r\n    Chart.defaults.LineWithLine = Chart.defaults.line;\r\n    Chart.controllers.LineWithLine = Chart.controllers.line.extend({\r\n      draw: function(ease) {\r\n        // noinspection JSPotentiallyInvalidConstructorUsage\r\n        Chart.controllers.line.prototype.draw.call(this, ease);\r\n\r\n        if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\r\n          let activePoint = this.chart.tooltip._active[0],\r\n              ctx         = this.chart.ctx,\r\n              x           = activePoint.tooltipPosition().x,\r\n              topY        = this.chart.legend.bottom,\r\n              bottomY     = this.chart.chartArea.bottom;\r\n\r\n          // draw line\r\n          ctx.save();\r\n          ctx.beginPath();\r\n          ctx.moveTo(x, topY);\r\n          ctx.lineTo(x, bottomY);\r\n          ctx.lineWidth = 2;\r\n          ctx.strokeStyle = '#FFFFFF';\r\n          ctx.stroke();\r\n          ctx.restore();\r\n        }\r\n      },\r\n    });\r\n\r\n    const myLineChart = new Chart(ctx, {\r\n      type               : 'LineWithLine',\r\n      responsive         : true,\r\n      maintainAspectRatio: false,\r\n      data               : data,\r\n      options            : {\r\n        responsive: true,\r\n        legend    : {\r\n          display: false,\r\n        },\r\n        tooltips  : {\r\n          enabled          : true,\r\n          intersect        : false,\r\n          mode             : 'nearest',\r\n          titleFontSize    : 0,\r\n          titleSpacing     : 0,\r\n          titleMarginBottom: 0,\r\n          displayColors    : false,\r\n        },\r\n        elements  : {point: {radius: 0}},\r\n        scales    : {\r\n          xAxes: [\r\n            {\r\n              display: false,\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              display: false,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n\r\n    const self = this;\r\n    this.setState({\r\n      newNumber: setInterval(function() {\r\n        self.updateChart(myLineChart).then();\r\n      }, this.props.chartSpeed),\r\n    });\r\n  }\r\n\r\n  async updateChart(value) {\r\n    if (!this._isMounted) {\r\n      return;\r\n    }\r\n    let number = await this.props.getData();\r\n    value.data.datasets[0].data.push(number);\r\n    value.data.datasets[0].data.shift(); // Remove first value\r\n    let changeOne = value.data.datasets[0].data[value.data.datasets[0].data.length\r\n                                                - 2];\r\n    let changeTwo = value.data.datasets[0].data[value.data.datasets[0].data.length\r\n                                                - 1];\r\n\r\n    if (changeOne > changeTwo) {\r\n      this.setState({percentComparsion: 'Down'});\r\n    } else {\r\n      this.setState({percentComparsion: 'Up'});\r\n    }\r\n\r\n    let changeNumber = changeOne === changeTwo ? 0 : !changeOne\r\n        ? 100\r\n        : !changeTwo ? -100 : (changeOne / changeTwo) * 10;\r\n    this.setState({\r\n      percentChange: changeNumber.toFixed(2),\r\n      lastNumber   : (\r\n          value.data.datasets[0].data[value.data.datasets[0].data.length - 1]),\r\n    });\r\n    value.update();\r\n  }\r\n\r\n  render() {\r\n    const divStyle = {\r\n      background: this.props.bgColor,\r\n    };\r\n    return (\r\n        <div className = \"col-md-3\">\r\n          <div className = \"line__chart\" style = { divStyle }>\r\n            <div className = \"line__chart-header\">\r\n              <strong>{ this.props.title }</strong>\r\n            </div>\r\n            <div className = \"line__chart-data\">{ this.state.lastNumber }\r\n              <span>{ this.state.percentChange }%</span>\r\n              <span className = { `arrow ${ this.state.percentComparsion }` } />\r\n            </div>\r\n            <canvas id = { this.props.id } width = \"400\" height = \"400\" />\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineChart;","import React, {Component} from 'react';\r\nimport Chart              from 'chart.js';\r\n\r\nclass PieChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // noinspection JSUnresolvedVariable\r\n    this.state = {\r\n      myChart      : null,\r\n      animationTime: this.props.timeMS || 1000,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.testLoading) {\r\n      this.createChart();\r\n    }\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.data !== this.props.data) {\r\n      if (!this.props.testLoading) {\r\n        this.state.myChart.destroy();\r\n        this.createChart();\r\n      }\r\n    }\r\n  }\r\n\r\n  createChart() {\r\n    const colors = [\r\n      '#4BC0C0',\r\n      '#FF6384',\r\n      '#FFCD56',\r\n      '#3FC62E',\r\n      '#E55AFF',\r\n      '#CB843F',\r\n      '#F583FF',\r\n      '#49FF60',\r\n      '#4CC6BF',\r\n      '#F3F6FF',\r\n    ];\r\n    const hoverColors = [\r\n      '#287FC0',\r\n      '#FF001C',\r\n      '#F6EC04',\r\n      '#17920F',\r\n      '#9E00FF',\r\n      '#CB5F0B',\r\n      '#EA1DFF',\r\n      '#12D021',\r\n      '#0D9DB4',\r\n      '#343438',\r\n    ];\r\n    let ctx = document.getElementById(this.props.id);\r\n    let data = {\r\n      labels  : this.props.labels,\r\n      datasets: [\r\n        {\r\n          data                : this.props.data,\r\n          backgroundColor     : colors,\r\n          hoverBackgroundColor: hoverColors,\r\n          borderColor         : '#252830',\r\n        },\r\n      ],\r\n    };\r\n    const myChart = new Chart(ctx, {\r\n      type   : 'doughnut',\r\n      data   : data,\r\n      options: {\r\n        cutoutPercentage: 80,\r\n        legend          : {\r\n          display  : true,\r\n          align    : 'center',\r\n          fullWidth: true,\r\n        },\r\n        tooltips        : {\r\n          enabled    : true,\r\n          borderColor: 'white',\r\n        },\r\n        animation       : {\r\n          animateScale: true,\r\n          duration    : this.state.animationTime,\r\n        },\r\n        responsive      : true,\r\n      },\r\n    });\r\n\r\n    this.setState({myChart});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = \"col-md-4\">\r\n          <div className = \"pie__chart\">\r\n            <canvas id = { this.props.id }\r\n                    width = \"400\"\r\n                    height = \"400\"\r\n            />\r\n          </div>\r\n          <div data-testid={'title'} className = \"text-center\">\r\n            <strong>{ this.props.title }</strong>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PieChart;","import React                                    from 'react';\r\nimport {ValidatorForm}                          from 'react-material-ui-form-validator';\r\nimport TextField\r\n                                                from '@material-ui/core/TextField';\r\nimport Radio                                    from '@material-ui/core/Radio';\r\nimport RadioGroup\r\n                                                from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel\r\n                                                from '@material-ui/core/FormControlLabel';\r\nimport FormControl\r\n                                                from '@material-ui/core/FormControl';\r\nimport Recaptcha                                from 'react-recaptcha';\r\nimport Swal                                     from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport '../assets/styles/SignInUp.css';\r\nimport {insertAdmin, insertCoach, sameUsername} from '../../repository';\r\n\r\nclass CreateStaffMember extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formData  : {\r\n        fname           : '',\r\n        lname           : '',\r\n        username        : '',\r\n        email           : '',\r\n        password        : '',\r\n        confirm_password: '',\r\n        bdate           : '',\r\n        gender          : '',\r\n        age             : '',\r\n      },\r\n      isVerified: false,\r\n      submitted : false,\r\n      countTotal: 0,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    this.calcDate = this.calcDate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    // noinspection JSUnresolvedFunction\r\n    ValidatorForm.addValidationRule('isPasswordMatch', value => {\r\n      const {formData} = this.state;\r\n      return value === formData.password;\r\n    });\r\n  }\r\n\r\n  handleChange = event => {\r\n    const {formData} = this.state;\r\n    formData[event.target.name] = event.target.value;\r\n    this.setState({formData});\r\n\r\n    if (event.target.name === 'bdate') {\r\n      this.calcDate(event);\r\n    }\r\n\r\n    if (\r\n        event.target.name === 'password' &&\r\n        !event.target.value.match(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/)\r\n    ) {\r\n      event.target.setCustomValidity(\r\n          'Enter a combination of at least 8 numbers, lower and uppercase letters.',\r\n      );\r\n    } else if (\r\n        event.target.name === 'confirm_password' &&\r\n        event.target.value !== this.state.formData.password\r\n    ) {\r\n      event.target.setCustomValidity('Passwords don\\'t match.');\r\n    } else {\r\n      event.target.setCustomValidity('');\r\n    }\r\n  };\r\n\r\n  verifyCallback = response => {\r\n    if (response) {\r\n      this.setState({isVerified: true});\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n        !this.state.formData.fname ||\r\n        !this.state.formData.lname ||\r\n        !this.state.formData.username ||\r\n        !this.state.formData.bdate ||\r\n        !this.state.formData.gender ||\r\n        !this.state.formData.email.match(\r\n            /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\r\n        ) ||\r\n        !this.state.formData.password.match(\r\n            /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/,\r\n        ) ||\r\n        this.state.formData.confirm_password !== this.state.formData.password\r\n    ) {\r\n      return;\r\n    }\r\n    if (!this.state.isVerified) {\r\n      Swal.fire(\r\n          'Please verify that you are not a robot 🤖!!!',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return;\r\n    }\r\n\r\n    const crypto = require('crypto');\r\n\r\n    const hashCode = crypto.createHmac('sha256', 'ffn_private_key_!!!!')\r\n        .update(this.state.formData.password)\r\n        .digest('hex');\r\n    // Create output query\r\n    const data = {\r\n      username: this.state.formData.username,\r\n      password: hashCode,\r\n      fname   : this.state.formData.fname,\r\n      lname   : this.state.formData.lname,\r\n      email   : this.state.formData.email,\r\n      age     : this.state.formData.age,\r\n      gender  : this.state.formData.gender === 'male' ? 1 : 2,\r\n      level   : this.state.formData.level,\r\n      bDate   : this.state.formData.bdate,\r\n    };\r\n\r\n    sameUsername(this.state.formData.username)\r\n        .then(response => {\r\n          this.setState(\r\n              {countTotal: response.countTotal},\r\n              () => {\r\n                if (this.state.countTotal === 1) {\r\n                  Swal.fire(\r\n                      'Someone else has this username!!!',\r\n                      '',\r\n                      'error',\r\n                  ).catch(() => Swal.fire(\r\n                      'Something go wrong!!',\r\n                      'Please try again...',\r\n                      'error',\r\n                  ));\r\n                } else if (this.props.staffType === 'coach') {\r\n                  insertCoach(data).then((response) => {\r\n                    const Account_ID = response.Account_ID;\r\n                    Swal.fire(\r\n                        'Coach Created successfully',\r\n                        '',\r\n                        'success',\r\n                    ).then(() => {\r\n                      // noinspection JSUnresolvedVariable\r\n                      let newStaff = {\r\n                        AccountID: Account_ID,\r\n                        Bdate    : this.state.formData.bdate,\r\n                        Email    : this.state.formData.email,\r\n                        Gender   : this.state.formData.gender === 'male'\r\n                            ? 1\r\n                            : 2,\r\n                        Name     : this.state.formData.fname,\r\n                        Surname  : this.state.formData.lname,\r\n                        level    : this.state.formData.level,\r\n                        username : this.state.formData.username,\r\n                      };\r\n                      this.props.onSuccess(newStaff, 'coach',\r\n                          this.props.coaches, this.props.admins);\r\n                      this.props.toggle();\r\n                    });\r\n                  }).catch(() => Swal.fire(\r\n                      'Something went wrong',\r\n                      'Please try again...',\r\n                      'error',\r\n                  ));\r\n                } else if (this.props.staffType === 'admin') {\r\n\r\n                  insertAdmin(data).then((response) => {\r\n                    const Account_ID = response.Account_ID;\r\n                    Swal.fire(\r\n                        'Admin Created successfully',\r\n                        '',\r\n                        'success',\r\n                    ).then(() => {\r\n                      // noinspection JSUnresolvedVariable\r\n                      let newStaff = {\r\n                        AccountID: Account_ID,\r\n                        Bdate    : this.state.formData.bdate,\r\n                        Email    : this.state.formData.email,\r\n                        Gender   : this.state.formData.gender === 'male'\r\n                            ? 1\r\n                            : 2,\r\n                        Name     : this.state.formData.fname,\r\n                        Surname  : this.state.formData.lname,\r\n                        level    : this.state.formData.level,\r\n                        username : this.state.formData.username,\r\n                      };\r\n                      this.props.onSuccess(newStaff, 'admin',\r\n                          this.props.coaches, this.props.admins);\r\n                      this.props.toggle();\r\n                    });\r\n                  }).catch(() => Swal.fire(\r\n                      'Something went wrong',\r\n                      'Please try again...',\r\n                      'error',\r\n                  ));\r\n                }\r\n              },\r\n          );\r\n        });\r\n\r\n  };\r\n\r\n  calcDate = (dDate) => {\r\n    let thenD = dDate.target.value;\r\n    let str = thenD.split('-');\r\n    let now = new Date();\r\n    let ageDif = now.getFullYear() - str[0];\r\n\r\n    const {formData} = this.state;\r\n    formData.age = ageDif;\r\n    this.setState({formData});\r\n  };\r\n\r\n  render() {\r\n    // noinspection JSUnresolvedVariable\r\n    return (\r\n        <form id = \"signup\"\r\n              onSubmit = { this.handleSubmit }\r\n              autoComplete = \"off\"\r\n        >\r\n          <input\r\n              placeholder = \"First Name\"\r\n              name = \"fname\"\r\n              type = \"text\"\r\n              value = { this.state.formData.fname }\r\n              required\r\n              onChange = { this.handleChange }\r\n              style = { {marginTop: 0} }\r\n          />\r\n          <input\r\n              placeholder = \"Last Name\"\r\n              name = \"lname\"\r\n              type = \"text\"\r\n              value = { this.state.formData.lname }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Email Address\"\r\n              name = \"email\"\r\n              type = \"email\"\r\n              value = { this.state.formData.email }\r\n              onChange = { this.handleChange }\r\n              pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n              required\r\n          />\r\n          <input\r\n              placeholder = \"Username\"\r\n              name = \"username\"\r\n              type = \"text\"\r\n              value = { this.state.formData.username }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Password\"\r\n              name = \"password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.password }\r\n              required\r\n              pattern = \"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Confirm Password\"\r\n              name = \"confirm_password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.confirm_password }\r\n              required\r\n              pattern = \"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <TextField\r\n              placeholder = \"Birthday\"\r\n              name = \"bdate\"\r\n              type = \"date\"\r\n              value = { this.state.formData.bday }\r\n              InputLabelProps = { {\r\n                shrink: true,\r\n              } }\r\n              onChange = { this.handleChange }\r\n              required\r\n          />\r\n          <br />\r\n          <FormControl component = \"fieldset\">\r\n            {/* <FormLabel component=\"legend\">Gender</FormLabel> */ }\r\n            <RadioGroup\r\n                aria-label = \"gender\"\r\n                name = \"gender\"\r\n                value = { this.state.formData.gender }\r\n                onChange = { this.handleChange }\r\n                className = { 'gender-radio' }\r\n            >\r\n              <FormControlLabel\r\n                  value = \"male\"\r\n                  control = { <Radio required /> }\r\n                  label = \"Male\"\r\n              />\r\n              <FormControlLabel\r\n                  value = \"female\"\r\n                  control = { <Radio required /> }\r\n                  label = \"Female\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Recaptcha\r\n              elementID = { 'g-recaptcha' }\r\n              sitekey = \"6Lf0od8UAAAAAFoog9iFIpVd8rcPxBwHpUKpnCua\"\r\n              size = \"normal\"\r\n              render = \"explicit\"\r\n              theme = \"dark\"\r\n\r\n              verifyCallback = { this.verifyCallback }\r\n          />\r\n          <button style = { {marginBottom: '15px'} }>Sign up</button>\r\n          <br />\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateStaffMember;","import React, {Component} from 'react';\r\nimport Swal               from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport {\r\n  deleteAdmin,\r\n  getAdmins,\r\n  getCoaches,\r\n  deleteCoach,\r\n  countPT,\r\n  countClasses,\r\n}                         from '../../repository';\r\nimport adminAvatar\r\n                          from '../assets/img/logos/fitnessFactoryLogo.png';\r\nimport ToggleModal        from './ToggleModal';\r\nimport CreateStaffMember  from './CreateStaffMember';\r\n\r\nclass StaffList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      coaches   : [],\r\n      admins    : [],\r\n      staffType : '',\r\n      modal     : false,\r\n      countTotal: 0,\r\n    };\r\n    this.DeleteCoach = this.DeleteCoach.bind(this);\r\n    this.DeleteAdmin = this.DeleteAdmin.bind(this);\r\n    this.createAdmin = this.createAdmin.bind(this);\r\n    this.createCoach = this.createCoach.bind(this);\r\n    this.addStaffMember = this.addStaffMember.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getCoaches().then(response => {\r\n      this.setState({\r\n        coaches: response.map(c => {\r\n          Object.defineProperty(c, 'Name',\r\n              Object.getOwnPropertyDescriptor(c, 'CoachName'));\r\n          delete c['CoachName'];\r\n          return c;\r\n        }),\r\n      });\r\n    });\r\n    getAdmins().then(response => this.setState({admins: response}));\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  DeleteAdmin(e) {\r\n    // noinspection JSUnresolvedVariable\r\n    const AdminId = e.target.className.split(' ')[3] === 'admin'\r\n        ? this.state.admins[e.target.className.split(' ')[2]].AccountID\r\n        : this.state.coaches[e.target.className.split(' ')[2]].AccountID;\r\n\r\n    Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteAdmin(AdminId).then(() => {\r\n          Swal.fire(\r\n              'Account deleted successfully',\r\n              '',\r\n              'success',\r\n          ).then(() => {\r\n            this.setState({\r\n              admins: this.state.admins.filter(\r\n                  admin => admin.AccountID !== AdminId),\r\n            });\r\n          });\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Account is safe :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n  }\r\n\r\n  DeleteCoach = (e) => {\r\n    // noinspection JSUnresolvedVariable\r\n    const CoachID = e.target.className.split(' ')[3] === 'admin'\r\n        ? this.state.admins[e.target.className.split(' ')[2]].AccountID\r\n        : this.state.coaches[e.target.className.split(' ')[2]].AccountID;\r\n\r\n    Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then(async (result) => {\r\n      let countTotal = 0;\r\n      await countPT(CoachID).then(response => {\r\n        countTotal += response.countTotal;\r\n        return countTotal;\r\n      });\r\n      await countClasses(CoachID).then(response => {\r\n        countTotal += response.countTotal;\r\n        return countTotal;\r\n      });\r\n\r\n      if (result.value && countTotal === 0) {\r\n        deleteCoach(CoachID).then(() => {\r\n          Swal.fire(\r\n              'Account deleted successfully',\r\n              '',\r\n              'success',\r\n          ).then(() => {\r\n            this.setState({\r\n              coaches: this.state.coaches.filter(\r\n                  coach => coach.AccountID !== CoachID),\r\n            });\r\n          });\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Account is safe :)',\r\n            'error',\r\n        ).then();\r\n      } else if (countTotal !== 0) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'You must go and change the classes and the personal training :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n  }\r\n\r\n  createAdmin() {\r\n    this.setState({staffType: 'admin'});\r\n    this.toggleModal();\r\n  }\r\n\r\n  createCoach() {\r\n    this.setState({staffType: 'coach'});\r\n    this.toggleModal();\r\n  }\r\n\r\n  addStaffMember = (staff, staffType, coaches, admins) => {\r\n    if (staffType === 'admin') {\r\n      admins.push(staff);\r\n      this.setState({admins, coaches});\r\n    } else if (staffType === 'coach') {\r\n      coaches.push(staff);\r\n      this.setState({admins, coaches});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // noinspection DuplicatedCode\r\n    return (\r\n        <div className = \"row staff\">\r\n          <div className = \"col-md-6\">\r\n            <div className = \"box\">\r\n              <h3>Admins:</h3>\r\n              <button className = { 'add-admin btn btn-primary btn-xl text-uppercase' }\r\n                      onClick = { this.createAdmin }\r\n              >\r\n                Create New Admin\r\n              </button>\r\n              { this.state.admins.map((admin, index) => {\r\n                const timestamp = admin.Bdate.split(/[T.]+/)[0];\r\n                // noinspection JSUnresolvedVariable\r\n                const gender = admin.Gender === 1 ? 'Male' : 'Female';\r\n                return (\r\n                    <div className = \"admin\" key = { index }>\r\n                      <div className = \"img\">\r\n                        <img className = \"img-responsive\"\r\n                             src = { adminAvatar }\r\n                             alt = \"admin\"\r\n                        />\r\n                      </div>\r\n                      <div className = \"info\">\r\n                        <h3>{ admin.Name } { admin.Surname }</h3>\r\n                        <p>\r\n                          Username: { admin.username }<br />\r\n                          Email: { admin.Email }<br />\r\n                          BDate: { timestamp }<br />\r\n                          Gender: { gender }\r\n                        </p>\r\n                      </div>\r\n                      { admin.username !== 'its.giff' ?\r\n                          <button className = \"delete-admin\"\r\n                          >\r\n                            <i className = { 'fa fa-trash ' + index\r\n                                             + ' admin' }\r\n                               onClick = { this.DeleteAdmin }\r\n                            />\r\n                          </button>\r\n                          :\r\n                          <button className = \"delete-admin\"\r\n                                  style = { {'pointerEvents': 'none'} }\r\n                                  disabled = { true }\r\n                          >\r\n                            <i className = { 'fa fa-trash slash' + index\r\n                                             + ' admin' }\r\n                            />\r\n                          </button>\r\n                      }\r\n                    </div>\r\n                );\r\n              }) }\r\n            </div>\r\n          </div>\r\n          <div className = \"col-md-6\">\r\n            <div className = \"box\">\r\n              <h3>Coaches:</h3>\r\n              <button className = { 'add-admin btn btn-primary btn-xl text-uppercase' }\r\n                      onClick = { this.createCoach }\r\n              >\r\n                Create New Coach\r\n              </button>\r\n              { this.state.coaches.map((coach, index) => {\r\n                const timestamp = coach.Bdate.split(/[T.]+/)[0];\r\n                // noinspection JSUnresolvedVariable\r\n                const gender = coach.Gender === 1 ? 'Male' : 'Female';\r\n                return (\r\n                    <div className = \"admin\" key = { index }>\r\n                      <div className = \"img\">\r\n                        <img className = \"img-responsive\"\r\n                             src = { adminAvatar }\r\n                             alt = \"admin\"\r\n                        />\r\n                      </div>\r\n                      <div className = \"info\">\r\n                        <h3>{ coach.Name } { coach.Surname }</h3>\r\n                        <p>\r\n                          Username: { coach.username }<br />\r\n                          Email: { coach.Email }<br />\r\n                          BDate: { timestamp }<br />\r\n                          Gender: { gender }\r\n                        </p>\r\n                      </div>\r\n                      { (coach.username !== ('headcoach01')) ?\r\n                          <button className = \"delete-admin\"\r\n                          >\r\n                            <i className = { 'fa fa-trash ' + index\r\n                                             + ' coach' }\r\n                               onClick = { this.DeleteCoach }\r\n                            />\r\n                          </button>\r\n                          :\r\n                          <button className = \"delete-admin\"\r\n                                  style = { {'pointerEvents': 'none'} }\r\n                                  disabled = { true }\r\n                          >\r\n                            <i className = { 'fa fa-trash slash' + index\r\n                                             + ' coach' }\r\n                            />\r\n                          </button>\r\n                      }\r\n                    </div>\r\n                );\r\n              }) }\r\n            </div>\r\n          </div>\r\n\r\n          <ToggleModal\r\n              modal = { this.state.modal }\r\n              toggle = { this.toggleModal }\r\n              modalSize = { 'md' }\r\n              modalHeader = { 'Create New Staff' }\r\n              modalBody = {\r\n                <CreateStaffMember staffType = { this.state.staffType }\r\n                                   onSuccess = { this.addStaffMember }\r\n                                   coaches = { this.state.coaches }\r\n                                   admins = { this.state.admins }\r\n                                   toggle = { this.toggleModal }\r\n                /> }\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StaffList;","import React, {Component} from 'react';\r\n\r\nclass Leader extends Component {\r\n  render() {\r\n    return (\r\n        <div className = \"leaderboard__result\">\r\n          { this.props.title } - { this.props.number }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Leader;","import React, {Component} from 'react';\r\nimport Leader             from './Leader';\r\n\r\nclass LeaderBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sortOrder: this.props.sortAsc,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      sortOrder: this.props.sortAsc,\r\n    });\r\n  }\r\n\r\n  numberWithCommas(num) {\r\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  }\r\n\r\n  render() {\r\n    let self = this;\r\n    let dataSort = this.props.dataSort;\r\n    let dataTitle = this.props.dataTitle;\r\n    let sortAsc = this.props.sortAsc;\r\n    let numberComma = this.props.numberComma;\r\n    let sortCustom = this.props.data.sort(function(a, b) {\r\n      if (sortAsc) {\r\n        return parseFloat(b[dataSort]) - parseFloat(a[dataSort]);\r\n      } else {\r\n        return parseFloat(a[dataSort]) - parseFloat(b[dataSort]);\r\n      }\r\n    });\r\n    const leaders = sortCustom.map(function(leader, i) {\r\n      let number = leader[dataSort];\r\n      let title = leader[dataTitle];\r\n      if (numberComma === 'true') {\r\n        number = self.numberWithCommas(number);\r\n      }\r\n      return <Leader key = { i } title = { title } number = { number } />;\r\n    });\r\n\r\n    return (\r\n        <div className = \"col-md-6 panel panel-default\">\r\n          <div className = \"leaderboard__wrapper\">\r\n            <div data-testid={'title'} className = \"leaderboard__title panel-heading\">\r\n              <h5>{ this.props.title }</h5>\r\n            </div>\r\n            <div data-testid={'leaders'} className = \"leaderboard__results\">\r\n              { leaders }\r\n            </div>\r\n            {/*\r\n             <div className=\"sort-btn\">\r\n             <div href=\"#\">Sort</div>\r\n             <div>{this.state.sortOrder}</div>\r\n             </div>\r\n             */ }\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaderBoard;","import React, {Component} from 'react';\r\nimport Chart              from 'chart.js';\r\n\r\nclass Graphs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    if (!this.props.testLoading) {\r\n      this.createGraph = this.createGraph.bind(this);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.testLoading) {\r\n      this.createGraph();\r\n    }\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.graphData !== this.props.graphData) {\r\n      this.state.myChart.destroy();\r\n      if (!this.props.testLoading) {\r\n        this.createGraph();\r\n      }\r\n    }\r\n  }\r\n\r\n  createGraph() {\r\n    Chart.defaults.scale.ticks.beginAtZero = true;\r\n    Chart.defaults.scale.gridLines.zeroLineColor = 'rgba(255, 255, 255, 0.1)';\r\n    Chart.defaults.scale.gridLines.color = 'rgba(255, 255, 255, 0.02)';\r\n\r\n    const colors = [\r\n      '#4BC0C0',\r\n      '#FF6384',\r\n      '#FFCD56',\r\n      '#3FC62E',\r\n      '#E55AFF',\r\n      '#CB843F',\r\n      '#F583FF',\r\n      '#49FF60',\r\n      '#4CC6BF',\r\n      '#F3F6FF',\r\n    ];\r\n    const hoverColors = [\r\n      '#287FC0',\r\n      '#FF001C',\r\n      '#F6EC04',\r\n      '#17920F',\r\n      '#9E00FF',\r\n      '#CB5F0B',\r\n      '#EA1DFF',\r\n      '#12D021',\r\n      '#0D9DB4',\r\n      '#343438',\r\n    ];\r\n    const ys = this.props.graphData.ys.map((data, index) => {\r\n      data['fill'] = false;\r\n      data['lineTension'] = .4;\r\n      data['pointBorderColor'] = false;\r\n      this.props.graphData.type === 'bar'\r\n          ? data['borderColor'] = colors\r\n          : data['borderColor'] = colors[index];\r\n      data['borderWidth'] = 2;\r\n      this.props.graphData.type === 'bar'\r\n          ? data['backgroundColor'] = colors\r\n          : data['backgroundColor'] = colors[index];\r\n      data['showLine'] = true;\r\n      return data;\r\n    });\r\n    const chart1 = document.getElementById('myChart').getContext('2d');\r\n    const myChart = new Chart(chart1, {\r\n      type   : this.props.graphData.type,\r\n      data   : {\r\n        labels              : this.props.graphData.xs,\r\n        datasets            : ys,\r\n        hoverBackgroundColor: hoverColors,\r\n        borderColor         : '#252830',\r\n      },\r\n      options: {\r\n        title           : {display: false},\r\n        animation       : {duration: 2000},\r\n        responsive      : true,\r\n        aspectRatio     : 3,\r\n        maintainAspectRatio: true,\r\n        defaultFontColor: '#999999',\r\n        defaultFontSize : 10,\r\n        tooltips        : {\r\n          enabled    : true,\r\n          borderColor: 'white',\r\n        },\r\n        legend          : {\r\n          display  : true,\r\n          align    : 'center',\r\n          fullWidth: true,\r\n        },\r\n      },\r\n    });\r\n    this.setState({myChart});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = \"charts\">\r\n          <div className = \"container-fluid\">\r\n            <div className = \"row\">\r\n              <div className = \"col-md-12\">\r\n                <div className = \"chart-container\">\r\n                  {/*<h3>{ this.props.graphData.title }</h3>*/ }\r\n                  <canvas id = \"myChart\" style={{height: '200px'}} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graphs;","import React, {Component} from 'react';\r\nimport LineChart          from '../common/LineChart';\r\nimport PieChart           from '../common/PieChart';\r\nimport StaffList          from '../common/StaffList';\r\nimport LeaderBoard        from '../common/LeaderBoard';\r\nimport Graphs             from '../common/Graphs';\r\n// noinspection ES6CheckImport\r\nimport {Redirect}         from 'react-router-dom';\r\nimport '../assets/styles/UIDashboard.css';\r\nimport Spinner            from '../Spinner';\r\nimport {\r\n  allUsersCount,\r\n  allVisitCount,\r\n  loggedInVisit,\r\n  updateDashboardVisit,\r\n  getServerConnections,\r\n  getUserCount,\r\n  getPageVisits,\r\n  getEnrollCount,\r\n  getGenderChart,\r\n  getClassDaysChart,\r\n  getPersonalDaysChart,\r\n  getAgeRange,\r\n  getCoachesDayWork,\r\n  getCoachesPersonalWork,\r\n}                         from '../../repository';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\n\r\nclass UIDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading         : true,\r\n      // Set to first option of select\r\n      firstGraphLoaded: false,\r\n      selectedGraph   : 0,\r\n      graphData       : [],\r\n      // Donought chats data\r\n      genders         : {id: 'gender', data: [], labels: []},\r\n      enroll          : {id: 'enroll', data: [], labels: []},\r\n      personal        : {id: 'personal', data: [], labels: []},\r\n      // Leaderboards data\r\n      uiDataPageViews : [],\r\n      uiDataUserTypes : [],\r\n    };\r\n\r\n    this.handleChart = this.handleChart.bind(this);\r\n    this.visitCounts = this.visitCounts.bind(this);\r\n    this.userCounts = this.userCounts.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Page Visits\r\n    loggedInVisit().then();\r\n    updateDashboardVisit().then();\r\n    // Leaderboards\r\n    allVisitCount().then(response => this.visitCounts(response));\r\n    allUsersCount().then(response => this.userCounts(response));\r\n    // Pie Charts\r\n    getGenderChart().then(response => this.setState({\r\n      genders: {\r\n        id    : 'gender',\r\n        labels: ['Male', 'Female'],\r\n        data  : response.map(val => val.count),\r\n      },\r\n    }));\r\n    getClassDaysChart().then(response => this.setState({\r\n      enroll: {\r\n        id    : 'enroll',\r\n        labels: response.map(val => val.Day),\r\n        data  : response.map(val => val.count),\r\n      },\r\n    }));\r\n    getPersonalDaysChart().then(response => this.setState({\r\n      personal: {\r\n        id    : 'personal',\r\n        labels: response.map(val => this.indexToDay(val.Day - 1)),\r\n        data  : response.map(val => val.count),\r\n      },\r\n    }));\r\n    // Graphs\r\n    this.getGraphData.then(() => {\r\n      this.setState({loading: false});\r\n    });\r\n  }\r\n\r\n  getGraphData = new Promise((resolve) => {\r\n    getCoachesDayWork().then(response => {\r\n      let graphData = [...this.state.graphData];\r\n      const finalCoachData = [];\r\n      this.groupBy(response, response => response.Coach_ID)\r\n          .forEach(val => {\r\n            const coachData = {\r\n              label: `${ val[0].CoachName } ${ val[0].Surname }`,\r\n              data : [0, 0, 0, 0, 0, 0, 0],\r\n            };\r\n            for (let v of val) {\r\n              const dayIndex = this.dayToIndex(v.Day);\r\n              if (dayIndex === -1) {\r\n                continue;\r\n              }\r\n              // noinspection JSUnresolvedVariable\r\n              coachData.data[dayIndex] += v.Participants;\r\n            }\r\n            finalCoachData.push(coachData);\r\n          });\r\n      graphData.push({\r\n        title: 'Participants in Coaches Classes',\r\n        type : 'line',\r\n        xs   : [\r\n          'Monday',\r\n          'Tuesday',\r\n          'Wednesday',\r\n          'Thursday',\r\n          'Friday',\r\n          'Saturday',\r\n          'Sunday',\r\n        ],\r\n        ys   : finalCoachData,\r\n      });\r\n      this.setState({graphData, firstGraphLoaded: true});\r\n    })\r\n        .then(() => getCoachesPersonalWork().then(response => {\r\n          let graphData = [...this.state.graphData];\r\n          const finalCoachData = [];\r\n          this.groupBy(response, response => response.Coach_ID)\r\n              .forEach(val => {\r\n                const coachData = {\r\n                  label: `${ val[0].CoachName } ${ val[0].Surname }`,\r\n                  data : [0, 0, 0, 0, 0, 0, 0],\r\n                };\r\n                for (let v of val) {\r\n                  const dayIndex = v.Day;\r\n                  if (dayIndex < 0 || dayIndex > 6) {\r\n                    continue;\r\n                  }\r\n                  // noinspection JSUnresolvedVariable\r\n                  coachData.data[dayIndex] += v.Participants;\r\n                }\r\n                finalCoachData.push(coachData);\r\n              });\r\n          graphData.push({\r\n            title: 'Participants in Coaches Personal Classes',\r\n            type : 'line',\r\n            xs   : [\r\n              'Monday',\r\n              'Tuesday',\r\n              'Wednesday',\r\n              'Thursday',\r\n              'Friday',\r\n              'Saturday',\r\n              'Sunday',\r\n            ],\r\n            ys   : finalCoachData,\r\n          });\r\n          this.setState({graphData, firstGraphLoaded: true});\r\n        }))\r\n        .then(() => getAgeRange().then(response => {\r\n          let graphData = [...this.state.graphData];\r\n          graphData.push({\r\n            title: 'Age Range User Count',\r\n            type : 'bar',\r\n            xs   : Object.keys(response),\r\n            ys   : [{label: 'Users', data: Object.values(response)}],\r\n          });\r\n          this.setState({graphData});\r\n        }))\r\n        .then(() => resolve());\r\n  });\r\n\r\n  dayToIndex = (day) => {\r\n    switch (day) {\r\n      case 'Monday':\r\n        return 0;\r\n      case 'Tuesday':\r\n        return 1;\r\n      case 'Wednesday':\r\n        return 2;\r\n      case 'Thursday':\r\n        return 3;\r\n      case 'Friday':\r\n        return 4;\r\n      case 'Saturday':\r\n        return 5;\r\n      case 'Sunday':\r\n        return 6;\r\n      default:\r\n        return -1;\r\n    }\r\n  };\r\n\r\n  indexToDay = (day) => {\r\n    switch (parseInt(day)) {\r\n      case 0:\r\n        return 'Monday';\r\n      case 1:\r\n        return 'Tuesday';\r\n      case 2:\r\n        return 'Wednesday';\r\n      case 3:\r\n        return 'Thursday';\r\n      case 4:\r\n        return 'Friday';\r\n      case 5:\r\n        return 'Saturday';\r\n      case 6:\r\n        return 'Sunday';\r\n      default:\r\n        return 'Undefined';\r\n    }\r\n  };\r\n\r\n  groupBy(list, keyGetter) {\r\n    const map = new Map();\r\n    list.forEach((item) => {\r\n      const key = keyGetter(item);\r\n      const collection = map.get(key);\r\n      if (!collection) {\r\n        map.set(key, [item]);\r\n      } else {\r\n        collection.push(item);\r\n      }\r\n    });\r\n    return map;\r\n  }\r\n\r\n  userCounts(response) {\r\n    let types = [];\r\n    for (let v of response.types) {\r\n      // noinspection JSUnfilteredForInLoop\r\n      types.push({type: v.level, count: v.count});\r\n    }\r\n    this.setState({uiDataUserTypes: types});\r\n  }\r\n\r\n  visitCounts(response) {\r\n    let visits = [];\r\n    for (let v in response.visits[0]) {\r\n      let page = null;\r\n      // noinspection JSUnfilteredForInLoop\r\n      switch (v) {\r\n        case 'HOME_PAGE':\r\n          page = '/classes';\r\n          break;\r\n        case 'CLASSES':\r\n          page = '/ (Logged Out)';\r\n          break;\r\n        case 'ABOUT_US':\r\n          page = '/about';\r\n          break;\r\n        case 'PROFILE_USER':\r\n          page = '/user/profile';\r\n          break;\r\n        case 'PROFILE_COACH':\r\n          page = '/coach/profile';\r\n          break;\r\n        case 'PROFILE_ADMIN':\r\n          page = '/admin/profile';\r\n          break;\r\n        case 'ADMIN_DASHBOARD':\r\n          page = '/admin/profile/dashboard';\r\n          break;\r\n        case 'LOGGED_IN':\r\n          page = '/ (Logged In)';\r\n          break;\r\n        default:\r\n          continue;\r\n      }\r\n      // noinspection JSUnfilteredForInLoop\r\n      visits.push({page: page, views: response.visits[0][v]});\r\n    }\r\n    this.setState({uiDataPageViews: visits});\r\n  };\r\n\r\n  handleChart(e) {\r\n    this.setState({[e.target.name]: Number(e.target.value)});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n          { this.state.loading ?\r\n              <Spinner />\r\n              :\r\n              <div id = \"UIDashboard\">\r\n                <AnimatedOnScroll animationIn = \"fadeIn\">\r\n                  <div className = { 'container' }>\r\n                    { (this.props.userLevel === 'admin') ? '' :\r\n                        <Redirect to = \"/\" /> }\r\n                    <div className = \"row line__chart-wrapper\">\r\n                      <LineChart id = \"server-connections\"\r\n                                 chartSpeed = \"4250\"\r\n                                 bgColor = \"#1BC98E\"\r\n                                 title = \"Server\"\r\n                                 getData = { getServerConnections }\r\n                      />\r\n                      <LineChart id = \"page-visits\"\r\n                                 chartSpeed = \"6100\"\r\n                                 bgColor = \"#E64759\"\r\n                                 title = \"Page Visits\"\r\n                                 getData = { getPageVisits }\r\n                      />\r\n                      <LineChart id = \"user-count\"\r\n                                 chartSpeed = \"4900\"\r\n                                 bgColor = \"#9F86FF\"\r\n                                 title = \"Users\"\r\n                                 getData = { getUserCount }\r\n                      />\r\n                      <LineChart id = \"enrollment-count\"\r\n                                 chartSpeed = \"3200\"\r\n                                 bgColor = \"#E4D836\"\r\n                                 title = \"Enrolled\"\r\n                                 getData = { getEnrollCount }\r\n                      />\r\n                    </div>\r\n                    <div className = \"row pie__chart-wrapper\">\r\n                      <PieChart title = \"Genders\"\r\n                                data = { this.state.genders.data }\r\n                                labels = { this.state.genders.labels }\r\n                                id = { this.state.genders.id }\r\n                      />\r\n                      <PieChart title = \"Enrolled Classes\"\r\n                                data = { this.state.enroll.data }\r\n                                labels = { this.state.enroll.labels }\r\n                                id = { this.state.enroll.id }\r\n                      />\r\n                      <PieChart title = \"Personal Classes\"\r\n                                data = { this.state.personal.data }\r\n                                labels = { this.state.personal.labels }\r\n                                id = { this.state.personal.id }\r\n                      />\r\n                    </div>\r\n                    <div className = \"select-chart\">\r\n                      <select name = \"selectedGraph\"\r\n                              onChange = { this.handleChart }\r\n                      >\r\n                        {/*<option selected disabled>Choose a chart to display</option>*/ }\r\n                        <option value = \"0\">Participants in Coaches Classes\r\n                        </option>\r\n                        <option value = \"1\">Participants in Coaches Personal\r\n                                            Classes\r\n                        </option>\r\n                        <option value = \"2\">Age Range User Count</option>\r\n                      </select>\r\n                    </div>\r\n                    { this.state.firstGraphLoaded &&\r\n                      <Graphs graphData = { this.state.graphData[this.state.selectedGraph] } /> }\r\n                    <StaffList />\r\n                    <div className = \"row leaderboards\">\r\n                      <LeaderBoard data = { this.state.uiDataUserTypes }\r\n                                   sortAsc = { false }\r\n                                   title = \"User Types\"\r\n                                   dataSort = \"count\"\r\n                                   dataTitle = \"type\"\r\n                      />\r\n                      <LeaderBoard data = { this.state.uiDataPageViews }\r\n                                   sortAsc = { true }\r\n                                   title = \"Most Visited Pages\"\r\n                                   dataSort = \"views\"\r\n                                   dataTitle = \"page\"\r\n                                   numberComma = \"true\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </AnimatedOnScroll>\r\n              </div>\r\n          }\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UIDashboard;","import React, {Component} from 'react';\r\nimport {Link}             from 'react-router-dom';\r\nimport '../assets/styles/NotFound.css';\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n        <div id = \"notfound\">\r\n          <div className = \"notfound\">\r\n            <div className = \"notfound-404\">\r\n              <div/>\r\n              <h1>404</h1>\r\n            </div>\r\n            <h2>Page not found</h2>\r\n            <p>The page you are looking for might have been removed had its name\r\n               changed or is temporarily unavailable.</p>\r\n            <Link to = { '/' }>home page</Link>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport default NotFound;","import React, {Component} from 'react';\r\n// import Flippy, { FrontSide, BackSide } from 'react-flippy';\r\nimport '../assets/styles/loginStyle.css';\r\n// import {Link} from 'react-router-dom';\r\nimport 'react-bootstrap/';\r\nimport Recaptcha          from 'react-recaptcha';\r\n\r\nimport {logIn, signUp} from '../../repository';\r\nimport history         from '../../history';\r\n\r\nclass LoginModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fname           : '',\r\n      lname           : '',\r\n      username        : '',\r\n      password        : '',\r\n      repeatedPassword: '',\r\n      email           : '',\r\n      gender          : '',\r\n      med             : null,\r\n      age             : '',\r\n      bDate           : '',\r\n      toggle          : true,\r\n      value           : true,\r\n      isVerified      : false,\r\n      userVerify      : '',\r\n      token           : '',\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onRadioChange = this.onRadioChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    // this.recaptchaLoaded = this.recaptchaLoaded.bind(this);\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    // this.onPassword = this.onPassword.bind(this);\r\n  }\r\n\r\n  verifyCallback = (response) => {\r\n    if (response) {\r\n      this.setState({isVerified: true});\r\n    }\r\n  };\r\n  handleChange = (e) => {\r\n    if (e.target.name === 'bDate') {\r\n      this.setState({[e.target.name]: e.target.value});\r\n      this.calcDate(e);\r\n    } else {\r\n      this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n  };\r\n  onRadioChange = (e) => {\r\n    this.setState({gender: e.target.value});\r\n  };\r\n  changeSign = () => {\r\n    this.setState({toggle: !this.state.toggle});\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const crypto = require('crypto');\r\n    // noinspection JSUnusedLocalSymbols\r\n    // const newToken = crypto.randomBytes(10).toString('hex');\r\n\r\n    const Crypto = require('cryptr');\r\n    const cryptr = new Crypto('ffn_private_key_!!!!');\r\n\r\n    // noinspection JSUnusedLocalSymbols\r\n    crypto.createHmac('sha256', this.state.password)\r\n        .update('I love cupcakes')\r\n        .digest('hex');\r\n\r\n    const encryptedString = cryptr.encrypt(this.state.password);\r\n\r\n    const dataLogIn = {\r\n      username: this.state.username,\r\n      password: encryptedString,\r\n    };\r\n    // console.log(this.state.password,  this.state.username);\r\n    logIn(dataLogIn)\r\n        .then(data => {\r\n          if (!data.level) {\r\n            throw Error;\r\n          }\r\n          this.props.toggle();    // Close Modal\r\n          this.props.setUserLevel(data.level);\r\n          history.push('/user/profile');\r\n        })\r\n        .catch(err => alert(err));\r\n  };\r\n  onSignUp = (e) => {\r\n    e.preventDefault();\r\n    const ver = 0;\r\n    if (this.state.password !== this.state.repeatedPassword) {\r\n      alert('Password dont match');\r\n    } else {\r\n      if (this.state.isVerified) {\r\n        const crypto = require('crypto');\r\n        const newToken = crypto.randomBytes(10).toString('hex');\r\n        // Create output query\r\n        const Crypto = require('cryptr');\r\n        const cryptr = new Crypto('ffn_private_key_!!!!');\r\n\r\n        const encryptedString = cryptr.encrypt(this.state.password);\r\n\r\n        const dataSign = {\r\n          username: this.state.username,\r\n          password: encryptedString,\r\n          fname   : this.state.fname,\r\n          lname   : this.state.lname,\r\n          email   : this.state.email,\r\n          age     : this.state.age,\r\n          gender  : this.state.gender,\r\n          level   : this.state.level,\r\n          bDate   : this.state.bDate,\r\n          verify  : ver,\r\n          hash    : newToken,\r\n        };\r\n        signUp(dataSign)\r\n            .then(() => {\r\n                  alert(\r\n                      'Successful sign up.Please proceed to your email, so you can verify your account.');\r\n                  this.props.toggle();\r\n                },\r\n            )\r\n            .catch(err => alert(err));\r\n      } else {\r\n        alert(\r\n            'Please proceed with the recaptcha to verify that you are a human!');\r\n      }\r\n    }\r\n  };\r\n  onClose = () => {\r\n    this.props.toggle();\r\n    history.push('/forgotPassword');\r\n  };\r\n  calcDate = (dDate) => {\r\n    let thenD = dDate.target.value;\r\n    let str = thenD.split('-');\r\n    let now = new Date();\r\n    let ageDif = now.getFullYear() - str[0];\r\n    this.setState({age: ageDif});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n        <div className = { 'wrapper' }\r\n             id = { 'LoginModal' }\r\n             tabIndex = { '-1' }\r\n             role = { 'dialog' }\r\n             aria-labelledby = { 'exampleModalLabel' }\r\n             aria-hidden = { 'true' }\r\n        >\r\n          <input type = { 'checkbox' }\r\n                 name = { 'flipper__checkbox' }\r\n                 id = { 'flipper__checkbox' }\r\n                 className = { 'flipper__checkbox' }\r\n                 hidden\r\n          />\r\n\r\n          <div className = { 'form__container' }>\r\n            { this.state.toggle ?\r\n                <div className = { 'form__login' }>\r\n                  <h1 className = { 'form__header' }>Login</h1>\r\n                  <div className = { 'imgcontainer' }>\r\n                    {/*<div className = { 'cursive' }>*/ }\r\n\r\n                    {/*</div>*/ }\r\n                  </div>\r\n\r\n                  <form id = { 'loginForm' }\r\n                        action = { '#' }\r\n                        method = { 'post' }\r\n                        className = { 'form' }\r\n                  >\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'username' }>\r\n                                    <span className = { 'label__icon fa fa-user coloring' }>\r\n                                    </span>\r\n                      </label>\r\n                      <input id = { 'username' }\r\n                             name = { 'username' }\r\n                             className = { 'form_element' }\r\n                             type = { 'text' }\r\n                             pattern = \"^ *[a-zA-Z0-9]+.*\"\r\n                             placeholder = { 'Username' }\r\n                             required\r\n                             onChange = { this.handleChange }\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = \"password\">\r\n                                    <span className = \"label__icon fa fa-lock coloring\">\r\n                                    </span>\r\n                      </label>\r\n                      <input type = { 'password' }\r\n                             className = { 'form_element' }\r\n                             id = { 'pword' }\r\n                             pattern = { '^ *[a-zA-Z]+.*' }\r\n                             placeholder = { 'Enter Password' }\r\n                             name = { 'password' }\r\n                             required\r\n                             onChange = { this.handleChange }\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <input className = { 'form__button' }\r\n                             type = { 'submit' }\r\n                             value = { 'Login' }\r\n                             onClick = { this.onSubmit }\r\n                      />\r\n                    </fieldset>\r\n\r\n                    <fieldset className = { 'form__group' }\r\n                              style = { {'paddingTop': 0} }\r\n                    >\r\n                      {/*<label htmlFor = { 'checkbox' }>*/ }\r\n                      {/*  <input id = { 'checkbox' }*/ }\r\n                      {/*         name = { 'checkbox' }*/ }\r\n                      {/*         className = { 'checkbox--forget' }*/ }\r\n                      {/*         type = { 'checkbox' }*/ }\r\n                      {/*  />*/ }\r\n                      {/*  <span className = { 'subtitle' }>Remember me</span>*/ }\r\n                      {/*</label>*/ }\r\n                      <small>\r\n                        <button style = { {\r\n                          'backgroundColor': 'transparent',\r\n                          'border'         : 'none',\r\n                          'paddingLeft'    : 0,\r\n                        } }\r\n                                className = { 'form__link' }\r\n                                onClick = { this.onClose }\r\n                        >Forgot your password?\r\n                        </button>\r\n                        <br />\r\n                        {/*<span className = { 'subtitle' }> Not a member yet?</span>*/}\r\n                        {/*<small className = { 'form__link' }*/}\r\n                        {/*       onClick = { this.changeSign }*/}\r\n                        {/*>*/}\r\n                        {/*  Create your account*/}\r\n                        {/*</small>*/}\r\n                        {/*.*/}\r\n                      </small>\r\n                    </fieldset>\r\n                  </form>\r\n                </div>\r\n                :\r\n                <div className = { 'form__signup' }>\r\n                  <h1 className = { 'form__header' }>Sign Up</h1>\r\n                  <form id = { 'signupForm' }\r\n                        method = { 'post' }\r\n                        className = { 'form' }\r\n                  >\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'signUpName' }>\r\n                                        <span className = { 'label__icon fa fa-user coloring' }>\r\n                                        </span>\r\n                      </label>\r\n                      <input name = { 'fname' }\r\n                             className = { 'form_element signUpName' }\r\n                             type = { 'text' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'First Name' }\r\n                             required\r\n                      />\r\n                      <span>\r\n                                           </span>\r\n                      <input name = { 'lname' }\r\n                             className = { 'form_element signUpName' }\r\n                             type = { 'text' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Last Name' }\r\n                             required\r\n                      />\r\n\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'username' }>\r\n                                        <span className = { 'label__icon fa fa-user coloring' }>\r\n                                        </span>\r\n                      </label>\r\n                      <input id = { 'signUpUsername' }\r\n                             name = { 'username' }\r\n                             className = { 'form__element' }\r\n                             type = { 'text' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Username' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'signUpMail' }>\r\n                        <span className = { 'label__icon fa fa-envelope coloring' }>\r\n                        </span>\r\n                      </label>\r\n                      <input id = { 'signUpMail' }\r\n                             name = { 'email' }\r\n                             className = { 'form__element' }\r\n                             type = { 'email' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Email' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'signUpPassword' }>\r\n                        <span className = { 'label__icon fa fa-lock coloring' }>\r\n                        </span>\r\n                      </label>\r\n                      <input id = { 'signUpPassword' }\r\n                             name = { 'password' }\r\n                             className = { 'form__element' }\r\n                             type = { 'password' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Password' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'signUpPasswordRepeat' }>\r\n                        <span className = { 'label__icon fa fa-lock coloring' }>\r\n                        </span>\r\n                      </label>\r\n                      <input id = \"signUpPasswordRepeat\"\r\n                             name = { 'repeatedPassword' }\r\n                             className = { 'form__element' }\r\n                             type = { 'password' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Repeat Password' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'age' } id = { 'birthday' }>\r\n                        <span className = { 'subtitle' }> Birth Date: </span>\r\n                        <span className = { 'fas fa-birthday-cake' }>\r\n                                        </span>\r\n                      </label>\r\n                      <input id = { 'signUpAge' }\r\n                             name = { 'bDate' }\r\n                             className = { 'form_element' }\r\n                             type = { 'date' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Birth Date' }\r\n                             min = { '1900-01-01' }\r\n                             max = { '2010-01-01' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <div className = { 'form__radio' }>\r\n                        <label className = { 'label__style' }>Male\r\n                          <input type = { 'radio' }\r\n                                 value = { '1' }\r\n                                 checked = { this.state.gender === '1' }\r\n                                 onChange = { this.onRadioChange }\r\n                          />\r\n                          <span className = { 'checkmark' }/>\r\n                        </label>\r\n                        <label className = { 'label__style' }>Female\r\n                          <input type = { 'radio' }\r\n                                 value = { '2' }\r\n                                 checked = { this.state.gender === '2' }\r\n                                 onChange = { this.onRadioChange }\r\n                          />\r\n                          <span className = { 'checkmark' }/>\r\n                        </label>\r\n                      </div>\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <input className = { 'form__button' }\r\n                             type = { 'submit' }\r\n                             value = { 'Sign up' }\r\n                             onClick = { this.onSignUp }\r\n                      />\r\n                    </fieldset>\r\n                    <Recaptcha\r\n                        elementID = { 'g-recaptcha' }\r\n                        sitekey = \"6Lf0od8UAAAAAFoog9iFIpVd8rcPxBwHpUKpnCua\"\r\n                        render = \"explicit\"\r\n                        theme = \"dark\"\r\n                        verifyCallback = { this.verifyCallback }\r\n                    />\r\n                    <small>\r\n                      <span className = { 'subtitle' }> Are you already a member?</span>\r\n                      <label htmlFor = { 'flipper__checkbox' }\r\n                             onClick = { this.changeSign }\r\n                             className = { 'form__link' }\r\n                      >\r\n                        Click here to login\r\n                      </label>\r\n                      .\r\n                    </small>\r\n                  </form>\r\n                </div>\r\n            }\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginModal;","import React  from 'react';\r\nimport '../assets/styles/SignInUpModal.css';\r\nimport ToggleModal from \"../common/ToggleModal\";\r\nimport LoginModal from \"../common/LoginModal\";\r\n\r\nclass LoginAndroid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: true,\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({showModal: true});\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <ToggleModal\r\n                modal = { this.state.showModal }\r\n                toggle = { this.toggleModal }\r\n                modalSize = { 'md' }\r\n                modalHeader = { 'Login Form' }\r\n                modalBody = { <LoginModal /> }\r\n                setUserLevel = { this.props.setUserLevel }\r\n            />\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginAndroid;\r\n","import React, {Component}                from 'react';\r\n// noinspection ES6CheckImport\r\nimport {Route, Router, Switch, Redirect} from 'react-router-dom';\r\nimport PageWrapper                       from './components/PageWrapper';\r\nimport Home                              from './components/pages/Home';\r\nimport AboutUs                           from './components/pages/AboutUs';\r\nimport ProfileUser                       from './components/pages/ProfileUser';\r\nimport ProfileCoach                      from './components/pages/ProfileCoach';\r\nimport ProfileAdmin                      from './components/pages/ProfileAdmin';\r\nimport Classes                           from './components/pages/Classes';\r\nimport ScrollToTop                       from './components/common/ScrollToTop';\r\nimport PrivateRoute                      from './components/PrivateRoute';\r\nimport forgotPassword\r\n                                         from './components/pages/ForgotPassword';\r\nimport VerifyEmail                       from './components/pages/VerifyEmail';\r\nimport ResetPassword\r\n                                         from './components/pages/ResetPassword';\r\nimport history                           from './history';\r\nimport {getUserLevel, isAuthenticated}   from './repository';\r\nimport UIDashboard                       from './components/pages/UIDashboard';\r\nimport Tabletop                          from 'tabletop';\r\nimport Spinner                           from './components/Spinner';\r\nimport NotFound                          from './components/common/NotFound';\r\nimport LoginAndroid                      from './components/pages/LoginAndroid';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userLevel     : undefined,\r\n      stylesheetData: {},\r\n      loading       : true,\r\n    };\r\n    this.setUserLevel = this.setUserLevel.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Persist on state\r\n    if (isAuthenticated()) {\r\n      getUserLevel().then(level => this.setUserLevel(level));\r\n    }\r\n\r\n    // noinspection JSUnusedGlobalSymbols\r\n    Tabletop.init({\r\n      key        : process.env.REACT_APP_TABLETOP_API_KEY,\r\n      callback   : googleData => {\r\n        this.setState({stylesheetData: this.readStylesheetInfo(googleData)},\r\n            () => {\r\n              this.setState({loading: false});\r\n            });\r\n      },\r\n      simpleSheet: false,\r\n    });\r\n  }\r\n\r\n  readStylesheetInfo(data) {\r\n    const home = data['Home'];\r\n    const classes = data['Classes'];\r\n    const about = data['About'];\r\n    const footer = data['Footer'];\r\n    const jsonData = {};\r\n\r\n    // Home\r\n    const jsonHome = {'carousel': [], 'services': []};\r\n    home.columnNames.forEach(col => {\r\n      if (col.includes('carousel')) {\r\n        jsonHome['carousel'].push({\r\n          'label': home.elements[0][col],\r\n          'text' : home.elements[1][col],\r\n          'src'  : home.elements[2][col],\r\n        });\r\n      }\r\n      if (col.includes('services')) {\r\n        jsonHome['services'].push({\r\n          'title'  : home.elements[0][col],\r\n          'message': home.elements[1][col],\r\n          'icon'   : home.elements[2][col],\r\n        });\r\n      }\r\n    });\r\n\r\n    // Classes\r\n    const jsonClasses = {'classes': [], 'timetable': {}};\r\n    classes.columnNames.forEach(col => {\r\n      if (col.includes('class')) {\r\n        jsonClasses['classes'].push({\r\n          'title': classes.elements[0][col],\r\n          'text' : classes.elements[1][col],\r\n          'src'  : classes.elements[2][col],\r\n        });\r\n      }\r\n      if (col.includes('timetable')) {\r\n        jsonClasses['timetable'] = {'src': classes.elements[0][col]};\r\n      }\r\n    });\r\n\r\n    // About\r\n    const jsonAbout = {'coach': [], 'contact': {}};\r\n    about.columnNames.forEach(col => {\r\n      if (col.includes('coach')) {\r\n        jsonAbout['coach'].push({\r\n          'name': about.elements[0][col],\r\n          'text': about.elements[1][col],\r\n          'src' : about.elements[2][col],\r\n        });\r\n      }\r\n      if (col.includes('contact')) {\r\n        jsonAbout['contact']['address'] = about.elements[0][col];\r\n        jsonAbout['contact']['phone'] = about.elements[1][col];\r\n        jsonAbout['contact']['email'] = about.elements[2][col];\r\n        jsonAbout['contact']['facebook'] = about.elements[3][col];\r\n        jsonAbout['contact']['instagram'] = about.elements[4][col];\r\n      }\r\n    });\r\n\r\n    // Footer\r\n    const jsonFooter = {'social': {}, 'about-us': {}, 'about-club': []};\r\n    footer.columnNames.forEach(col => {\r\n      if (col.includes('social')) {\r\n        jsonFooter['social']['text'] = footer.elements[0][col];\r\n        jsonFooter['social']['facebook'] = footer.elements[1][col];\r\n        jsonFooter['social']['instagram'] = footer.elements[2][col];\r\n      }\r\n      if (col.includes('about-us')) {\r\n        jsonFooter['about-us']['address'] = footer.elements[0][col];\r\n        jsonFooter['about-us']['email'] = footer.elements[1][col];\r\n      }\r\n      if (col.includes('about-club')) {\r\n        for (let index of footer.elements) {\r\n          if (index['about-club']) {\r\n            jsonFooter['about-club'].push(index['about-club']);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    jsonData['Home'] = jsonHome;\r\n    jsonData['Class'] = jsonClasses;\r\n    jsonData['About'] = jsonAbout;\r\n    jsonData['Footer'] = jsonFooter;\r\n\r\n    return jsonData;\r\n  }\r\n\r\n  setUserLevel = (userLevel) => {\r\n    this.setState({userLevel});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n          {\r\n            this.state.loading ?\r\n                <Spinner />\r\n                :\r\n                <Router history = { history }>\r\n                  <PageWrapper userLevel = { this.state.userLevel }\r\n                               setUserLevel = { this.setUserLevel }\r\n                               stylesheetData = { this.state.stylesheetData }\r\n                  >\r\n                    <ScrollToTop />\r\n                    <Switch>\r\n                      <Route exact path = \"/winter19.team9\">\r\n                        <Redirect to = \"/\" />\r\n                      </Route>\r\n                      <Route exact\r\n                             path = \"/\"\r\n                             component = { (props) => <Home { ...props }\r\n                                                            userLevel = { this.state.userLevel }\r\n                                                            stylesheetData = { this.state.stylesheetData }\r\n                             /> }\r\n                      />\r\n                      <Route path = \"/about\"\r\n                             component = { (props) => <AboutUs { ...props }\r\n                                                               userLevel = { this.state.userLevel }\r\n                                                               stylesheetData = { this.state.stylesheetData }\r\n                             /> }\r\n                      />\r\n                      <Route path = \"/classes\"\r\n                             component = { (props) => <Classes { ...props }\r\n                                                               userLevel = { this.state.userLevel }\r\n                                                               stylesheetData = { this.state.stylesheetData }\r\n                             /> }\r\n                      />\r\n\r\n                      <Route exact\r\n                             path = \"/loginAndroid\"\r\n                             component = { (props) => <LoginAndroid { ...props }\r\n                                                                    setUserLevel = { this.setUserLevel }\r\n                                                                    userLevel = { this.state.userLevel }\r\n                                                                    stylesheetData = { this.state.stylesheetData }\r\n                             /> }\r\n                      />\r\n\r\n                      <Route exact\r\n                             path = \"/forgotPassword\"\r\n                             component = { forgotPassword }\r\n                      />\r\n                      <Route exact\r\n                             path = \"/verifyEmail/:id\"\r\n                             component = { VerifyEmail }\r\n                      />\r\n                      <Route exact\r\n                             path = { '/resetPassword/:id' }\r\n                             component = { ResetPassword }\r\n                      />\r\n\r\n                      <PrivateRoute path = \"/user/profile\"\r\n                                    component = { ProfileUser }\r\n                                    userLevel = { this.state.userLevel }\r\n                      />\r\n                      <PrivateRoute path = \"/coach/profile\"\r\n                                    component = { ProfileCoach }\r\n                                    userLevel = { this.state.userLevel }\r\n                      />\r\n                      <PrivateRoute path = \"/admin/profile\"\r\n                                    component = { ProfileAdmin }\r\n                                    userLevel = { this.state.userLevel }\r\n                      />\r\n                      <PrivateRoute path = \"/admin/dashboard\"\r\n                                    component = { UIDashboard }\r\n                                    userLevel = { this.state.userLevel }\r\n                      />\r\n                      <Route component = { NotFound } />\r\n                    </Switch>\r\n                  </PageWrapper>\r\n\r\n                </Router>\r\n\r\n          }\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister().then();\r\n    });\r\n  }\r\n}\r\n","import React              from 'react';\r\nimport ReactDOM           from 'react-dom';\r\nimport App                from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n      <App />,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/fitnessFactoryLogo.444228d2.png\";"],"sourceRoot":""}