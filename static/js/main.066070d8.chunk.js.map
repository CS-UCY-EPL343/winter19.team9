{"version":3,"sources":["components/common/AnnouncementModal.jsx","components/common/ButtonLoader.jsx","components/assets/img/logos/ffLogoTransparent.png","components/common/Message.jsx","components/common/MessageNewModal.jsx","components/common/AnnouncementsPrivateModal.jsx","components/common/MessagesModalAdminCoach.jsx","repository.js","components/assets/img/logos/jccLogo.svg","components/assets/img/logos/paypalLogo.svg","components/common/EditAccount.jsx","components/common/ProfileInfo.jsx","components/pages/ProfileCoach.jsx","components/common/SelectionPTCoach.jsx","components/common/CoachSchedule.jsx","components/pages/ProfileAdmin.jsx","components/common/SelectionPT.jsx","components/common/PersonalTrainingCreate.jsx","components/Spinner.jsx","components/common/ToggleModal.jsx","history.js","components/common/SignUp.jsx","components/common/LogIn.jsx","components/common/SignInUpModal.jsx","components/common/Navigation.jsx","components/common/Footer.jsx","components/PageWrapper.jsx","components/common/CarouselHP.jsx","components/common/ServiceGoal.jsx","components/common/Services.jsx","components/common/Announcement.jsx","components/common/AnnouncementsPublic.jsx","components/pages/Home.jsx","components/common/ContactUs.jsx","components/common/TeamMember.jsx","components/common/Team.jsx","components/pages/PrivacyPolicy.jsx","components/pages/AboutUs.jsx","components/common/PaymentModal.jsx","components/common/Event.jsx","components/common/EventsModal.jsx","components/common/AnnouncementCompPub.jsx","components/common/AnnouncementsPrivate.jsx","components/common/MessagesModal.jsx","components/common/SettingsProfile.jsx","components/common/GeneralScheduleModalBody.jsx","components/common/BookClass.jsx","components/common/EnrolledClassSchedule.jsx","components/pages/ProfileUser.jsx","components/pages/Classes.jsx","components/common/ScrollToTop.jsx","components/PrivateRoute.jsx","components/pages/ForgotPassword.jsx","components/pages/VerifyEmail.jsx","components/pages/ResetPassword.jsx","components/common/LineChart.jsx","components/common/PieChart.jsx","components/common/CreateStaffMember.jsx","components/common/StaffList.jsx","components/common/Leader.jsx","components/common/LeaderBoard.jsx","components/common/Graphs.jsx","components/pages/UIDashboard.jsx","components/common/NotFound.jsx","components/common/LoginModal.jsx","components/pages/LoginAndroid.jsx","App.js","serviceWorker.js","index.js","components/assets/img/logos/fitnessFactoryLogo.png"],"names":["AnnouncementModal","props","handleChange","e","setState","target","name","value","onSubmit","preventDefault","announcements","announcement_id","state","title","message","ANNOUNCEMENT_ID","then","res","DeleteAnn","level","toggle","bind","this","prevProps","prevState","snapshot","undefined","isOpen","modal","size","aria-labelledby","centered","className","htmlFor","style","color","type","id","placeholder","defaultValue","required","onChange","onClick","btnCancel","isPrivate","Component","ButtonLoader","disabled","loading","icon","faSpinner","spin","loadingText","textIcon","faSearch","text","module","exports","Message","imageURL","$imagePreview","src","alt","image","Buffer","from","toString","outgoing","hasSeen","fromContact","toContact","timestamp","adminAvatar","MessageNewModal","contact","Swal","fire","recipients","componentDidMount","getCoaches","response","catch","err","alert","map","rec","index","key","AccountID","CoachName","Surname","toUpperCase","AnnouncementsPrivateModal","MessagesModalAdminCoach","newModal","onMessageSubmit","createNewMessage","newArr","messages","slice","unshift","console","log","getMessagesMelios","userName","sort","a","b","Message_ID","TotalMessages","newMessages","msg","makeMessagesRead","toggleTotalMessages","includes","animationIn","userLevel","From_level","To_Name","To_Surname","To_level","From_Name","From_Surname","Timestamp","split","Title","BASE_URL","logIn","data","axios","post","username","password","localStorage","setItem","token","Date","now","Promise","reject","userData","getItem","staffData","getPrivateAnnouncements","getPrivateAnnouncementsAdmin","getTotalPrivateAnnouncements","getPublicAnnouncements","get","getClasses","getClassDay","ClassName","getClassTime","ClassDay","getClassCoach","ClassTime","getUserID","getCoachID","getClassID","removeAnnouncement","deleteAnnouncement","addAnnouncement","addPrivateAnnouncement","updateAnnouncement","allUsersCount","getUserCount","count","getEnrollCount","getPageVisits","allVisitCount","loggedInVisit","updateAboutUsVisit","updateClassesVisit","updateProfileVisit","updateDashboardVisit","updateHomePageVisit","insertCoach","insertAdmin","deleteAdmin","AdminId","deleteCoach","CoachID","countPT","countClasses","postuserData","enrollUser","CLASS_ID","User_ID","unenrollUser","deleteUserData","insertPT","deletePT","getAllCoaches","getPersonalSchedule","getClassSchedule","getCoachTraining","Coach_ID","getCoachClasses","userPic","userDetails","signUp","logOut","removeItem","isAuthenticated","getUserLevel","lastVerify","newPassword","resetPass","sendEmail","error","getCoachInfo","coachID","getMessages","getTotalMessages","getAdmins","getServerConnections","connections","getGenderChart","getClassDaysChart","getPersonalDaysChart","getAgeRange","getCoachesDayWork","getCoachesPersonalWork","validURL","str","RegExp","test","getEvents","getEventsTotal","EditAccount","handleSubmit","confirmPassword","deleted","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","window","location","replace","dismiss","DismissReason","cancel","fillCSV","surname","email","medical_history","phone_number","bdate","age","PT","classes","day","x","time","coach","classname","array","i","length","myKey","push","onValueInput","Test","noValidate","Name","match","Email","checkPhoneNo","number","Phone_Number","file","imagePreviewUrl","flag","csvData","Bdate","Age","dataPT","Medical_History","reload","finally","reader","FileReader","files","onloadend","readAsDataURL","accept","_handleImageChange","pattern","maxlength","refreshPage","ProfileInfo","toggleLoading","loadingInfo","secondaryStyle","ProfileCoach","clearOptions","loadingSearchUser","nameStart","searchResults","toggleMessages","modalMessages","onAnnouncementSubmit","Ann_ID","modalAnnId","ann","onAnnouncementDelete","filter","onAnnouncementSubmit2","prevAnn","TIMESTAMP","toISOString","toggle2","modal2","searchButton","userDropdown","user","find","usr","updateCoaches","updatePrivateAnnouncements","resolve","cleared","toggleAnnouncements","modalAnnouncements","toggleAnnouncements2","modalAnnouncements2","handleDayTimeChange","toggleAnnouncementsData","modalTitle","modalMessage","toggleAnnouncementsData2","trainingScheduleCoach","ownerName","document","getElementById","to","aria-label","hidden","toogle","userID","width","modalSize","modalHeader","modalBody","marginRight","resetOnSubmit","invalid","SelectionPTCoach","handleDay","handleTime","selectionTime","selectionDay","onDelete","CoachSchedule","toggleModalCoachBooked","toggleModalAnotherClient","toggleModalEmptyCell","toggleModalClientHasClass","toggleModalClientHasClassInsert","ColorLuminance","hex","lum","String","c","rgb","parseInt","substr","Math","round","min","max","coachName","clientNames","refIDsCoach","refIDs","cIDs","cNames","ClassColors","insertDeleteMethodStates","fillTable","StateSetter","coaches","classRefIDs","node","refID","setAttribute","textContent","indexOf","backgroundImage","y","z","clear","ret","forEach","item","TimeCode","DayCode","ClassID","childNodes","retCoach","Time","Day","fullName","personalTraining","classSchedule","ClientRefIDs","pos","posCoach","splice","Array","keys","toFixed","ProfileAdmin","handleChange2","updateUserPic","selectedCoaches","retrievedCoach","coachIDRet","coachIDAssigned","readOnly","coachIDret","SelectionPT","onSubmit2","coachesRet","PersonalTrainingCreate","toggleModalClassConflict","toggleModalUserBooked","toggleModalIncorrectCoach","coachBooked","userBooked","incorrectCoach","classConflict","classesRefIDs","Spinner","viewBox","cx","cy","r","fill","stroke","strokeWidth","ToggleModal","Comp","navigator","userAgent","React","cloneElement","createBrowserHistory","SignUp","event","formData","calcDate","setCustomValidity","verifyCallback","isVerified","rotate","fname","lname","confirm_password","gender","submitted","newToken","require","randomBytes","encryptedString","encrypt","dataSign","bDate","verify","hash","toggleModal","dDate","ageDif","getFullYear","ValidatorForm","addValidationRule","autoComplete","TextField","bday","InputLabelProps","shrink","FormControl","component","RadioGroup","FormControlLabel","control","Radio","label","elementID","sitekey","render","theme","Signup","dataLogIn","Error","setUserLevel","history","forgotPassword","SignInUpModal","showModal","$","css","Modal","show","onHide","Body","LogIn","Navigation","onLogOut","pathname","exact","logo_img","height","data-toggle","data-target","aria-controls","aria-expanded","Footer","stylesheetData","href","v","padding","Icons","PageWrapper","handleClick","on","animate","scrollTop","offset","top","childrenWithProps","Children","children","child","data-hash","ControlledCarousel","handleSelect","selectedIndex","direction","Carousel","activeIndex","onSelect","pauseOnHover","touch","Item","process","Caption","CarouselHp","ServiceGoal","faMedal","faWeightHanging","charAt","Services","services","animationInDelay","position","left","transform","bgImage","Announcement","toggleHover","hover","onSlickRemove","slickRemove","dataStyle","imgStyle","display","isAdder","slickAdd","onMouseOver","onMouseOut","AnnouncementsPublic","_isMounted","prev","l","settings","dots","infinite","speed","slidesToShow","slidesToScroll","centerPadding","centerMode","responsive","breakpoint","Home","ContactUs","trim","phone","status","address","facebook","instagram","frameBorder","scrolling","marginHeight","marginWidth","TeamMember","Team","PrivacyPolicy","AboutUs","PaymentModal","defaultChecked","jccLogo","paypalLogo","Event","active","timeStart","EventsModal","events","date","dateTimeFormat","Intl","DateTimeFormat","weekday","year","month","format","startSplit","start","getHours","getMinutes","AnnouncementCompPub","AnnouncementsPrivate","MessagesModal","SettingsProfile","context","open","togglePayment","modalPayment","toggleEvents","modalEvents","toggleTotalEvents","TotalEvents","toggleEditAccount","modalEditAccount","TotalAnnouncement","sevenDaysLeft","Count","total","Button","GeneralScheduleModalBody","BookClass","toggleModalGeneral","modalGeneral","handleClass","SelectedClass","SelectedDay","SelectedTime","handleCoach","SelectedCoach","getSelections","EnrolledClassSchedule","myRef","createRef","ptIDs","trainingScheduleRet","personalSchedule","pIDs","pNames","StateSetterPT","dataClasses","userSchedule","retPer","p","newList","newList2","newList3","ref","ProfileUser","handleSelections","handlePTClass","EnrollID","Classes","ScrollToTop","useLocation","useEffect","scrollTo","PrivateRoute","UserLevel","rest","onMailChange","sendEmailPass","messageFromServer","input","showError","sendingEmail","confirming","VerifyEmail","confirm","secret","params","ResetPassword","getID","isLoading","LineChart","lineChart","labels","percentChange","percentComparison","lastNumber","getChartData","createChart","updateChart","clearInterval","newNumber","randomData","ctx","datasets","backgroundColor","strokeColor","pointColor","borderColor","pointStrokeColor","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","call","chart","tooltip","_active","activePoint","tooltipPosition","topY","legend","bottom","bottomY","chartArea","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","restore","myLineChart","maintainAspectRatio","options","tooltips","enabled","intersect","mode","titleFontSize","titleSpacing","titleMarginBottom","displayColors","elements","point","radius","scales","xAxes","yAxes","self","setInterval","chartSpeed","getData","shift","changeOne","changeTwo","percentComparsion","changeNumber","update","divStyle","background","bgColor","PieChart","myChart","animationTime","timeMS","destroy","hoverBackgroundColor","cutoutPercentage","align","fullWidth","animation","animateScale","duration","CreateStaffMember","staffType","marginTop","marginBottom","StaffList","admins","countTotal","DeleteCoach","DeleteAdmin","createAdmin","createCoach","Object","defineProperty","getOwnPropertyDescriptor","admin","Gender","Leader","LeaderBoard","sortOrder","sortAsc","num","dataSort","dataTitle","numberComma","leaders","parseFloat","leader","numberWithCommas","Graphs","createGraph","graphData","scale","ticks","beginAtZero","gridLines","zeroLineColor","colors","ys","chart1","getContext","xs","aspectRatio","defaultFontColor","defaultFontSize","UIDashboard","getGraphData","finalCoachData","groupBy","val","coachData","dayIndex","dayToIndex","Participants","firstGraphLoaded","values","indexToDay","selectedGraph","genders","enroll","personal","uiDataPageViews","uiDataUserTypes","handleChart","visitCounts","userCounts","list","keyGetter","Map","collection","set","types","visits","page","views","Number","NotFound","LoginModal","onRadioChange","changeSign","onSignUp","repeatedPassword","onClose","med","userVerify","tabIndex","role","aria-hidden","action","method","checked","LoginAndroid","App","Tabletop","init","callback","googleData","readStylesheetInfo","simpleSheet","home","about","footer","jsonData","jsonHome","columnNames","col","jsonClasses","jsonAbout","jsonFooter","path","Boolean","hostname","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.066070d8.chunk.js","sourcesContent":["import React, {Component}                                   from 'react';\r\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\n\r\nclass AnnouncementModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title          : '',\r\n      message        : '',\r\n      announcement_id: '',\r\n      // this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID\r\n      // || '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.DeleteAnn = this.DeleteAnn.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      title          : this.props.title || '',\r\n      message        : this.props.message || '',\r\n      announcement_id: this.props.announcement_id || '',\r\n    });\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (!this.props.announcements || !this.props.announcement_id) {\r\n      return;\r\n    }\r\n    if (this.props.announcement_id === prevProps.announcement_id\r\n        || this.props.announcement_id === undefined) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.title !== prevProps.title ||\r\n        this.props.message !== prevProps.message\r\n        || this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID\r\n        !== prevProps.announcements[this.props.announcement_id].ANNOUNCEMENT_ID) {\r\n      this.setState({\r\n        title          : this.props.title || '',\r\n        message        : this.props.message || '',\r\n        announcement_id: this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID\r\n                         || '',\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.announcements && this.props.announcement_id) {\r\n      this.props.onSubmit(this.state.title, this.state.message,\r\n          this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID)\r\n          .then((res) => {\r\n            if (res) {\r\n              // this.setState({title: '', message: '', announcement_id: ''});\r\n            }\r\n          });\r\n    } else {\r\n      this.props.onSubmit(this.state.title, this.state.message).then((res) => {\r\n        if (res) {\r\n          // this.setState({title: '', message: ''});\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // DeleteAnn = (ANNOUNCEMENT_ID) => {\r\n  //     if (this.state.level <= 1) {\r\n  //         return;\r\n  //     }\r\n  //\r\n  //     removeAnnouncement(ANNOUNCEMENT_ID).then(() => {\r\n  //         this.setState({\r\n  //             announcements: this.state.announcements.filter(\r\n  //                 ann => ann.ANNOUNCEMENT_ID\r\n  //                     !== ANNOUNCEMENT_ID),\r\n  //         });\r\n  //     }).catch(err => alert(err));\r\n  //\r\n  // };\r\n\r\n  DeleteAnn = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.level !== -1) {\r\n      this.props.DeleteAnn(this.props.announcement_id).then((res) => {\r\n        if (res) {\r\n          this.props.toggle();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  toggle = () => {\r\n    if (!(this.props.announcements && this.props.announcement_id)) {\r\n      this.setState({title: '', message: ''});\r\n    }\r\n    this.props.toggle();\r\n  };\r\n\r\n  render() {\r\n    // noinspection JSUnresolvedVariable\r\n    return (\r\n        <Modal isOpen = { this.props.modal } toggle = { this.toggle }\r\n               size = { 'md' }\r\n               aria-labelledby = \"contained-modal-title-vcenter\"\r\n               centered\r\n        >\r\n          <ModalHeader toggle = { this.toggle }>Add\r\n                                                Announcement</ModalHeader>\r\n          <ModalBody>\r\n            <form>\r\n              <div className = \"form-group\">\r\n                <label htmlFor = \"ann-modal-title\"\r\n                       className = \"col-form-label\"\r\n                       style = { {color: '#D90429'} }\r\n                >Title:</label>\r\n                <input type = \"text\"\r\n                       className = \"form-control\"\r\n                       id = \"ann-modal-title\"\r\n                       placeholder = \"Enter a title...\"\r\n                       name = \"title\"\r\n                       defaultValue = { this.props.title || '' }\r\n                       required\r\n                       onChange = { this.handleChange }\r\n                />\r\n              </div>\r\n              <div className = \"form-group\">\r\n                <label htmlFor = \"ann-modal-message\"\r\n                       className = \"col-form-label\"\r\n                       style = { {color: '#D90429'} }\r\n                >Message:</label>\r\n                <textarea className = \"form-control\"\r\n                          id = \"ann-modal-message\"\r\n                          placeholder = \"Enter a message...\"\r\n                          name = \"message\"\r\n                          defaultValue = { this.props.message || '' }\r\n                          required\r\n                          onChange = { this.handleChange }\r\n                />\r\n              </div>\r\n            </form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick = { this.toggle }>{ this.props.btnCancel\r\n                                                || 'Cancel' }</Button>\r\n            <Button onClick = { this.onSubmit }>{ 'Submit' }</Button>\r\n            { this.props.isPrivate &&\r\n              <Button onClick = { this.DeleteAnn }>{ 'Delete' }</Button> }\r\n          </ModalFooter>\r\n        </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnnouncementModal;","import React, {Component}    from 'react';\r\nimport '../assets/styles/ButtonLoader.css';\r\nimport {FontAwesomeIcon}     from '@fortawesome/react-fontawesome';\r\nimport {faSpinner, faSearch} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ButtonLoader extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          { this.props.onClick ?\r\n              (\r\n                  <button className = { 'loading-button' + (this.props.className\r\n                                                            || '') }\r\n                          disabled = { this.props.loading }\r\n                          type = { this.props.type || 'button' }\r\n                          onClick = { this.props.onClick }\r\n                  >\r\n                    { this.props.loading && (\r\n                        <FontAwesomeIcon icon = { faSpinner }\r\n                                         size = { this.props.size || 'sm' }\r\n                                         spin\r\n                        />\r\n                    ) }\r\n                    { this.props.loading &&\r\n                      <span>{ this.props.loadingText }</span> }\r\n                    { !this.props.loading && <span>{ this.props.textIcon\r\n                        ? <FontAwesomeIcon icon = { faSearch }\r\n                                           size = { this.props.size || 'sm' }\r\n                        />\r\n                        : this.props.text }</span> }\r\n                  </button>\r\n              ) :\r\n              (\r\n                  <button className = { 'loading-button' + (this.props.className\r\n                                                            || '') }\r\n                          disabled = { this.props.loading }\r\n                          type = { this.props.type || 'button' }\r\n                  >\r\n                    { this.props.loading && (\r\n                        <FontAwesomeIcon icon = { faSpinner }\r\n                                         size = { this.props.size || 'sm' }\r\n                                         spin\r\n                        />\r\n                    ) }\r\n                    { this.props.loading &&\r\n                      <span>{ this.props.loadingText }</span> }\r\n                    { !this.props.loading && <span>{ this.props.textIcon\r\n                        ? <FontAwesomeIcon icon = { faSearch }\r\n                                           size = { this.props.size || 'sm' }\r\n                        />\r\n                        : this.props.text }</span> }\r\n                  </button>\r\n              )\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonLoader;","module.exports = __webpack_public_path__ + \"static/media/ffLogoTransparent.9f75a55d.png\";","import React, {Component} from 'react';\r\nimport '../assets/styles/Message.css';\r\nimport adminAvatar        from '../assets/img/logos/fitnessFactoryLogo.png';\r\n\r\nclass Message extends Component {\r\n  render() {\r\n    let imageURL = 'https://www.w3schools.com/howto/img_avatar.png';\r\n    let $imagePreview = <img src = { imageURL }\r\n                             className = { 'img-left' }\r\n                             alt = { 'Profile Avatar' }\r\n    />;\r\n    if (this.props.image) {\r\n      imageURL =\r\n          'data:image/png;base64,' + new Buffer.from(this.props.image,\r\n          'binary').toString(\r\n          'base64');\r\n      $imagePreview = (<img src = { imageURL }\r\n                            className = { 'img-left' }\r\n                            alt = { 'Profile Avatar' }\r\n      />);\r\n    }\r\n\r\n    return (\r\n        <div className = { `msg-card \r\n            ${ this.props.outgoing ? 'left' : 'right' } \r\n            ${ this.props.hasSeen ? '' : 'new-msg' }` }\r\n        >\r\n          {/*{ !this.props.outgoing && !this.props.hasSeen &&*/ }\r\n          {/*  <i className = \"fa fa-plus-circle\" /> }*/ }\r\n          { this.props.outgoing ?\r\n              <div className = \"msg-data\">\r\n                <div className={'msg-header'}>\r\n                  { $imagePreview }\r\n                  <h2 className = \"card-title\">\r\n                    { this.props.title }\r\n                  </h2>\r\n                </div>\r\n                <div className = \"msg-content right\">\r\n                  <h5 className = \"msg-contact\">\r\n                    From: { this.props.fromContact }\r\n                  </h5>\r\n                  <h5 className = \"msg-contact\">\r\n                    To: { this.props.toContact }\r\n                  </h5>\r\n                  <p className = \"card-text\">\r\n                    { this.props.message }\r\n                  </p>\r\n                </div>\r\n                <p className = \"msg-timestamp left\">{ this.props.timestamp }</p>\r\n              </div>\r\n              :\r\n              <div className = \"msg-data\">\r\n                <div className={'msg-header left'}>\r\n                  < img src = { adminAvatar }\r\n                        className = { 'img-right' }\r\n                        alt = 'Avatar'\r\n                  />\r\n                  <h2 className = \"card-title right\">\r\n                    { this.props.title }\r\n                  </h2>\r\n                </div>\r\n                <div className = \"msg-content left\">\r\n                  <h5 className = \"msg-contact\">\r\n                    From: { this.props.fromContact }\r\n                  </h5>\r\n                  <h5 className = \"msg-contact\">\r\n                    To: { this.props.toContact }\r\n                  </h5>\r\n                  <p className = \"card-text\">\r\n                    { this.props.message }\r\n                  </p>\r\n                </div>\r\n                <p className = \"msg-timestamp right\">{ this.props.timestamp }</p>\r\n              </div>\r\n          }\r\n        </div>\r\n    )\r\n        ;\r\n  }\r\n}\r\n\r\nexport default Message;","import React, {Component}                                   from 'react';\r\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\nimport {\r\n    getCoaches,\r\n    // makeMessagesRead\r\n}                                                           from '../../repository';\r\nimport Swal                                                 from \"sweetalert2\";\r\n\r\nclass MessageNewModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title     : '',\r\n            message   : '',\r\n            recipients: [],\r\n            contact   : '',\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        getCoaches().then(response => {\r\n            this.setState({recipients: response});\r\n        }).catch(err => alert(err));\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.title || !this.state.message || !this.state.contact) {\r\n            Swal.fire(\r\n                'Please fill in all boxes',\r\n                '',\r\n                'error',\r\n            ).then();\r\n            return;\r\n        }\r\n        this.props.onSubmit(e, this.state.title, this.state.message,\r\n            this.state.contact);\r\n        this.setState({title: '', message: '', contact: ''});\r\n    };\r\n\r\n    render() {\r\n        // noinspection JSUnresolvedVariable\r\n        return (\r\n            <Modal isOpen = { this.props.modal } toggle = { this.props.toggle }\r\n                   size = { 'md' }\r\n                   aria-labelledby = \"contained-modal-title-vcenter\"\r\n                   centered\r\n            >\r\n                <ModalHeader toggle = { this.props.toggle }>New Message</ModalHeader>\r\n                <ModalBody>\r\n                    <form>\r\n                        <div className = \"form-group\">\r\n                            <label htmlFor = \"ann-modal-to\"\r\n                                   className = \"col-form-label\"\r\n                                   style = { {color: '#D90429'} }\r\n                            >To:</label>\r\n                            <select id = \"ann-modal-to\"\r\n                                    name = \"contact\"\r\n                                    className = \"form-control\"\r\n                                    placeholder = \"Select recipient...\"\r\n                                    required\r\n                                    onChange = { this.handleChange }\r\n                            >\r\n                                <option value = ''>\r\n                                    Select recipient...\r\n                                </option>\r\n                                { this.state.recipients.map((rec, index) => {\r\n                                    // noinspection JSUnresolvedVariable\r\n                                    return <option key = { index }\r\n                                                   value = { rec.AccountID }\r\n                                    >\r\n                                        { `${ rec.CoachName } ${ rec.Surname } - ${ rec.level.toUpperCase() }` }\r\n                                    </option>;\r\n                                }) }\r\n                            </select>\r\n                        </div>\r\n                        <div className = \"form-group\">\r\n                            <label htmlFor = \"ann-modal-title\"\r\n                                   className = \"col-form-label\"\r\n                                   style = { {color: '#D90429'} }\r\n                            >Title:</label>\r\n                            <input type = \"text\"\r\n                                   className = \"form-control\"\r\n                                   id = \"ann-modal-title\"\r\n                                   placeholder = \"Enter a title...\"\r\n                                   name = \"title\"\r\n                                   required\r\n                                   onChange = { this.handleChange }\r\n                            />\r\n                        </div>\r\n                        <div className = \"form-group\">\r\n                            <label htmlFor = \"ann-modal-message\"\r\n                                   className = \"col-form-label\"\r\n                                   style = { {color: '#D90429'} }\r\n                            >Message:</label>\r\n                            <textarea className = \"form-control\"\r\n                                      id = \"ann-modal-message\"\r\n                                      placeholder = \"Enter a message...\"\r\n                                      name = \"message\"\r\n                                      required\r\n                                      onChange = { this.handleChange }\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button onClick = { this.props.toggle }>{ this.props.btnCancel\r\n                    || 'Cancel' }</Button>\r\n                    <Button onClick = { this.onSubmit }>{ 'Submit' }</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessageNewModal;","import React, {Component}                                   from 'react';\r\nimport {Button, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\r\n\r\nclass AnnouncementsPrivateModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title  : this.props.title || '',\r\n      message: this.props.message || '',\r\n      // announcement_id :\r\n      // this.props.announcements[this.props.announcement_id].ANNOUNCEMENT_ID\r\n      // || '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.title, this.state.message).then((res) => {\r\n      if(res) {\r\n        this.toggle();\r\n      }\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({title: '', message: ''});\r\n    this.props.toggle();\r\n  };\r\n\r\n  render() {\r\n    // noinspection JSUnresolvedVariable\r\n    return (\r\n        <Modal isOpen = { this.props.modal } toggle = { this.toggle }\r\n               size = { 'md' }\r\n               aria-labelledby = \"contained-modal-title-vcenter\"\r\n               centered\r\n        >\r\n          <ModalHeader toggle = { this.toggle }>Add\r\n                                                      Announcement</ModalHeader>\r\n          <ModalBody>\r\n            <form>\r\n              <div className = \"form-group\">\r\n                <label htmlFor = \"ann-modal-title\"\r\n                       className = \"col-form-label\"\r\n                       style = { {color: '#D90429'} }\r\n                >Title:</label>\r\n                <input type = \"text\"\r\n                       className = \"form-control\"\r\n                       id = \"ann-modal-title\"\r\n                       placeholder = \"Enter a title...\"\r\n                       name = \"title\"\r\n                       defaultValue = { this.props.title || '' }\r\n                       required\r\n                       onChange = { this.handleChange }\r\n                />\r\n              </div>\r\n              <div className = \"form-group\">\r\n                <label htmlFor = \"ann-modal-message\"\r\n                       className = \"col-form-label\"\r\n                       style = { {color: '#D90429'} }\r\n                >Message:</label>\r\n                <textarea className = \"form-control\"\r\n                          id = \"ann-modal-message\"\r\n                          placeholder = \"Enter a message...\"\r\n                          name = \"message\"\r\n                          defaultValue = { this.props.message || '' }\r\n                          required\r\n                          onChange = { this.handleChange }\r\n                />\r\n              </div>\r\n            </form>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick = { this.toggle }>{ this.props.btnCancel\r\n                                                      || 'Cancel' }</Button>\r\n            <Button onClick = { this.onSubmit }>{ 'Submit' }</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnnouncementsPrivateModal;","import React, {Component} from 'react';\r\nimport '../assets/styles/MessagesModal.css';\r\nimport Message            from './Message';\r\nimport {\r\n    createNewMessage,\r\n    getMessagesMelios,\r\n    makeMessagesRead, userData,\r\n}                         from '../../repository';\r\nimport MessageNewModal    from './MessageNewModal';\r\nimport Swal               from 'sweetalert2';\r\nimport Spinner            from '../Spinner';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\n\r\nclass MessagesModalAdminCoach extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [],\r\n            newModal: false,\r\n            loading : [true, false],\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n        this.onMessageSubmit = this.onMessageSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const data = {username: this.props.username};\r\n        getMessagesMelios(this.props.userName).then(response => {\r\n            this.setState({\r\n                messages: response.messages[0].sort(\r\n                    function(a, b) {\r\n                        // noinspection JSUnresolvedVariable\r\n                        return b.Message_ID\r\n                            - a.Message_ID;\r\n                    }),\r\n            });\r\n        }).then(() => {\r\n            let loading = this.state.loading;\r\n            loading[0] = false;\r\n            this.setState({loading});\r\n        }).catch(err => alert(err));\r\n\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.TotalMessages > 0) {\r\n            // noinspection JSUnresolvedVariable\r\n            const newMessages = this.state.messages.slice(0,\r\n                this.props.TotalMessages).map(msg => msg.Message_ID);\r\n            makeMessagesRead(newMessages).then(() => {\r\n                this.props.toggleTotalMessages();\r\n            }).catch(err => alert(err));\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({newModal: !this.state.newModal});\r\n    };\r\n\r\n    onMessageSubmit = (e, title, message, contact) => {\r\n        e.preventDefault();\r\n        createNewMessage({title, message, contact}).then(response => {\r\n            this.toggle();\r\n            let newArr = this.state.messages.slice(0);\r\n            newArr.unshift(response[0]);\r\n            this.setState({messages: newArr});\r\n            console.log(response);\r\n            if (response[0]) {\r\n                Swal.fire(\r\n                    'Message sent successfully',\r\n                    '',\r\n                    'success',\r\n                ).then();\r\n            } else {\r\n                Swal.fire(\r\n                    'Something went wrong',\r\n                    'Please try again...',\r\n                    'error',\r\n                ).then();\r\n            }\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ).then());\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id = { 'MessagesModal' }>\r\n                { this.state.loading.includes(true) ?\r\n                    <Spinner style = { {\r\n                        'height'         : '250px',\r\n                        'backgroundColor': 'transparent',\r\n                    } }\r\n                    />\r\n                    :\r\n                    <>\r\n                        <button className = { 'new-msg-btn btn btn-primary btn-xl text-uppercase' }\r\n                                onClick = { this.toggle }\r\n                        >\r\n                            New Message\r\n                        </button>\r\n                        <div id = \"message-container\"\r\n                             className = \"container-fluid mt-2\"\r\n                        >\r\n                            <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                                { this.state.messages.map(\r\n                                    (msg, index) => {\r\n                                        // noinspection JSUnresolvedVariable\r\n                                        const outgoing = this.props.userLevel\r\n                                            === msg.From_level;\r\n                                        // noinspection JSUnresolvedVariable\r\n                                        const toContact = `${ msg.To_Name } ${ msg.To_Surname } - ${ msg.To_level.toUpperCase() }`;\r\n                                        // noinspection JSUnresolvedVariable\r\n                                        const fromContact = `${ msg.From_Name } ${ msg.From_Surname } - ${ msg.From_level.toUpperCase() }`;\r\n                                        const timestamp = msg.Timestamp.split(/[T.]+/)[0]\r\n                                            + ' '\r\n                                            + msg.Timestamp.split(/[T.]+/)[1];\r\n                                        // noinspection JSUnresolvedVariable\r\n                                        return (\r\n                                            <div className = { 'messageDiv' } key = { index }>\r\n                                                { this.props.TotalMessages > 0 &&\r\n                                                this.props.TotalMessages === index &&\r\n                                                < div className = 'new-msg-line'>\r\n                                                    New Messages Above\r\n                                                </div> }\r\n                                                <Message\r\n                                                    key = { msg.Message_ID }\r\n                                                    title = { msg.Title }\r\n                                                    message = { msg.Message }\r\n                                                    toContact = { toContact }\r\n                                                    fromContact = { fromContact }\r\n                                                    outgoing = { outgoing }\r\n                                                    timestamp = { timestamp }\r\n                                                    hasSeen = { msg.hasSeen }\r\n                                                    image = { this.state.image }\r\n                                                />\r\n                                            </div>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </AnimatedOnScroll>\r\n                        </div>\r\n                    </>\r\n                }\r\n\r\n                <MessageNewModal onSubmit = { this.onMessageSubmit }\r\n                                 toggle = { this.toggle }\r\n                                 modal = { this.state.newModal }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessagesModalAdminCoach;","import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:5000';\r\n//\r\n// const BASE_URL = 'http://10.16.22.2:5000';  // For Android use your IPv4\r\n\r\nexport function logIn(data) {\r\n  // console.log(data);\r\n  return axios.post(`${ BASE_URL }/api/auth`, {\r\n    name    : data.username,\r\n    password: data.password,\r\n  }).then(response => {\r\n    localStorage.setItem('x-access-token', response.data.token);\r\n    // noinspection JSCheckFunctionSignatures\r\n    localStorage.setItem('x-access-token-expiration',\r\n        Date.now() + 2 * 60 * 60 * 1000);\r\n    return response.data;\r\n  }).catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n// noinspection JSUnusedLocalSymbols,JSUnusedGlobalSymbols\r\nexport function images(file) {\r\n  return axios.post('/api/getProfilePic', {emp_id: 5}).then(res => {\r\n    // noinspection JSUnusedLocalSymbols,JSUnresolvedVariable\r\n    let imageURL = 'data:image/png;base64,' + new Buffer(res.data.profile_pic,\r\n        'binary').toString('base64');\r\n  });\r\n}\r\n\r\nexport function userData() {\r\n  return axios.post(`${ BASE_URL }/api/user/data`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\nexport function staffData() {\r\n  return axios.post(`${ BASE_URL }/api/staff/data`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getPrivateAnnouncements() {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response)\r\n      .catch(() => Promise.reject(\r\n          'Error when get private Announcements from database!!'));\r\n}\r\n\r\nexport function getPrivateAnnouncementsAdmin(username) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/admin/private`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    username        : username,\r\n  }).then(response => response).catch(() => Promise.reject(\r\n      'Error when get private Announcements from database!!'));\r\n}\r\n\r\nexport function getTotalPrivateAnnouncements() {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private/total`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function getPublicAnnouncements() {\r\n  return axios.get(`${ BASE_URL }/api/announcements/public`)\r\n      .then(response => response);\r\n}\r\n\r\nexport function getDayCode() {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/BookClass/ClassDayCode`,\r\n          {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getTimeCode() {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/BookClass/ClassTimeCode`,\r\n          {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClasses() {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassName`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClassName(ClassID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/BookClass/ClassNames`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        ClassID         : ClassID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClassDay(ClassName) {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassDay`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    ClassName       : ClassName,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClassTime(ClassName, ClassDay) {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassTime`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    ClassName       : ClassName,\r\n    ClassDay        : ClassDay,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getClassCoach(ClassName, ClassDay, ClassTime) {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassCoach`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    ClassName       : ClassName,\r\n    ClassDay        : ClassDay,\r\n    ClassTime       : ClassTime,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getUserID() {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/UserID`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed user!'));\r\n}\r\n\r\nexport function getCoachID() {\r\n  return axios.post(`${ BASE_URL }/api/CoachSchedule/CoachID`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed user!'));\r\n}\r\n\r\n// export function getCoachID(ClassName, ClassDay, ClassTime) {\r\n//     return axios\r\n//         .post(`${BASE_URL}/api/BookClass/CoachID`, {'x-access-token':\r\n// localStorage.getItem('x-access-token'), ClassName: ClassName, ClassDay:\r\n// ClassDay, ClassTime: ClassTime}) .then(response => response.data) .catch(err\r\n// => Promise.reject('Authentication Failed!')) }\r\n\r\nexport function getClassID(ClassName, ClassDay, ClassTime, CoachName) {\r\n  return axios.post(`${ BASE_URL }/api/BookClass/ClassID`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    ClassName       : ClassName,\r\n    ClassDay        : ClassDay,\r\n    ClassTime       : ClassTime,\r\n    CoachName       : CoachName,\r\n  })\r\n      .then(response => response)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function removeAnnouncement(id) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/remove`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'), id: id,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function deleteAnnouncement(id) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private/delete`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    announcement_id : id,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function addAnnouncement(title, message) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/public/add`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    title           : title,\r\n    message         : message,\r\n  })\r\n      .then(response => response)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function addPrivateAnnouncement(title, message, username) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private/add`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    title           : title,\r\n    message         : message,\r\n    username        : username,\r\n  })\r\n      .then(response => response)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function updateAnnouncement(announcement_id, title, message) {\r\n  return axios.post(`${ BASE_URL }/api/announcements/private/update`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    title           : title,\r\n    message         : message,\r\n    announcement_id : announcement_id,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function allUsersCount() {\r\n  return axios.get(`${ BASE_URL }/api/user/type/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Failed!!!'));\r\n}\r\n\r\nexport function getUserCount() {\r\n  return axios.get(`${ BASE_URL }/api/user/count`)\r\n      .then(response => response.data.count[0].count);\r\n}\r\n\r\nexport function getEnrollCount() {\r\n  return axios.get(`${ BASE_URL }/api/enroll/count`)\r\n      .then(response => response.data.count[0].count);\r\n}\r\n\r\nexport function getPageVisits() {\r\n  return axios.get(`${ BASE_URL }/api/page/visits/count`)\r\n      .then(response => response.data.count[0].count);\r\n}\r\n\r\nexport function allVisitCount() {\r\n  return axios.get(`${ BASE_URL }/api/visit/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('HomePage Count Failed!!!'));\r\n}\r\n\r\nexport function loggedInVisit() {\r\n  return axios.post(`${ BASE_URL }/api/logged/visit/count`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => {});\r\n}\r\n\r\nexport function updateAboutUsVisit() {\r\n  return axios.post(`${ BASE_URL }/api/AboutUs/visit/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('HomePage Count Failed!!!'));\r\n}\r\n\r\nexport function updateClassesVisit() {\r\n  return axios.post(`${ BASE_URL }/api/Classes/visit/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('HomePage Count Failed!!!'));\r\n}\r\n\r\nexport function updateProfileVisit() {\r\n  return axios.post(`${ BASE_URL }/api/profile/visit/count`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Profile Count Failed!!!'));\r\n}\r\n\r\nexport function updateDashboardVisit() {\r\n  return axios.post(`${ BASE_URL }/api/dashboard/visit/count`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Profile Count Failed!!!'));\r\n}\r\n\r\nexport function updateHomePageVisit() {\r\n  return axios.post(`${ BASE_URL }/api/homepage/visit/count`)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('HomePage Count Failed!!!'));\r\n}\r\n\r\nexport function insertCoach(data) {\r\n  return axios.post(`${ BASE_URL }/api/coach/insert`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('insert coach failed.'));\r\n}\r\n\r\nexport function insertAdmin(data) {\r\n  return axios.post(`${ BASE_URL }/api/admin/insert`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Insert Admin failed.'));\r\n}\r\n\r\nexport function deleteAdmin(AdminId) {\r\n  return axios.post(`${ BASE_URL }/api/admin/delete`, {AdminId: AdminId})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Delete Admin Failed.'));\r\n}\r\n\r\nexport function deleteCoach(CoachID) {\r\n  return axios.post(`${ BASE_URL }/api/coach/delete`, {CoachID: CoachID})\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Delete Coach Failed.'));\r\n}\r\n\r\nexport function countPT(AccountID) {\r\n  return axios.post(`${ BASE_URL }/api/coach/countPT`,\r\n      {AccountID: AccountID})\r\n      .then(response => response.data.count[0])\r\n      .catch(() => Promise.reject('Error'));\r\n\r\n}\r\n\r\nexport function countClasses(AccountID) {\r\n  return axios.post(`${ BASE_URL }/api/coach/countClasses`,\r\n      {AccountID: AccountID})\r\n      .then(response => response.data.count[0])\r\n      .catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function postuserData(data) {\r\n  // noinspection JSUnresolvedVariable\r\n  return axios.post(`${ BASE_URL }/api/user/post/data`,\r\n      {'x-access-token': localStorage.getItem('x-access-token'), data: data})\r\n      .then(response => response.message)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function enrollUser(CLASS_ID, User_ID) {\r\n  // noinspection JSUnresolvedVariable\r\n  return axios.post(`${ BASE_URL }/api/BookClass/Enroll`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    CLASS_ID        : CLASS_ID,\r\n    User_ID         : User_ID,\r\n  })\r\n      .then(response => response.message)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function unenrollUser(CLASS_ID, User_ID) {\r\n  // noinspection JSUnresolvedVariable\r\n  return axios\r\n      .post(`${ BASE_URL }/api/BookClass/Unenroll`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        CLASS_ID        : CLASS_ID,\r\n        User_ID         : User_ID,\r\n      })\r\n      .then(response => response.message)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function deleteUserData() {\r\n  return axios.post(`${ BASE_URL }/api/user/delete/data`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  }).then(response => {\r\n    return response.data;\r\n  }).catch(() => Promise.reject('Authentication Failed!'));\r\n\r\n}\r\n\r\n//insert into personal training\r\nexport function insertPT(data) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/insert/PersonalTraining`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        data            : data,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//delete from personal training\r\nexport function deletePT(data) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/delete/PersonalTraining`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        data            : data,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//for coaches for personal training\r\nexport function getAllCoaches() {\r\n  return axios.post(`${ BASE_URL }/api/bookTraining/allCoaches`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//for image from database\r\n// noinspection JSUnusedGlobalSymbols\r\nexport function UserPic(name) {\r\n  return axios.post(`${ BASE_URL }/api/user/UserPic`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    name            : name,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//fetching the data for the personal training schedule\r\nexport function getPersonalTraining(User_ID) {\r\n  return axios.post(`${ BASE_URL }/api/user/getPersonalTraining`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    User_ID         : User_ID,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getPersonalSchedule(User_ID) {\r\n  return axios.post(`${ BASE_URL }/api/user/getPersonalSchedule`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    User_ID         : User_ID,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//Gets the class schedule of the user with the given User_ID\r\nexport function getClassSchedule(User_ID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/user/getClassSchedule`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        User_ID         : User_ID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//fetching the data for the personal training schedule\r\nexport function getCoachTraining(Coach_ID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/coach/getCoachTraining`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        Coach_ID        : Coach_ID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getCoachClasses(Coach_ID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/user/getCoachClasses`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        Coach_ID        : Coach_ID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//fetch pic\r\nexport function userPic(User_ID) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/user/userPic`, {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        User_ID         : User_ID,\r\n      })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n//mine\r\nexport function userDetails(name) {\r\n  return axios.post(`${ BASE_URL }/api/user/userDetails`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    name            : name,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function signUp(data) {\r\n  return axios.post(`${ BASE_URL }/api/user/insert`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Sign Up failed.'));\r\n}\r\n\r\nexport function logOut() {\r\n  localStorage.removeItem('x-access-token');\r\n  localStorage.removeItem('x-access-token-expiration');\r\n}\r\n\r\nexport function isAuthenticated() {\r\n  return (\r\n      localStorage.getItem('x-access-token') &&\r\n      localStorage.getItem('x-access-token-expiration') > Date.now()\r\n  );\r\n}\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport function hasPermissionFor(user) {\r\n  if (!localStorage.getItem('x-access-token') ||\r\n      !localStorage.getItem('x-access-token-expiration') > Date.now()) {\r\n    return false;\r\n  }\r\n\r\n  return getUserLevel().then(level => {\r\n    if (level === 'admin') {\r\n      return true;\r\n    } else if (level === 'coach' && (\r\n        user === 'coach' || user === 'user')) {\r\n      return true;\r\n    } else {\r\n      return level === 'user' && user === 'user';\r\n    }\r\n  });\r\n}\r\n\r\nexport function getUserLevel() {\r\n  return axios.post(`${ BASE_URL }/api/userLevel`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  }).then(response => response.data.userLevel);\r\n}\r\n\r\nexport function lastVerify(data) {\r\n  return axios\r\n      .post(`${ BASE_URL }/api/verifyEmail/:id`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Verification failed.'));\r\n}\r\n\r\nexport function newPassword(data) {\r\n  return axios.post(`${ BASE_URL }/api/reset-password`, data)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function resetPass(data) {\r\n  return axios.post(`${ BASE_URL }/api/resetPassword/:id`, data)\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Failed to reset Password'));\r\n}\r\n\r\nexport function sendEmail(data) {\r\n  return axios.post(`${ BASE_URL }/api/email`, data)\r\n      .then(response => response.data)\r\n      .catch(error => error);\r\n}\r\n\r\n//retrieve coach info\r\nexport function getCoachInfo(coachID) {\r\n  return axios.post(`${ BASE_URL }/api/coach/getInfo`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    coachID         : coachID,\r\n\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\n// Melios\r\nexport function getMessagesMelios(username) {\r\n  return axios.post(`${ BASE_URL }/api/messages/get2`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n    username        : username,\r\n\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getMessages() {\r\n  return axios.post(`${ BASE_URL }/api/messages/get`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function deleteMessage(id) {\r\n  return axios.post(`${ BASE_URL }/api/messages/delete`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'), id,\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getTotalMessages() {\r\n  return axios.post(`${ BASE_URL }/api/messages/total`,\r\n      {'x-access-token': localStorage.getItem('x-access-token')})\r\n      .then(response => response.data.count[0])\r\n      .catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function makeMessagesRead(newMessages) {\r\n  return axios.post(`${ BASE_URL }/api/messages/unread`,\r\n      {\r\n        'x-access-token': localStorage.getItem('x-access-token'),\r\n        newMessages     : newMessages,\r\n      }).then(response => response.data).catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function createNewMessage(data) {\r\n  return axios.post(`${ BASE_URL }/api/messages/new`,\r\n      {\r\n        'x-access-token': localStorage.getItem('x-access-token'), data,\r\n      }).then(response => response.data).catch(() => Promise.reject('Error'));\r\n}\r\n\r\nexport function getCoaches() {\r\n  return axios.get(`${ BASE_URL }/api/coaches/get`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getAdmins() {\r\n  return axios.get(`${ BASE_URL }/api/admins/get`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getServerConnections() {\r\n  return axios.get(`${ BASE_URL }/api/server/connections`)\r\n      .then(response => response.data.connections);\r\n}\r\n\r\nexport function getGenderChart() {\r\n  return axios.get(`${ BASE_URL }/api/chart/pie/gender`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getClassDaysChart() {\r\n  return axios.get(`${ BASE_URL }/api/chart/pie/enroll`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getPersonalDaysChart() {\r\n  return axios.get(`${ BASE_URL }/api/chart/pie/personal`)\r\n      .then(response => response.data);\r\n}\r\n\r\nexport function getAgeRange() {\r\n  return axios.get(`${ BASE_URL }/api/chart/bar/age`)\r\n      .then(response => response.data[0][0]);\r\n}\r\n\r\nexport function getCoachesDayWork() {\r\n  return axios.get(`${ BASE_URL }/api/chart/line/coaches/week-work`)\r\n      .then(response => response.data[0]);\r\n}\r\n\r\nexport function getCoachesPersonalWork() {\r\n  return axios.get(`${ BASE_URL }/api/chart/line/coaches/personal-work`)\r\n      .then(response => response.data[0]);\r\n}\r\n\r\nexport function validURL(str) {\r\n  const pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n                             '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'\r\n                             + // domain name\r\n                             '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4)\r\n                             // address\r\n                             '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and\r\n                             // path\r\n                             '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n                             '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n  return !!pattern.test(str);\r\n}\r\n\r\nexport function getEvents() {\r\n  return axios.post(`${ BASE_URL }/api/events/get`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}\r\n\r\nexport function getEventsTotal() {\r\n  return axios.post(`${ BASE_URL }/api/events/total`, {\r\n    'x-access-token': localStorage.getItem('x-access-token'),\r\n  })\r\n      .then(response => response.data)\r\n      .catch(() => Promise.reject('Authentication Failed!'));\r\n}","module.exports = __webpack_public_path__ + \"static/media/jccLogo.c31e2ec4.svg\";","module.exports = __webpack_public_path__ + \"static/media/paypalLogo.9984b3be.svg\";","import React, {Component} from 'react';\r\nimport {CSVLink}          from 'react-csv';\r\nimport '../assets/styles/EditAccountModal.css';\r\nimport {logOut, userData} from '../../repository';\r\nimport {postuserData}     from '../../repository';\r\nimport {deleteUserData}   from '../../repository';\r\nimport Swal               from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport Spinner            from '../Spinner';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\n\r\nclass EditAccount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file                : '',\r\n            imagePreviewUrl     : '',\r\n            username            : '',\r\n            Email               : '',\r\n            Name                : '',\r\n            Surname             : '',\r\n            password            : '',\r\n            confirmPassword     : '',\r\n            image               : '',\r\n            flag                : '1',\r\n            csvData             : [],\r\n            Bdate               : '',\r\n            Age                 : '',\r\n            dataPT              : [],\r\n            classes             : [],\r\n            loading        : true,\r\n            Medical_History         : '',\r\n            Phone_Number       :'',\r\n        };\r\n        this.onValueInput = this.onValueInput.bind(this);\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const {password, confirmPassword} = this.state;\r\n        // perform all neccassary validations\r\n        if (password !== confirmPassword) {\r\n            Swal.fire(\r\n                'Passwords don\\'t match',\r\n                '',\r\n                'error',\r\n            ).then();\r\n            return 0;\r\n        } else {\r\n            return 1;\r\n        }\r\n\r\n    };\r\n\r\n    refreshPage() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n    deleted = () => {\r\n        Swal.fire({\r\n            title             : 'Are you sure?',\r\n            text              : 'You won\\'t be able to revert this!',\r\n            icon              : 'warning',\r\n            showCancelButton  : true,\r\n            confirmButtonColor: '#3085D6',\r\n            cancelButtonColor : '#DD3333',\r\n            confirmButtonText : 'Yes, delete it!',\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                deleteUserData().then(() => {\r\n                    Swal.fire(\r\n                        'Public Announcement deleted successfully',\r\n                        '',\r\n                        'success',\r\n                    ).then(() => {\r\n                        logOut();\r\n                        window.location.replace('/');\r\n                    });\r\n                }).catch(() => Swal.fire(\r\n                    'Something went wrong',\r\n                    'Please try again...',\r\n                    'error',\r\n                ));\r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n                Swal.fire(\r\n                    'Cancelled',\r\n                    'Your Account is safe :)',\r\n                    'error',\r\n                ).then();\r\n            }\r\n        });\r\n    };\r\n    fillCSV = (name,surname,email,medical_history,phone_number,username,password,bdate,age, PT, classes)=> {\r\n        // console.log(name);\r\n        //\r\n        // this.state.csvData =[\r\n        //     [\"firstname\", \"lastname\", \"email\",\"username\",\"password\"]];\r\n        // console.log(\"THIS IS THE COACH: \\n\");\r\n        // console.log(PT[0].c);\r\n        let day = '';\r\n        let x  = '';\r\n        let time = '';\r\n        let coach = '';\r\n        let classname = '';\r\n        let array =[\r\n            [\"Personal Information\"],[],\r\n            [\"Firstname\", \"Lastname\", \"Email\",\"username\",\"password\",\"Phone Number\",\" Date of Birth\",\"Age\"],\r\n            [name,surname,email,username,password,phone_number,bdate,age],[],\r\n            [\"Medical History\"],[],\r\n            [medical_history],\r\n            [\"Personal Training Schedule\"],[],\r\n            [\"Day\", \"Time\", \"Coach\"]\r\n\r\n        ];\r\n\r\n        for(let i=0;i<PT.length;i++) {\r\n            x = PT[i];\r\n            for (let myKey in x) {\r\n                if (myKey == 'Day') {\r\n                    if (x[myKey] == 1) day = 'Monday';\r\n                    else if (x[myKey] == 2) day = 'Tuesday';\r\n                    else if (x[myKey] == 3) day = 'Wednesday';\r\n                    else if (x[myKey] == 4) day = 'Thursday';\r\n                    else if (x[myKey] == 5) day = 'Friday';\r\n                    else if (x[myKey] == 6) day = 'Saturday';\r\n                    else day = 'Sunday';\r\n                } else if (myKey == 'Time') {\r\n                    if (x[myKey] == 1) time = '8:00 - 09:00';\r\n                    else if (x[myKey] == 2) time = '9:00 - 10:00';\r\n                    else if (x[myKey] == 3) time = '10:00 - 11:00';\r\n                    else if (x[myKey] == 4) time = '11:00 - 12:00';\r\n                    else if (x[myKey] == 5) time = '12:00 - 13:00';\r\n                    else if (x[myKey] == 6) time = '13:00 - 14:00';\r\n                    else if (x[myKey] == 7) time = '14:00 - 15:00';\r\n                    else if (x[myKey] == 8) time = '15:00 - 16:00';\r\n                    else if (x[myKey] == 9) time = '16:00 - 17:00';\r\n                    else if (x[myKey] == 10) time = '17:00 - 18:00';\r\n                    else if (x[myKey] == 11) time = '18:00 - 19:00';\r\n                    else time = '19:00 - 20:00';\r\n                } else if (myKey == 'CoachName') coach = x[myKey];\r\n\r\n            }\r\n            array.push([day,time,coach]);\r\n        }\r\n\r\n        array.push([],[\"Enrolled Classes Schedule\"],[], [\"Day\", \"Time\", \"ClassName\"]);\r\n        for(let i=0;i<classes.length;i++) {\r\n            x = classes[i];\r\n            for (let myKey in x) {\r\n                if (myKey == 'DayCode') {\r\n                    if (x[myKey] == 1) day = 'Monday';\r\n                    else if (x[myKey] == 2) day = 'Tuesday';\r\n                    else if (x[myKey] == 3) day = 'Wednesday';\r\n                    else if (x[myKey] == 4) day = 'Thursday';\r\n                    else if (x[myKey] == 5) day = 'Friday';\r\n                    else if (x[myKey] == 6) day = 'Saturday';\r\n                    else day = 'Sunday';\r\n                } else if (myKey == 'TimeCode') {\r\n                    if (x[myKey] == 1) time = '8:00 - 09:00';\r\n                    else if (x[myKey] == 2) time = '9:00 - 10:00';\r\n                    else if (x[myKey] == 3) time = '10:00 - 11:00';\r\n                    else if (x[myKey] == 4) time = '11:00 - 12:00';\r\n                    else if (x[myKey] == 5) time = '12:00 - 13:00';\r\n                    else if (x[myKey] == 6) time = '13:00 - 14:00';\r\n                    else if (x[myKey] == 7) time = '14:00 - 15:00';\r\n                    else if (x[myKey] == 8) time = '15:00 - 16:00';\r\n                    else if (x[myKey] == 9) time = '16:00 - 17:00';\r\n                    else if (x[myKey] == 10) time = '17:00 - 18:00';\r\n                    else if (x[myKey] == 11) time = '18:00 - 19:00';\r\n                    else time = '19:00 - 20:00';\r\n                } else if (myKey == 'Name') classname = x[myKey];\r\n\r\n            }\r\n            array.push([day,time,classname]);\r\n        }\r\n\r\n        return array;\r\n\r\n        // return   this.state.csvData =[\r\n        //     [\"Firstname\", \"Lastname\", \"Email\",\"username\",\"password\",\" Date of Birth\",\"Age\"],\r\n        //     [name,surname,email,username,password,bdate,age,PT[0].CoachName],\r\n        //     [\"Personal Training\"],\r\n        //     [\"Day\", \"Time\", \"Coach\"]\r\n        //\r\n        // ];\r\n    };\r\n\r\n    componentDidMount() {\r\n        // const {name,surname,email,username,password} = '';\r\n        userData()\r\n            .then(response => {\r\n                console.log(response);\r\n                this.setState(response);\r\n                this.setState({confirmPassword: response.password});\r\n            }).finally(() => this.setState({loading: false}));\r\n        //this.props.showUrl(this.props.location.pathname)\r\n        //this.fillCSV(name,surname,email,username,password);\r\n\r\n    }\r\n\r\n    onValueInput = (e) => {\r\n        // if (e.target.value.length === 0) {\r\n        //   this.setState({flag: '0'});\r\n        // } else {\r\n        //   this.setState({flag: '1'});\r\n        // }\r\n\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    Test = () => {\r\n        //console.log(this.state.Name);\r\n        // if (this.state.flag === '0') {\r\n        //   Swal.fire(\r\n        //       'Please fill in all boxes',\r\n        //       '',\r\n        //       'error',\r\n        //   ).then();\r\n        // }\r\n        if (this.handleSubmit()) {\r\n            postuserData(this.state)\r\n                .then(() => {\r\n                    Swal.fire(\r\n                        'Saved Changes',\r\n                        '',\r\n                        'success',\r\n                    ).then();\r\n                }).catch(() => Swal.fire(\r\n                'Something went wrong',\r\n                'Please try again...',\r\n                'error',\r\n            ));\r\n        } else {\r\n            Swal.fire(\r\n                'Passwords do not match',\r\n                'Please try again...',\r\n                'error',\r\n            ).then();\r\n        }\r\n\r\n    };\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ((this.state.noValidate === 1) || !(\r\n            this.state.Name.match(new RegExp('[a-zA-Z ]+')) &&\r\n            this.state.Email.match(\r\n                new RegExp('[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$')) &&\r\n            this.state.Surname.match(new RegExp('^ *[a-zA-Z0-9]+.')) &&\r\n            this.state.username.match(new RegExp('^ *[a-zA-Z0-9]+.')))) {\r\n            Swal.fire(\r\n                'Please fill all the fields Correctly',\r\n                '',\r\n                'error',\r\n            ).then();\r\n            return;\r\n        }\r\n        this.Test();\r\n    };\r\n    checkPhoneNo = (number) => {\r\n        if(number == '0'){\r\n            this.state.Phone_Number = '';\r\n\r\n        }\r\n        return this.state.Phone_Number\r\n    };\r\n    _handleImageChange(e) {\r\n        e.preventDefault();\r\n\r\n        let reader = new FileReader();\r\n\r\n        // noinspection TypeScriptValidateTypes,TypeScriptValidateJSTypes,JSValidateTypes\r\n        let file = e.target.files[0];\r\n\r\n        reader.onloadend = () => {\r\n            this.setState({\r\n                file           : file,\r\n                imagePreviewUrl: reader.result,\r\n            });\r\n\r\n        };\r\n        if (file.size > 5000000) {\r\n            alert('Maximum File Size must be 5Mb!');\r\n            return;\r\n        }\r\n        //let x = this.state.imagePreviewUrl;\r\n        // let byteString = x.split(',')[1];\r\n\r\n        // let blob = base64ToBlob(byteString, 'image/jpg');\r\n\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    render() {\r\n\r\n        let imageURL = 'data:image/png;base64,' + new Buffer(this.state.image,\r\n            'binary').toString('base64');\r\n\r\n        let $imagePreview = null;\r\n        if (this.state.image !== '') {\r\n            $imagePreview = (<img src = { imageURL } alt = { 'Profile Avatar' } />);\r\n        }\r\n        if (this.state.imagePreviewUrl) {\r\n            $imagePreview = (<img src = { this.state.imagePreviewUrl }\r\n                                  alt = { 'Profile Avatar' }\r\n            />);\r\n        }\r\n\r\n        return (\r\n            <div className = \"container\" id = \"EditModal\">\r\n                { this.state.loading ?\r\n                    <Spinner style = { {\r\n                        'height'         : '250px',\r\n                        'backgroundColor': 'transparent',\r\n                    } }\r\n                    /> :\r\n                    <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                        <div className = \"text-center\">\r\n                            <div className = \"avatar-upload\">\r\n                                <div className = \"avatar-edit\">\r\n                                    <input type = 'file'\r\n                                           id = \"imageUpload\"\r\n                                           accept = \".png, .jpg, .jpeg\"\r\n                                           onChange = { (e) => this._handleImageChange(e) }\r\n\r\n                                    />\r\n                                    <label htmlFor = \"imageUpload\" />\r\n                                </div>\r\n                                <div className = \"avatar-preview\">\r\n                                    <div id = \"imagePreview\">{ $imagePreview }</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <form className = \"form-horizontal needs-validation\"\r\n                              noValidate = \"novalidate\"\r\n                              onSubmit = { this.onSubmit }\r\n                        >\r\n                            <h3>Personal info</h3>\r\n                            <div className = \"form-group\">\r\n                                <label className = \"col-lg-6 control-label\">First\r\n                                    name:</label>\r\n                                <input className = \"form-control first-name-field\"\r\n                                       name = { 'Name' }\r\n                                       onChange = { this.onValueInput }\r\n                                       type = \"text\"\r\n                                       defaultValue = { this.state.Name }\r\n                                       required = \"required\"\r\n                                       pattern = \"[a-zA-Z ]+\"\r\n                                /> <span className = \"message\" />\r\n                            </div>\r\n                            <div className = \"form-group\">\r\n                                <label className = \"col-lg-6 control-label\">Last\r\n                                    name:</label>\r\n                                <input className = \"form-control last-name-field\"\r\n                                       name = { 'Surname' }\r\n                                       onChange = { this.onValueInput }\r\n                                       type = \"text\"\r\n                                       defaultValue = { this.state.Surname }\r\n                                       required = \"required\"\r\n                                       pattern = \"[a-zA-Z ]+\"\r\n                                /> <span className = \"message\" />\r\n                            </div>\r\n\r\n                            <div className = \"form-group\">\r\n                                <label className = \"col-lg-3 control-label\">Email:</label>\r\n                                <input className = \"form-control email-field\"\r\n                                       name = { 'Email' }\r\n                                       onChange = { this.onValueInput }\r\n                                       type = \"text\"\r\n                                       defaultValue = { this.state.Email }\r\n                                       required = \"required\"\r\n                                       pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                                /> <span className = \"message\" />\r\n                            </div>\r\n                            <div className = \"form-group\">\r\n                                <label className = \"col-md-6 control-label\">Phone Number:</label>\r\n                                <input className = \"form-control tel-field\"\r\n                                       name = { 'Phone_Number' }\r\n                                       onChange = { this.onValueInput }\r\n                                       type = \"text\"\r\n                                       defaultValue = { this.checkPhoneNo(this.state.Phone_Number) }\r\n                                       pattern=\"[0-9]{8}|[0-9]{11}\"\r\n                                       //required = \"required\"\r\n                                /> <span className = \"message\" />\r\n                            </div>\r\n\r\n                            <div className = \"form-group\">\r\n                                <label className = \"col-md-3 control-label\">Username:</label>\r\n                                <input className = \"form-control username-field\"\r\n                                       name = { 'username' }\r\n                                       onChange = { this.onValueInput }\r\n                                       type = \"text\"\r\n                                       defaultValue = { this.state.username }\r\n                                       pattern = \"[a-zA-Z0-9 ]+\"\r\n                                       required = \"required\"\r\n                                /> <span className = \"message\" />\r\n                            </div>\r\n                            <div className = \"form-group\">\r\n                                <label className = \"col-md-3 control-label\">Password:</label>\r\n                                <input className = \"form-control\"\r\n                                       name = { 'password' }\r\n                                       onChange = { this.onValueInput }\r\n                                       type = \"password\"\r\n                                       defaultValue = { this.state.password }\r\n                                       required = \"required\"\r\n                                />\r\n                            </div>\r\n                            <div className = \"form-group\">\r\n                                <label className = \"col-md-6 control-label\">Confirm\r\n                                    password:</label>\r\n                                <input className = \"form-control\"\r\n                                       name = { 'confirmPassword' }\r\n                                       onChange = { this.onValueInput }\r\n                                       type = \"password\"\r\n                                       defaultValue = { this.state.confirmPassword }\r\n                                       required = \"required\"\r\n                                />\r\n                            </div>\r\n                            <div className = \"form-group\">\r\n                                <label className = \"col-lg-6 control-label\">Add Medical History:</label>\r\n                                <textarea maxlength=\"400\" className = \"form-control last-name-field\"\r\n                                       name = { 'Medical_History' }\r\n                                       onChange = { this.onValueInput }\r\n                                       type = \"text\"\r\n                                       defaultValue = { this.state.Medical_History }\r\n                                       pattern = \"[a-zA-Z ]+\"\r\n\r\n                                /> <span className = \"message\" />\r\n                            </div>\r\n                            <div className = \"form-group\" id = \"buttons\">\r\n                                <label className = \"col-md-12 control-label\" id = \"savel\">\r\n                                    <input type = \"submit\"\r\n                                           className = \"btn btn-primary\"\r\n                                           defaultValue = \"Save Changes\"\r\n                                           id = \"save\"\r\n                                    />\r\n                                </label>\r\n                                <label className = \"col-md-12 control-label\" id = \"resetl\">\r\n                                    <input onClick = { this.refreshPage }\r\n                                           type = \"reset\"\r\n                                           className = \"btn btn-default\"\r\n                                           value = \"Reset\"\r\n                                           id = \"reset\"\r\n                                    />\r\n                                    <input type = \"button\"\r\n                                           className = \"btn btn-default\"\r\n                                           defaultValue = \"Delete Account\"\r\n                                           id = \"delete\"\r\n                                           onClick = { this.deleted }\r\n                                    />\r\n\r\n                                </label>\r\n\r\n                                <label id = \"csv\">\r\n                                    <CSVLink data={this.fillCSV(this.state.Name,this.state.Surname,this.state.Email,this.state.Medical_History,this.state.Phone_Number,this.state.username,this.state.password,this.state.Bdate,this.state.Age, this.props.dataPT, this.props.classes)}>Download my Data</CSVLink>\r\n                                </label>\r\n                            </div>\r\n                        </form>\r\n                    </AnimatedOnScroll>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditAccount;","import React, {Component} from 'react';\r\nimport {userData}         from '../../repository';\r\nimport Spinner            from '../Spinner';\r\n\r\nclass ProfileInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Name    : '',\r\n      Surname : '',\r\n      username: '',\r\n      image   : '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    userData()\r\n        .then(response => {\r\n          this.setState(response);\r\n        }).finally(() => this.props.toggleLoading());\r\n\r\n  }\r\n\r\n  render() {\r\n    let {image} = this.state;\r\n    let imageURL = 'https://www.w3schools.com/howto/img_avatar.png';\r\n    let $imagePreview = <img src = { imageURL } alt = { 'Profile Avatar' } />;\r\n    if (image !== '') {\r\n      imageURL =\r\n          'data:image/png;base64,' + new Buffer.from(image, 'binary').toString(\r\n          'base64');\r\n      $imagePreview = (<img src = { imageURL } alt = { 'Profile Avatar' } />);\r\n    }\r\n\r\n    const name = this.state.Name + ' ' + this.state.Surname;\r\n    return (\r\n        <div className = \"col-lg-4 col-md-12 col-sm-12\">\r\n          <div className = \"profile block\" id = \"profileBlock\">\r\n            <br />\r\n            { this.props.loadingInfo ?\r\n                <Spinner secondaryStyle = { true }\r\n                         style = { {\r\n                           'height'         : 'auto',\r\n                           'backgroundColor': 'transparent',\r\n                         } }\r\n                />\r\n                :\r\n                <div className = \"profile-picture big-profile-picture clear\">\r\n                  {/*<img id = \"profpic\" width = \"150px\" alt = \"Member Name\"*/ }\r\n                  {/*     src = { image }*/ }\r\n                  {/*/>*/ }\r\n                  <div className = \"avatar-preview d-flex justify-content-center\">\r\n                    <div id = \"imagePreview\">\r\n                      { $imagePreview }\r\n                    </div>\r\n                  </div>\r\n                  <div className = \"middleEdit\" id = \"Edit-Add\">\r\n                    <div className = \"mytext\">Add/Edit<br />\r\n                                              Profile Picture\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            }\r\n            <div className = \"user-name\">{ name }</div>\r\n            <div className = \"profile-description\">\r\n              <p className = \"scnd-font-color\">Welcome to your Fitness Factory\r\n                                               Profile!</p>\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileInfo;","import React, {Component}        from 'react';\r\n// noinspection ES6CheckImport\r\nimport {Redirect}                from 'react-router-dom';\r\nimport '../assets/styles/adminCoachProfile.css';\r\nimport {\r\n    getPrivateAnnouncementsAdmin,\r\n    userDetails,\r\n    updateAnnouncement,\r\n    deleteAnnouncement,\r\n    addPrivateAnnouncement,\r\n    getAllCoaches,\r\n    loggedInVisit,\r\n    updateProfileVisit,\r\n    userPic, staffData\r\n} from '../../repository';\r\n\r\nimport AnnouncementModal         from '../common/AnnouncementModal';\r\nimport {Button}                  from 'reactstrap';\r\nimport Box                       from '../common/SelectionPTCoach';\r\nimport Timetable                 from '../common/CoachSchedule';\r\nimport AnnouncementsPrivateModal from '../common/AnnouncementsPrivateModal';\r\nimport Swal                      from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport ButtonLoader              from '../common/ButtonLoader';\r\nimport Spinner                   from '../Spinner';\r\nimport ToggleModal from \"../common/ToggleModal\";\r\nimport MessagesModalAdminCoach from \"../common/MessagesModalAdminCoach\";\r\n\r\n\r\nclass ProfileCoach extends Component {\r\n\r\n    // noinspection DuplicatedCode\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nameStart            : '',\r\n            Name                 : '',\r\n            Surname              : '',\r\n            Email                : '',\r\n            username             : '',\r\n            searchResults        : [],\r\n            announcements        : [],\r\n            modal                : false,\r\n            modal2               : false,\r\n            modalTitle           : '',\r\n            modalMessage         : '',\r\n            modalAnnId           : '',\r\n            day                  : '',\r\n            time                 : '',\r\n            flag                 : false,\r\n            image                : '',\r\n            User_ID              : '',\r\n            Coach_ID             : '',\r\n            loadingSearchUser    : false,\r\n            loadingInfo          : false,\r\n            trainingScheduleCoach: [],\r\n            cleared              : false,\r\n            ownerName            :''\r\n        };\r\n\r\n        this.toggleAnnouncementsData = this.toggleAnnouncementsData.bind(this);\r\n        this.onAnnouncementSubmit = this.onAnnouncementSubmit.bind(this);\r\n        this.toggleAnnouncementsData2 = this.toggleAnnouncementsData2.bind(this);\r\n        this.onAnnouncementSubmit2 = this.onAnnouncementSubmit2.bind(this);\r\n        this.handleDayTimeChange = this.handleDayTimeChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.toggleAnnouncements = this.toggleAnnouncements.bind(this);\r\n        this.toggleAnnouncements2 = this.toggleAnnouncements2.bind(this);\r\n        this.searchButton = this.searchButton.bind(this);\r\n        this.userDropdown = this.userDropdown.bind(this);\r\n        this.onAnnouncementDelete = this.onAnnouncementDelete.bind(this);\r\n        this.clearOptions = this.clearOptions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        loggedInVisit().then();\r\n        updateProfileVisit().then();\r\n        staffData().then(response => {\r\n            // this.setState({image: response.image});\r\n            this.setState({ownerName: response.username});\r\n            console.log(response);\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.clearOptions();\r\n        this.setState({loadingSearchUser: true}, () => {\r\n            userDetails(this.state.nameStart)\r\n                .then(response => {\r\n                    this.setState({searchResults: response, loadingSearchUser: false});\r\n                });\r\n        });\r\n    };\r\n\r\n    toggleMessages = () => {\r\n        this.setState({modalMessages: !this.state.modalMessages});\r\n    };\r\n\r\n    onAnnouncementSubmit = async(Title, Message, Ann_ID) => {\r\n        if (this.state.level <= 1) {\r\n            Swal.fire(\r\n                'You are not authorized to do this!',\r\n                'Please log in and try again...',\r\n                'error',\r\n            ).then();\r\n            return false;\r\n        }\r\n\r\n        if (Title === this.state.announcements[this.state.modalAnnId].Title\r\n            && Message\r\n            === this.state.announcements[this.state.modalAnnId].Message) {\r\n            Swal.fire(\r\n                'Please give new data to update',\r\n                '',\r\n                'error',\r\n            ).then();\r\n            return false;\r\n        }\r\n\r\n        if (Title === '' || Message === '') {\r\n            Swal.fire(\r\n                'Please fill in all boxes',\r\n                '',\r\n                'error',\r\n            ).then();\r\n            return false;\r\n        }\r\n\r\n        let flag = false;\r\n        await updateAnnouncement(Ann_ID, Title, Message).then(response => {\r\n            this.setState({\r\n                announcements: this.state.announcements.map(ann => {\r\n                    let x = ann;\r\n                    if (ann.ANNOUNCEMENT_ID === response.ANNOUNCEMENT_ID) {\r\n                        // noinspection JSPrimitiveTypeWrapperUsage\r\n                        x.Title = Title;\r\n                        // noinspection JSPrimitiveTypeWrapperUsage\r\n                        x.Message = Message;\r\n                        // noinspection JSPrimitiveTypeWrapperUsage\r\n                        x.Ann_ID = Ann_ID;\r\n                    }\r\n                    return x;\r\n                }),\r\n            });\r\n            this.toggle();\r\n        }).then(() => {\r\n            flag = true;\r\n            Swal.fire(\r\n                'Private Announcement was updated successfully',\r\n                '',\r\n                'success',\r\n            );\r\n            this.toggle();\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n\r\n        return flag;\r\n    };\r\n\r\n    onAnnouncementDelete = async(ANNOUNCEMENT_ID) => {\r\n        if (this.state.level <= 1) {\r\n            Swal.fire(\r\n                'You are not authorized to do this!',\r\n                'Please log in and try again...',\r\n                'error',\r\n            ).then();\r\n            return false;\r\n        }\r\n\r\n        let flag = false;\r\n        await Swal.fire({\r\n            title             : 'Are you sure?',\r\n            text              : 'You won\\'t be able to revert this!',\r\n            icon              : 'warning',\r\n            showCancelButton  : true,\r\n            confirmButtonColor: '#3085D6',\r\n            cancelButtonColor : '#DD3333',\r\n            confirmButtonText : 'Yes, delete it!',\r\n        }).then(async(result) => {\r\n            if (result.value) {\r\n                await deleteAnnouncement(\r\n                    this.state.announcements[ANNOUNCEMENT_ID].ANNOUNCEMENT_ID)\r\n                    .then(() => {\r\n                        this.setState({\r\n                            announcements: this.state.announcements.filter(\r\n                                ann => ann.ANNOUNCEMENT_ID\r\n                                    !== this.state.announcements[ANNOUNCEMENT_ID].ANNOUNCEMENT_ID),\r\n                        }, () => Swal.fire(\r\n                            'Private Announcement deleted successfully',\r\n                            '',\r\n                            'success',\r\n                        ));\r\n                        flag = true;\r\n                    })\r\n                    .catch(() => Swal.fire(\r\n                        'Something went wrong',\r\n                        'Please try again...',\r\n                        'error',\r\n                    ));\r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n                Swal.fire(\r\n                    'Cancelled',\r\n                    'Your Private Announcement is safe :)',\r\n                    'error',\r\n                ).then();\r\n            }\r\n        });\r\n\r\n        return flag;\r\n    };\r\n\r\n    onAnnouncementSubmit2 = async(Title, Message) => {\r\n        if (this.state.level <= 1) {\r\n            Swal.fire(\r\n                'You are not authorized to do this!',\r\n                'Please log in and try again...',\r\n                'error',\r\n            ).then();\r\n            return false;\r\n        }\r\n\r\n        if (!this.state.username || this.state.username === '') {\r\n            Swal.fire(\r\n                'Please select a user first',\r\n                '',\r\n                'error',\r\n            ).then();\r\n            return false;\r\n        }\r\n\r\n        if (Title === '' || Message === '') {\r\n            Swal.fire(\r\n                'Please fill in all boxes',\r\n                '',\r\n                'error',\r\n            ).then();\r\n            return false;\r\n        }\r\n\r\n        let flag = false;\r\n        await addPrivateAnnouncement(Title, Message, this.state.username)\r\n            .then(response => {\r\n                let prevAnn = this.state.announcements.slice(0);\r\n                prevAnn.push(\r\n                    {\r\n                        ANNOUNCEMENT_ID: response.data.ANNOUNCEMENT_ID,\r\n                        Title          : Title,\r\n                        Message        : Message,\r\n                        TIMESTAMP      : new Date().toISOString(),\r\n                    });\r\n                this.setState({announcements: prevAnn});\r\n            }).then(() => {\r\n                flag = true;\r\n                Swal.fire(\r\n                    'Private Announcement added successfully',\r\n                    '',\r\n                    'success',\r\n                );\r\n                this.toggle2();\r\n            }).catch(() => Swal.fire(\r\n                'Something went wrong',\r\n                'Please try again...',\r\n                'error',\r\n            ));\r\n\r\n        return flag;\r\n    };\r\n\r\n    toggle = () => {\r\n        if (this.state.level <= 1) {\r\n            return;\r\n        }\r\n        this.setState({modal: !this.state.modal});\r\n    };\r\n\r\n    toggle2 = () => {\r\n        if (this.state.level <= 1) {\r\n            return;\r\n        }\r\n        this.setState({modal2: !this.state.modal2});\r\n    };\r\n\r\n    searchButton = (e) => {\r\n        this.setState({nameStart: e.target.value});\r\n    };\r\n\r\n    userDropdown = (e) => {\r\n        const username = e.target.value;\r\n        const user = this.state.searchResults.find(\r\n            usr => usr.username === username);\r\n        if (!user) {\r\n            return null;\r\n        }\r\n\r\n        this.setState({loadingInfo: true}, async() => {\r\n            await this.updateCoaches(user, username);\r\n            await this.updatePrivateAnnouncements(username);\r\n            this.setState({loadingInfo: false});\r\n        });\r\n    };\r\n\r\n    updateCoaches = async(user, username) => {\r\n        return new Promise((resolve) => {\r\n            this.setState({\r\n                Name   : user.Name,\r\n                Surname: user.Surname,\r\n                Email  : user.Email,\r\n                username,\r\n                // image: user.image,\r\n                User_ID: user.User_ID,\r\n                cleared: false\r\n            }, () => {\r\n            });\r\n            return resolve();\r\n        });\r\n    };\r\n\r\n    updatePrivateAnnouncements = async(username) => {\r\n        return new Promise((resolve) => {\r\n            getPrivateAnnouncementsAdmin(username).then(response => {\r\n                this.setState({announcements: response.data.announcements});\r\n            });\r\n            return resolve();\r\n        });\r\n    };\r\n\r\n    toggleAnnouncements = () => {\r\n        this.setState({modalAnnouncements: !this.state.modalAnnouncements});\r\n    };\r\n\r\n    toggleAnnouncements2 = () => {\r\n        this.setState({modalAnnouncements2: !this.state.modalAnnouncements2});\r\n    };\r\n\r\n    handleDayTimeChange = (day, time, flag, Coach_ID) => {\r\n        this.setState({day, time, flag, Coach_ID}, () => {\r\n        });\r\n    };\r\n\r\n\r\n    toggleAnnouncementsData = (e) => {\r\n        const x = this.state.announcements[e.target.id - 100];\r\n        if (x === undefined) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            modalTitle  : x.Title,\r\n            modalMessage: x.Message,\r\n            modalAnnId  : e.target.id - 100,\r\n        }, () => {\r\n            this.toggleAnnouncements();\r\n        });\r\n    };\r\n\r\n    toggleAnnouncementsData2 = () => {\r\n        this.toggleAnnouncements2();\r\n    };\r\n\r\n    clearOptions() {\r\n        this.setState({User_ID : '', announcements: [], cleared: true})\r\n        const clientList = document.getElementById('userList');\r\n        clientList.value = \"\";\r\n    }\r\n\r\n\r\n    render() {\r\n        let {image} = this.state;\r\n        let imageURL = 'https://www.w3schools.com/howto/img_avatar.png';\r\n        let $imagePreview = <img src = { imageURL } alt = { 'Profile' } />;\r\n        if (image !== '') {\r\n            imageURL =\r\n                'data:image/png;base64,' + new Buffer.from(image, 'binary').toString(\r\n                'base64');\r\n            $imagePreview = (<img src = { imageURL } alt = { 'Profile' } />);\r\n        }\r\n\r\n        return (\r\n            <div id = 'profile' className = \"\">\r\n                { (this.props.userLevel === 'coach') ? '' : <Redirect to = \"/\" /> }\r\n                <div className = \"container-back\">\r\n                    <div className = \"row\">\r\n                        <div className = \"col-md-4\">\r\n                            <h4>Search for Client:</h4>\r\n                            <form className = \"adminViewClient\">\r\n                                <div className = \"d-flex bd-highlight\">\r\n                                    <div className = \"p-lg-2 flex-fill w-100\">\r\n                                        <input className = \"h-100 w-100 m-0\"\r\n                                               name = { 'Name' }\r\n                                               onChange = { this.searchButton }\r\n                                               type = \"text\"\r\n                                               placeholder = \"Search\"\r\n                                               aria-label = \"Search\"\r\n                                               id = \"searchClient\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className = \"p-sm-1 flex-fill bd-highlight \">\r\n                                        <ButtonLoader text = { '' }\r\n                                                      textIcon = { true }\r\n                                                      loadingText = { '' }\r\n                                                      size = { 'lg' }\r\n                                                      type = { 'submit' }\r\n                                                      onClick = { this.onSubmit }\r\n                                                      loading = { this.state.loadingSearchUser }\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            <br />\r\n                            <div className = \"form-group\">\r\n                                <label htmlFor = \"userList\"><h6>Clients Retrieved:</h6>\r\n                                </label>\r\n                                <select className = \"form-control\"\r\n                                        name = { 'username' }\r\n                                        id = \"userList\"\r\n                                        onChange = { this.userDropdown }\r\n                                        required\r\n                                >\r\n                                    <option value = \"\" hidden>Client List Generated</option>\r\n                                    { this.state.searchResults.map((res, index) => {\r\n                                        return <option value = { res.username } key = { index }>\r\n                                            { res.Name } { res.Surname } { res.username }\r\n                                        </option>;\r\n                                    })\r\n                                    }\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className = \"col-md-4\">\r\n                            <Box toogle = { this.handleDayTimeChange }\r\n                                 userID = { this.state.User_ID }\r\n                            />\r\n                        </div>\r\n                        <div className = \"col-md-4\">\r\n                            <label htmlFor = \"comment\"><h4>Messages:</h4></label>\r\n                            <div className=\"form-group\">\r\n                                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                                        onClick = { this.toggleMessages }\r\n                                        style = { {width: '100%'} }\r\n                                >\r\n                                    <i className = \"scnd-font-color fa fa-envelope\" /> Exchange Messages with this Client\r\n                                    { this.state.TotalMessages > 0 &&\r\n                                    <div className = \"menu-box-number\">{ this.state.TotalMessages }</div> }\r\n                                </Button>\r\n                                <ToggleModal\r\n                                    modal = { this.state.modalMessages }\r\n                                    toggle = { this.toggleMessages }\r\n                                    modalSize = { 'md' }\r\n                                    modalHeader = { 'Messages' }\r\n                                    modalBody = {\r\n                                        <MessagesModalAdminCoach\r\n                                            userName = {this.state.ownerName}\r\n                                            userLevel = { this.props.userLevel}\r\n                                            TotalMessages = { this.state.TotalMessages }\r\n                                            toggleTotalMessages = { this.toggleTotalMessages }\r\n                                        /> }\r\n                                />\r\n                            </div>\r\n                            <br/>\r\n                            <label htmlFor = \"comment\"><h4>Announcements:</h4></label>\r\n                            <div className = \"menu-box-tab menu-text\" id = \"EditAnns\">\r\n                                { this.state.announcements.sort(\r\n                                    function(a, b) {\r\n                                        return b.ANNOUNCEMENT_ID\r\n                                            - a.ANNOUNCEMENT_ID;\r\n                                    }).map((ann, index) => {\r\n                                    return <Button className = \"nav-link menu-box-tab menu-text\"\r\n                                                   onClick = { this.toggleAnnouncementsData.bind(\r\n                                                       this) } id = { index + 100 }\r\n                                                   key = { index }\r\n                                    ><i style = { {marginRight: 10 + 'px'} }\r\n                                        className = \"scnd-font-color fa fa-tasks\"\r\n                                    />\r\n                                        { ann.Title }{ <p> (</p> }{ ann.TIMESTAMP[0] }\r\n                                        { ann.TIMESTAMP[1] }{ ann.TIMESTAMP[2] }{ ann.TIMESTAMP[3] }{ ann.TIMESTAMP[4] }{ ann.TIMESTAMP[5] }\r\n                                        { ann.TIMESTAMP[6] }{ ann.TIMESTAMP[7] } { ann.TIMESTAMP[8] }{ ann.TIMESTAMP[9] }{\r\n                                            <p\r\n                                                id = \"extra\"\r\n                                            >)</p> }\r\n                                    </Button>;\r\n                                }) }\r\n\r\n                            </div>\r\n                            <Button id = \"addAnn\"\r\n                                    className = { ' edit nav-link menu-box-tab menu-text ' }\r\n                                    onClick = { this.toggleAnnouncements2 }\r\n                            >\r\n                                <i style = { {marginRight: 10 + 'px'} }\r\n                                   className = \"scnd-font-color fa fa-tasks\"\r\n                                /> Add Announcement\r\n                            </Button>\r\n                            <AnnouncementsPrivateModal\r\n                                onSubmit = { this.onAnnouncementSubmit2 }\r\n                                toggle = { this.toggleAnnouncements2 }\r\n                                modal = { this.state.modalAnnouncements2 }\r\n                                resetOnSubmit = { true }\r\n                            />\r\n                            <AnnouncementModal onSubmit = { this.onAnnouncementSubmit }\r\n                                               DeleteAnn = { this.onAnnouncementDelete }\r\n                                               toggle = { this.toggleAnnouncements }\r\n                                               modal = { this.state.modalAnnouncements }\r\n                                               announcements = { this.state.announcements }\r\n                                               title = { this.state.modalTitle }\r\n                                               message = { this.state.modalMessage }\r\n                                               announcement_id = { this.state.modalAnnId }\r\n                                               isPrivate = { true }\r\n                            />\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className = \"row\">\r\n                        <div id = \"timeTableHeading\">Personal Training Schedule\r\n                        </div>\r\n                        <div className = \"col-md-12 col-lg-12\">\r\n                            <Timetable day = { this.state.day }\r\n                                       time = { this.state.time }\r\n                                       flag = { this.state.flag }\r\n                                       coachID = { this.state.Coach_ID }\r\n                                       userID = { this.state.User_ID }\r\n                                       userName = {this.state.Name + '\\r\\n' + this.state.Surname}\r\n                                       cleared = {this.state.cleared}\r\n                                       invalid = { this.state.invalid}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default ProfileCoach;","import React, {Component} from 'react';\r\nimport '../assets/styles/BookDropdown.css'\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass SelectionPTCoach extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            day: '',\r\n            time: '',\r\n            flag: false,\r\n            selectionDay : '',\r\n            selectionTime : '',\r\n\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n        this.handleDay = this.handleDay.bind(this);\r\n        this.handleTime = this.handleTime.bind(this);\r\n        this.clearOptions = this.clearOptions.bind(this);\r\n    }\r\n\r\n    handleDay = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            selectionDay : e.target.value,\r\n        }, () => {\r\n        });\r\n    };\r\n\r\n    handleTime = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            selectionTime : e.target.value,\r\n        }, () => {\r\n        });\r\n    };\r\n\r\n\r\n    onSubmit = () => {\r\n        if (this.state.selectionTime === '' || this.state.selectionDay === ''){\r\n            Swal.fire(\r\n                'Required selections are empty',\r\n                'Make sure that you have filled every selection first!',\r\n                'error',\r\n            ).then();\r\n        }else {\r\n            this.setState({flag: true},\r\n                () => {\r\n                    this.props.toogle(\r\n                        this.state.day,\r\n                        this.state.time,\r\n                        this.state.flag,\r\n                        this.state.Coach_ID,\r\n                    );\r\n                });\r\n        }\r\n    };\r\n\r\n    onDelete = () => {\r\n        if (this.state.selectionTime === '' || this.state.selectionDay === ''){\r\n            Swal.fire(\r\n                'Required selections are empty',\r\n                'Make sure that you have filled every selection first!',\r\n                'error',\r\n            ).then();\r\n        }else {\r\n            this.setState({flag: false},\r\n                () => {\r\n                    this.props.toogle(\r\n                        this.state.day,\r\n                        this.state.time,\r\n                        this.state.flag,\r\n                        this.state.Coach_ID,\r\n                    );\r\n                });\r\n        }\r\n\r\n    };\r\n\r\n    clearOptions() {\r\n        const timeNode = document.getElementById('TimePers');\r\n        timeNode.value = 0;\r\n        const dayNode = document.getElementById('DayPers');\r\n        dayNode.value = 0;\r\n    }\r\n\r\n    // noinspection JSUnusedLocalSymbols\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.userID !== this.props.userID) {\r\n            (async () => {\r\n                if (prevProps.userID !== this.props.userID) {\r\n                    await this.clearOptions();\r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"form smallerBack\" id=\"backBox\" >\r\n                    <h3 id=\"bmiHeading\"><b>C</b>hoose <b>D</b>ay and <b>T</b>ime</h3>\r\n                    <div className=\"row\" id=\"first-row\">\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <label htmlFor=\"DropDays\">Day:</label>\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"day\" id=\"DayPers\"\r\n                                    onChange={this.handleDay} required>\r\n                                <option value=\"0\" hidden>Day Option</option>\r\n                                <option value=\"1\">Monday</option>\r\n                                <option value=\"2\">Tuesday</option>\r\n                                <option value=\"3\">Wednesday</option>\r\n                                <option value=\"4\">Thursday</option>\r\n                                <option value=\"5\">Friday</option>\r\n                                <option value=\"6\">Saturday</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <label htmlFor=\"DropClass\">Time:</label>\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"time\" id=\"TimePers\"\r\n                                    onChange={this.handleTime} required>\r\n                                <option value=\"0\" hidden>Time Option</option>\r\n                                <option value=\"1\">08:00-09:00</option>\r\n                                <option value=\"2\">09:00-10:00</option>\r\n                                <option value=\"3\">10:00-11:00</option>\r\n                                <option value=\"4\">11:00-12:00</option>\r\n                                <option value=\"5\">12:00-13:00</option>\r\n                                <option value=\"6\">13:00-14:00</option>\r\n                                <option value=\"7\">14:00-15:00</option>\r\n                                <option value=\"8\">15:00-16:00</option>\r\n                                <option value=\"9\">16:00-17:00</option>\r\n                                <option value=\"10\">17:00-18:00</option>\r\n                                <option value=\"11\">18:00-19:00</option>\r\n                                <option value=\"12\">19:00-20:00</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <button type=\"button\" className=\"RowButton\" onClick={this.onSubmit}>Submit</button>\r\n                        </div>\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <button type=\"button\" className=\"RowButton\" onClick={this.onDelete}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectionPTCoach;","import React, {Component} from 'react';\r\nimport '../assets/styles/PersonalTrainingTimetable.css';\r\nimport {\r\n    insertPT,\r\n    deletePT,\r\n    getCoachTraining,\r\n    getCoachID, getPersonalSchedule, getClassSchedule,\r\n    getCoachClasses\r\n} from '../../repository';\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass CoachSchedule extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            Coach_ID: '',\r\n            User_ID: '',\r\n            coachName: '',\r\n\r\n            clientNames: [],\r\n            flag: false,\r\n            refIDsCoach: [],\r\n\r\n            refIDs: [],\r\n            cIDs: [],\r\n            cNames: [],\r\n            Name: '',\r\n            ClassColors: [\r\n                '#812029',\r\n                '#1A63D9',\r\n                '#CF1B1B',\r\n                '#FFAD1F',\r\n                '#704585',\r\n                '#53878C',\r\n                '#C97200',\r\n                '#489655',\r\n                '#158CA3',\r\n                '#9E134B',\r\n            ]\r\n        };\r\n\r\n        this.insertDeleteMethodStates = this.insertDeleteMethodStates.bind(this);\r\n        this.fillTable = this.fillTable.bind(this);\r\n        this.ColorLuminance = this.ColorLuminance.bind(this);\r\n        this.StateSetter = this.StateSetter.bind(this);\r\n    }\r\n\r\n    // Modals for error messages in case of wrong input.\r\n    toggleModalCoachBooked = () => {\r\n        Swal.fire(\r\n            'This time is unavailable.',\r\n            // 'The coach has another scheduled client or a class at this time.',\r\n            '',\r\n            'error',\r\n        ).then();\r\n    };\r\n\r\n    toggleModalAnotherClient = () => {\r\n        Swal.fire(\r\n            'You cannot delete the Personal Training Session of a different client.',\r\n            'Please choose the appropriate client.',\r\n            'error',\r\n        ).then();\r\n    };\r\n\r\n    toggleModalEmptyCell = () => {\r\n        Swal.fire(\r\n            'There is no Personal Training Session to delete here.',\r\n            '',\r\n            'error',\r\n        ).then();\r\n    };\r\n\r\n    toggleModalClientHasClass = () => {\r\n        Swal.fire(\r\n            'The client has a class enrolled at this time.',\r\n            'You are not authorised to delete that.',\r\n            'error',\r\n        ).then();\r\n    };\r\n\r\n    toggleModalClientHasClassInsert = () => {\r\n        Swal.fire(\r\n            'The client has a class enrolled at this time.',\r\n            'You cannot schedule a Personal Training Session.',\r\n            'error',\r\n        ).then();\r\n    };\r\n\r\n    //method responsible for displaying the enrolled classes and personal\r\n    // training according to the user data from the database\r\n    fillTable(coaches, clientNames, classRefIDs) {\r\n        let node;\r\n        for (let i = 1; i <= 6; i++) {\r\n            for (let x = 1; x <= 12; x++) {\r\n                let refID = '';\r\n                if (x < 10) {\r\n                    refID = i + '.0' + x;\r\n                } else {\r\n                    refID = i + '.' + x;\r\n                }\r\n                if (coaches.includes(refID)) {\r\n                    node = document.getElementById(refID);\r\n                    node.setAttribute('style', 'white-space: pre;');\r\n                    node.className = 'coachBooked';\r\n                    node.textContent = clientNames[coaches.indexOf(refID)];\r\n                } else {\r\n                    if (classRefIDs.includes(refID) && !this.state.refIDs.includes(refID)) {\r\n                        node = document.getElementById(refID);\r\n                        node.style.backgroundImage = '';\r\n                        node.className = 'classesBackground';\r\n                        node.textContent = '';\r\n                    } else {\r\n                        if (!this.state.refIDsCoach.includes(refID) && !this.state.refIDs.includes(refID)) {\r\n                            node = document.getElementById(refID);\r\n                            node.style.backgroundImage = '';\r\n                            node.className = '';\r\n                            node.textContent = '';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    insertDeleteMethodStates() {\r\n        this.setState({\r\n            // refIDs: x,\r\n            User_ID: this.props.userID,\r\n            time: this.props.time,\r\n            day: this.props.day,\r\n        }, () => {\r\n            if (this.props.flag === true) {\r\n                insertPT(this.state).then();\r\n            } else {\r\n                deletePT(this.state).then();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    ColorLuminance = (hex, lum) => {\r\n        // validate hex string\r\n        hex = String(hex).replace(/[^0-9a-f]/gi, '');\r\n        if (hex.length < 6) {\r\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n        }\r\n        lum = lum || 0;\r\n        // convert to decimal and change luminosity\r\n        let rgb = '#', c, i;\r\n        for (i = 0; i < 3; i++) {\r\n            c = parseInt(hex.substr(i * 2, 2), 16);\r\n            c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n            rgb += ('00' + c).substr(c.length);\r\n        }\r\n        return rgb;\r\n    };\r\n\r\n    StateSetter(x, y, z) {\r\n        this.setState({refIDs: x}, () => {\r\n            this.setState({cIDs: y}, () => {\r\n                this.setState({cNames: z});\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.clear();\r\n        let coachID = '';\r\n        let coachName = '';\r\n        getCoachID().then(response => {\r\n            this.setState(\r\n                {Coach_ID: response.Coach_ID}, () => {\r\n                    coachID = response.Coach_ID;\r\n                    coachName = response.CoachName;\r\n                    getCoachClasses(this.state.Coach_ID).then(response => {\r\n                        let ret = response.slice(0);\r\n                        let refID;\r\n                        (async () => {\r\n                            let x = this.state.refIDs;\r\n                            let y = this.state.cIDs;\r\n                            let z = this.state.cNames;\r\n                            ret.forEach((item) => {\r\n                                    if (item.TimeCode < 10) {\r\n                                        this.setState(\r\n                                            {refID: item.DayCode + '.0' + item.TimeCode});\r\n                                        refID = item.DayCode + '.0' + item.TimeCode;\r\n                                    } else {\r\n                                        this.setState(\r\n                                            {refID: item.DayCode + '.' + item.TimeCode});\r\n                                        refID = item.DayCode + '.' + item.TimeCode;\r\n                                    }\r\n                                    if (!x.includes(refID)) {\r\n                                        x.push(refID);\r\n                                        y.push(item.ClassID);\r\n                                        z.push(item.Name);\r\n                                        let node = document.getElementById(refID);\r\n                                        node.className = 'BusySlot';\r\n                                        node.childNodes[0].textContent = item.Name;\r\n\r\n                                        if (z.includes(item.Name)) {\r\n                                            node.style.backgroundImage =\r\n                                                'linear-gradient(to bottom right,'\r\n                                                + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                                                item.Name)] % 9] + ','\r\n                                                + this.ColorLuminance(\r\n                                                this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                                    item.Name)]) % 9], -0.5) + ')';\r\n                                        } else {\r\n                                            node.style.backgroundImage =\r\n                                                'linear-gradient(to bottom right,'\r\n                                                + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                                                item.Name)] % 9] + ','\r\n                                                + this.ColorLuminance(\r\n                                                this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                                    item.Name)]) % 9], -0.5) + ')';\r\n                                        }\r\n                                    }\r\n                                },\r\n                            );\r\n                            await this.StateSetter(x, y, z);\r\n                        })();\r\n                    });\r\n                });\r\n\r\n            (async () => {\r\n                let trainingScheduleCoach = [];\r\n\r\n                await getCoachTraining(coachID).then(response => {\r\n                    trainingScheduleCoach = response;\r\n                });\r\n\r\n                let retCoach = [...trainingScheduleCoach];\r\n                let refID = '';\r\n                let refIDsCoach = [];\r\n                let clientNames = [];\r\n                // Finding the personal training schedule of the coach\r\n                retCoach.forEach((coach) => {\r\n                        if (coach.Time < 10) {\r\n                            refID = coach.Day + '.0' + coach.Time;\r\n                        } else {\r\n                            refID = coach.Day + '.' + coach.Time;\r\n                        }\r\n                        // Create a new array based on current state:\r\n                        if (!refIDsCoach.includes(refID)) {\r\n                            refIDsCoach.push(refID);\r\n                            let fullName = coach.Name + '\\r\\n' + coach.Surname;\r\n                            clientNames.push(fullName);\r\n                        }\r\n                    },\r\n                );\r\n                await this.setState({refIDsCoach: refIDsCoach, clientNames: clientNames});\r\n                // Inserting to table\r\n\r\n                await this.fillTable(this.state.refIDsCoach, this.state.clientNames, []);\r\n            })();\r\n\r\n        });\r\n    }\r\n\r\n    // noinspection JSUnusedLocalSymbols\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.day !== this.props.day || prevProps.time !== this.props.time\r\n            || prevProps.flag !== this.props.flag || prevProps.userID\r\n            !== this.props.userID || prevProps.userName !== this.props.userName) {\r\n            console.clear();\r\n            (async () => {\r\n                let user = this.props.userID;\r\n                if (user === '') {\r\n                    Swal.fire(\r\n                        'Please select a user first!',\r\n                        '',\r\n                        'error',\r\n                    ).then();\r\n                    return;\r\n                }\r\n\r\n                let refID = '';\r\n                //  Client's PT and Classes\r\n                let personalTraining = [];\r\n                let classSchedule = [];\r\n\r\n                if (this.props.userID !== '') {\r\n                    //  Retrieving the Personal Schedule of the client (Classes and PT)\r\n                    await getPersonalSchedule(this.props.userID).then(response => {\r\n                        personalTraining = response;\r\n\r\n                    });\r\n                    await getClassSchedule(this.props.userID).then(response => {\r\n                        classSchedule = response;\r\n                    });\r\n                }\r\n\r\n                // ****************** Filling the arrays ***************************\r\n                // -------------------- Class Schedule -------------------------\r\n                let ret = [...classSchedule];\r\n                let classRefIDs = [];\r\n                // for loop for traversing fetched data for ClassSchedule and filling\r\n                // tables accordingly\r\n                ret.forEach((item) => {\r\n                        if (item.TimeCode < 10) {\r\n                            refID = item.DayCode + '.0' + item.TimeCode;\r\n                        } else {\r\n                            refID = item.DayCode + '.' + item.TimeCode;\r\n                        }\r\n                        if (!classRefIDs.includes(refID)) {\r\n                            classRefIDs.push(refID);\r\n                        }\r\n                    },\r\n                );\r\n\r\n                // ------------------------ Personal Training --------------------------\r\n                ret = [...personalTraining];\r\n                refID = '';\r\n                let coachID = '';\r\n                let ClientRefIDs = [];\r\n                if (ret.length !== 0) {\r\n                    let coachName = '';\r\n                    ret.forEach((item) => {\r\n                            if (item.Time < 10) {\r\n                                refID = item.Day + '.0' + item.Time;\r\n                            } else {\r\n                                refID = item.Day + '.' + item.Time;\r\n                            }\r\n                            // Create a new array based on current state:\r\n                            coachID = item.Coach_ID;\r\n                            coachName = item.CoachName + ' ' + item.Surname;\r\n                            if (!ClientRefIDs.includes(refID)) {\r\n                                ClientRefIDs.push(refID);\r\n                            }\r\n                        },\r\n                    );\r\n                }\r\n\r\n                /* Printing the Client Classes */\r\n                await this.fillTable(this.state.refIDsCoach, this.state.clientNames, classRefIDs);\r\n\r\n                // Checking if the client has the same coach assigned for PT\r\n                if (coachID !== this.state.Coach_ID) {\r\n                    Swal.fire(\r\n                        'A different coach is registered for personal training for this client',\r\n                        'You cannot add a personal schedule session to this client',\r\n                        'error',\r\n                    ).then();\r\n                    return;\r\n                }\r\n                // *********** Getting day and time from box select ***************\r\n                let time = this.props.time;\r\n                let day = this.props.day;\r\n                if (this.props.time < 10) {\r\n                    refID = day + '.0' + time;\r\n                } else {\r\n                    refID = day + '.' + time;\r\n                }\r\n                if (prevProps.userID !== this.props.userID) {\r\n                    refID = '';\r\n                }\r\n\r\n                if ((time === '' || day === '')) {\r\n                    refID = '';\r\n                }\r\n\r\n                let refIDsCoach = [...this.state.refIDsCoach];\r\n                let clientNames = [...this.state.clientNames];\r\n                if (!this.state.refIDsCoach.includes(refID)\r\n                    && this.props.flag === true && refID !== '' && !classRefIDs.includes(\r\n                        refID) && !this.state.refIDs.includes(refID)) {\r\n\r\n                    refIDsCoach.push(refID);\r\n                    clientNames.push(this.props.userName);\r\n                    await this.setState({refIDsCoach: refIDsCoach, clientNames: clientNames})\r\n                    await this.insertDeleteMethodStates();\r\n                } else {\r\n                    let pos = ClientRefIDs.indexOf(refID);\r\n                    let posCoach = refIDsCoach.indexOf(refID);\r\n                    if (refIDsCoach.includes(refID) && ClientRefIDs.includes(refID) && this.props.flag === false && refID !== '') {\r\n                        ClientRefIDs.splice(pos, 1);\r\n                        refIDsCoach.splice(posCoach, 1);\r\n                        clientNames.splice(posCoach, 1);\r\n                        await this.setState({refIDsCoach: refIDsCoach, clientNames: clientNames})\r\n\r\n                        await this.insertDeleteMethodStates();\r\n                    } else {\r\n                        /* Conflict and Error Messages */\r\n                        // Insert Warnings\r\n                        // Coach has another PT or class at this time\r\n                        if ((refIDsCoach.includes(refID) || this.state.refIDs.includes(refID))\r\n                            && this.props.flag === true) {\r\n                            this.toggleModalCoachBooked();\r\n                            coachID = '';\r\n                        }\r\n                        // User has a class at that time.\r\n                        if ((!refIDsCoach.includes(refID) && !this.state.refIDs.includes(refID))\r\n                            && classRefIDs.includes(refID) && this.props.flag === true) {\r\n                            this.toggleModalClientHasClassInsert();\r\n                            coachID = '';\r\n                        }\r\n\r\n                        // Deletion Warnings\r\n                        // Different Client\r\n                        if ((refIDsCoach.includes(refID) && !ClientRefIDs.includes(refID))\r\n                            && this.props.flag === false) {\r\n                            this.toggleModalAnotherClient();\r\n                            coachID = '';\r\n                        }\r\n                        //Empty Cell\r\n                        if (!refIDsCoach.includes(refID) && !ClientRefIDs.includes(refID) &&\r\n                            !this.state.refIDs.includes(refID) && !classRefIDs.includes(refID) &&\r\n                            this.props.flag === false && refID !== '') {\r\n                            this.toggleModalEmptyCell();\r\n                            coachID = '';\r\n                        }\r\n                        // Client has a class\r\n                        if (classRefIDs.includes(refID) && this.props.flag === false) {\r\n                            this.toggleModalClientHasClass();\r\n                            coachID = '';\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                }\r\n                await this.fillTable(refIDsCoach, clientNames, classRefIDs);\r\n            })();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'container'}>\r\n                <div className=\"row\">\r\n                    <div className=\"timetable\">\r\n                        <div className=\"week-names\">\r\n                            <div>monday</div>\r\n                            <div>tuesday</div>\r\n                            <div>w/day</div>\r\n                            <div>thursday</div>\r\n                            <div>friday</div>\r\n                            <div>saturday</div>\r\n                            <div className=\"weekend\">sunday</div>\r\n                        </div>\r\n                        <div className=\"time-interval\">\r\n                            <div>8:00 - 09:00</div>\r\n                            <div>09:00 - 10:00</div>\r\n                            <div>10:00 - 11:00</div>\r\n                            <div>11:00 - 12:00</div>\r\n                            <div>12:00 - 13:00</div>\r\n                            <div>13:00 - 14:00</div>\r\n                            <div>14:00 - 15:00</div>\r\n                            <div>15:00 - 16:00</div>\r\n                            <div>16:00 - 17:00</div>\r\n                            <div>17:00 - 18:00</div>\r\n                            <div>18:00 - 19:00</div>\r\n                            <div>19:00 - 20:00</div>\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            {[...Array(6).keys()].map(x => (x + 1.01).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div key={index} id={x}>\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.02).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div key={index} id={x}>\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.03).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div key={index} id={x}>\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.04).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div key={index} id={x}>\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.05).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div key={index} id={x}>\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.06).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div key={index} id={x}>\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.07).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div key={index} id={x}>\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.08).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div key={index} id={x}>\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.09).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div key={index} id={x}>\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.10).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div key={index} id={x}>\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.11).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div key={index} id={x}>\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.12).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div key={index} id={x}>\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n                            <div className=\"weekend\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <div className={'row'}>\r\n                    <div className='col-sm-12 col-md-12 legendsBoxPT'>\r\n                        <div className=\"sameRow\">\r\n                            <div className='classBookedSmall'/>\r\n                            <small>&emsp;Client Class Enrolled</small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CoachSchedule;","import React, {Component}        from 'react';\r\n// noinspection ES6CheckImport\r\nimport {Redirect}                from 'react-router-dom';\r\nimport '../assets/styles/adminCoachProfile.css';\r\nimport {\r\n  getPrivateAnnouncementsAdmin,\r\n  userDetails,\r\n  updateAnnouncement,\r\n  deleteAnnouncement,\r\n  addPrivateAnnouncement,\r\n  getAllCoaches,\r\n  loggedInVisit,\r\n  updateProfileVisit,\r\n  userPic, getTotalPrivateAnnouncements,\r\n  getCoachInfo,\r\n  getClassSchedule,\r\n  getTotalMessages, userData, staffData\r\n} from '../../repository';\r\nimport AnnouncementModal         from '../common/AnnouncementModal';\r\nimport {Button}                  from 'reactstrap';\r\nimport Box                       from '../common/SelectionPT';\r\nimport Timetable                 from '../common/PersonalTrainingCreate';\r\nimport AnnouncementsPrivateModal from '../common/AnnouncementsPrivateModal';\r\nimport Swal                      from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport ButtonLoader              from '../common/ButtonLoader';\r\nimport Spinner                   from '../Spinner';\r\nimport ToggleModal from \"../common/ToggleModal\";\r\nimport MessagesModalAdminCoach from \"../common/MessagesModalAdminCoach.jsx\";\r\n\r\nclass ProfileAdmin extends Component {\r\n\r\n  // noinspection DuplicatedCode\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nameStart            : '',\r\n      Name                 : '',\r\n      Surname              : '',\r\n      Email                : '',\r\n      username             : '',\r\n      searchResults        : [],\r\n      announcements        : [],\r\n      modal                : false,\r\n      modal2               : false,\r\n      modalTitle           : '',\r\n      modalMessage         : '',\r\n      modalAnnId           : '',\r\n      day                  : '',\r\n      time                 : '',\r\n      flag                 : false,\r\n      image                : '',\r\n      User_ID              : '',\r\n      personalTraining     : [],\r\n      selectedCoaches      : [],\r\n      Coach_ID             : '',\r\n      loadingSearchUser    : false,\r\n      loadingInfo          : false,\r\n      trainingScheduleCoach: [],\r\n      classSchedule        : [],\r\n      coachIDAssigned      : '',\r\n      coachIDRet           : '',\r\n      TotalMessages        : 0,\r\n      ownerName            : ''\r\n    };\r\n\r\n    this.toggleAnnouncementsData = this.toggleAnnouncementsData.bind(this);\r\n    this.onAnnouncementSubmit = this.onAnnouncementSubmit.bind(this);\r\n    this.toggleAnnouncementsData2 = this.toggleAnnouncementsData2.bind(this);\r\n    this.onAnnouncementSubmit2 = this.onAnnouncementSubmit2.bind(this);\r\n    this.handleDayTimeChange = this.handleDayTimeChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.toggleAnnouncements = this.toggleAnnouncements.bind(this);\r\n    this.toggleAnnouncements2 = this.toggleAnnouncements2.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChange2 = this.handleChange2.bind(this);\r\n    this.onAnnouncementDelete = this.onAnnouncementDelete.bind(this);\r\n    this.toggleMessages = this.toggleMessages.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    loggedInVisit().then();\r\n    updateProfileVisit().then();\r\n    staffData().then(response => {\r\n      // this.setState({image: response.image});\r\n      this.setState({ownerName: response.username});\r\n      console.log(response);\r\n    })\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({loadingSearchUser: true}, () => {\r\n      userDetails(this.state.nameStart)\r\n          .then(response => {\r\n            this.setState({searchResults: response, loadingSearchUser: false});\r\n          });\r\n    });\r\n  };\r\n\r\n  toggleMessages = () => {\r\n    this.setState({modalMessages: !this.state.modalMessages});\r\n  };\r\n\r\n  onAnnouncementSubmit = async(Title, Message, Ann_ID) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === this.state.announcements[this.state.modalAnnId].Title\r\n        && Message\r\n        === this.state.announcements[this.state.modalAnnId].Message) {\r\n      Swal.fire(\r\n          'Please give new data to update',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === '' || Message === '') {\r\n      Swal.fire(\r\n          'Please fill in all boxes',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await updateAnnouncement(Ann_ID, Title, Message).then(response => {\r\n      this.setState({\r\n        announcements: this.state.announcements.map(ann => {\r\n          let x = ann;\r\n          if (ann.ANNOUNCEMENT_ID === response.ANNOUNCEMENT_ID) {\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Title = Title;\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Message = Message;\r\n            // noinspection JSPrimitiveTypeWrapperUsage\r\n            x.Ann_ID = Ann_ID;\r\n          }\r\n          return x;\r\n        }),\r\n      });\r\n      this.toggle();\r\n    }).then(() => {\r\n      flag = true;\r\n      Swal.fire(\r\n          'Private Announcement was updated successfully',\r\n          '',\r\n          'success',\r\n      );\r\n      this.toggle();\r\n    }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ));\r\n\r\n    return flag;\r\n  };\r\n\r\n  onAnnouncementDelete = async(ANNOUNCEMENT_ID) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then(async(result) => {\r\n      if (result.value) {\r\n        await deleteAnnouncement(\r\n            this.state.announcements[ANNOUNCEMENT_ID].ANNOUNCEMENT_ID)\r\n            .then(() => {\r\n              this.setState({\r\n                announcements: this.state.announcements.filter(\r\n                    ann => ann.ANNOUNCEMENT_ID\r\n                           !== this.state.announcements[ANNOUNCEMENT_ID].ANNOUNCEMENT_ID),\r\n              }, () => Swal.fire(\r\n                  'Private Announcement deleted successfully',\r\n                  '',\r\n                  'success',\r\n              ));\r\n              flag = true;\r\n            })\r\n            .catch(() => Swal.fire(\r\n                'Something went wrong',\r\n                'Please try again...',\r\n                'error',\r\n            ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Private Announcement is safe :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n\r\n    return flag;\r\n  };\r\n\r\n  onAnnouncementSubmit2 = async(Title, Message) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (!this.state.username || this.state.username === '') {\r\n      Swal.fire(\r\n          'Please select a user first',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === '' || Message === '') {\r\n      Swal.fire(\r\n          'Please fill in all boxes',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let flag = false;\r\n    await addPrivateAnnouncement(Title, Message, this.state.username)\r\n        .then(response => {\r\n          let prevAnn = this.state.announcements.slice(0);\r\n          prevAnn.push(\r\n              {\r\n                ANNOUNCEMENT_ID: response.data.ANNOUNCEMENT_ID,\r\n                Title          : Title,\r\n                Message        : Message,\r\n                TIMESTAMP      : new Date().toISOString(),\r\n              });\r\n          this.setState({announcements: prevAnn});\r\n        }).then(() => {\r\n          flag = true;\r\n          Swal.fire(\r\n              'Private Announcement added successfully',\r\n              '',\r\n              'success',\r\n          );\r\n          this.toggle2();\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n\r\n    return flag;\r\n  };\r\n\r\n  toggle = () => {\r\n    if (this.state.level <= 1) {\r\n      return;\r\n    }\r\n\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  toggle2 = () => {\r\n    if (this.state.level <= 1) {\r\n      return;\r\n    }\r\n\r\n    this.setState({modal2: !this.state.modal2});\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({nameStart: e.target.value});\r\n  };\r\n\r\n  handleChange2 = (e) => {\r\n    const username = e.target.value;\r\n    const user = this.state.searchResults.find(\r\n        usr => usr.username === username);\r\n    if (!user) {\r\n      return null;\r\n    }\r\n\r\n    this.setState({loadingInfo: true}, async() => {\r\n      await this.updateCoaches(user, username);\r\n      await this.updatePrivateAnnouncements(username);\r\n      await this.updateUserPic(user);\r\n      this.setState({loadingInfo: false});\r\n    });\r\n  };\r\n\r\n  updateUserPic = async(user) => {\r\n    return new Promise((resolve) => {\r\n      userPic(user.User_ID).then(response => {\r\n        this.setState({image: ''}, () => {\r\n          if (response[0] !== undefined) {\r\n            this.setState({image: response[0].image});\r\n          }\r\n        });\r\n        return resolve();\r\n      });\r\n      getTotalMessages().then(response => {\r\n        this.setState(\r\n            {TotalMessages: response.TotalMessages});\r\n      });\r\n    });\r\n\r\n  };\r\n\r\n  updateCoaches = async(user, username) => {\r\n    return new Promise((resolve) => {\r\n      this.setState({\r\n        Name   : user.Name,\r\n        Surname: user.Surname,\r\n        Email  : user.Email,\r\n        username,\r\n        // image: user.image,\r\n        User_ID: user.User_ID,\r\n      }, () => {\r\n        getAllCoaches().then(response => {\r\n          this.setState({selectedCoaches: response});\r\n        });\r\n\r\n      });\r\n      return resolve();\r\n    });\r\n  };\r\n\r\n  updatePrivateAnnouncements = async(username) => {\r\n    return new Promise((resolve) => {\r\n      getPrivateAnnouncementsAdmin(username).then(response => {\r\n        this.setState({announcements: response.data.announcements});\r\n      });\r\n      return resolve();\r\n    });\r\n  };\r\n\r\n  toggleAnnouncements = () => {\r\n    this.setState({modalAnnouncements: !this.state.modalAnnouncements});\r\n  };\r\n\r\n  toggleAnnouncements2 = () => {\r\n    this.setState({modalAnnouncements2: !this.state.modalAnnouncements2});\r\n  };\r\n\r\n  handleDayTimeChange = (day, time, flag, Coach_ID) => {\r\n    this.setState({day, time, flag, Coach_ID}, () => {\r\n    });\r\n  };\r\n\r\n  retrievedCoach = (coachID) => {\r\n    if(coachID !== '') {\r\n      this.setState({coachIDRet: coachID}, () => {\r\n        getCoachInfo(coachID).then(response => {\r\n          this.setState({selectedCoaches: response.messages});\r\n        });\r\n      });\r\n    }else{\r\n      getClassSchedule(this.state.User_ID).then(response => {\r\n        if(response !== []){\r\n          getAllCoaches().then(response => {\r\n            this.setState({selectedCoaches: response})\r\n          });\r\n        }\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n  toggleAnnouncementsData = (e) => {\r\n    const x = this.state.announcements[e.target.id - 100];\r\n    if (x === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      modalTitle  : x.Title,\r\n      modalMessage: x.Message,\r\n      modalAnnId  : e.target.id - 100,\r\n    }, () => {\r\n      this.toggleAnnouncements();\r\n    });\r\n  };\r\n\r\n  toggleAnnouncementsData2 = () => {\r\n    this.toggleAnnouncements2();\r\n  };\r\n\r\n\r\n  render() {\r\n    let {image} = this.state;\r\n    let imageURL = 'https://www.w3schools.com/howto/img_avatar.png';\r\n    let $imagePreview = <img src = { imageURL } alt = { 'Profile' } />;\r\n    if (image !== '') {\r\n      imageURL =\r\n          'data:image/png;base64,' + new Buffer.from(image, 'binary').toString(\r\n          'base64');\r\n      $imagePreview = (<img src = { imageURL } alt = { 'Profile' } />);\r\n      // console.log(image)\r\n    }\r\n\r\n    return (\r\n        <div id = 'profile' className = \"\">\r\n          { (this.props.userLevel === 'admin') ? '' : <Redirect to = \"/\" /> }\r\n          <div className = \"container-back\">\r\n            <div className = \"row\">\r\n              <div className = \"col-md-4\">\r\n                <h4>Search for Client:</h4>\r\n                <form className = \"adminViewClient\">\r\n                  <div className = \"d-flex bd-highlight\">\r\n                    <div className = \"p-lg-2 flex-fill w-100\">\r\n                      <input className = \"h-100 w-100 m-0\"\r\n                             name = { 'Name' }\r\n                             onChange = { this.handleChange }\r\n                             type = \"text\"\r\n                             placeholder = \"Search\"\r\n                             aria-label = \"Search\"\r\n                             id = \"searchClient\"\r\n                      />\r\n                    </div>\r\n                    <div className = \"p-sm-1 flex-fill bd-highlight \">\r\n                      <ButtonLoader text = { '' }\r\n                                    textIcon = { true }\r\n                                    loadingText = { '' }\r\n                                    size = { 'lg' }\r\n                                    type = { 'submit' }\r\n                                    onClick = { this.onSubmit }\r\n                                    loading = { this.state.loadingSearchUser }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <br />\r\n                <div className = \"form-group\">\r\n                  <label htmlFor = \"userList\"><h6>Clients Retrieved:</h6>\r\n                  </label>\r\n                  <select className = \"form-control\"\r\n                          name = { 'username' }\r\n                          id = \"userList\"\r\n                          onChange = { this.handleChange2 }\r\n                          required\r\n                  >\r\n                    <option value = \"\" hidden>Client List Generated</option>\r\n                    { this.state.searchResults.map((res, index) => {\r\n                      return <option value = { res.username } key = { index }>\r\n                        { res.Name } { res.Surname } { res.username }\r\n                      </option>;\r\n                    })\r\n                    }\r\n\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className = \"col-md-4\">\r\n                <h4>Client Details:</h4>\r\n                <div className = \"avatar-preview d-flex justify-content-center\">\r\n                  <div id = \"imagePreview\">\r\n                    { this.state.loadingInfo ?\r\n                        <Spinner secondaryStyle = { true }\r\n                                 style = { {\r\n                                   'height'         : 'auto',\r\n                                   'backgroundColor': 'transparent',\r\n                                 } }\r\n                        />\r\n                        :\r\n                        $imagePreview\r\n                    }\r\n                  </div>\r\n                </div>\r\n                <form id = \"clientDetails\">\r\n                  <div className = \"form-group\">\r\n                    <label htmlFor = \"nameInput\">Name</label>\r\n                    <input type = \"name\"\r\n                           className = \"form-control\"\r\n                           id = \"nameInput\"\r\n                           value = { this.state.Name }\r\n                           readOnly\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label htmlFor = \"nameInput\">Surname</label>\r\n                    <input type = \"surname\"\r\n                           className = \"form-control\"\r\n                           id = \"surnameInput\"\r\n                           value = { this.state.Surname }\r\n                           readOnly\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label htmlFor = \"exampleInputEmail1\">Email address</label>\r\n                    <input type = \"email\"\r\n                           className = \"form-control\"\r\n                           id = \"exampleInputEmail1\"\r\n                           value = { this.state.Email }\r\n                           readOnly\r\n                    />\r\n                  </div>\r\n                  <div className = \"form-group\">\r\n                    <label className = \"usernameIn\">Username</label>\r\n                    <input type = \"username\"\r\n                           className = \"form-control\"\r\n                           id = \"usernameIn\"\r\n                           value = { this.state.username }\r\n                           readOnly\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                            onClick = { this.toggleMessages }\r\n                            style = { {width: '100%'} }\r\n                    >\r\n                      <i className = \"scnd-font-color fa fa-envelope\" /> Exchange Messages with this Client\r\n                      { this.state.TotalMessages > 0 &&\r\n                      <div className = \"menu-box-number\">{ this.state.TotalMessages }</div> }\r\n                    </Button>\r\n                    <ToggleModal\r\n                        modal = { this.state.modalMessages }\r\n                        toggle = { this.toggleMessages }\r\n                        modalSize = { 'md' }\r\n                        modalHeader = { 'Messages' }\r\n                        modalBody = {\r\n                          <MessagesModalAdminCoach\r\n                              userName = {this.state.ownerName}\r\n                              userLevel = { this.props.userLevel}\r\n                              TotalMessages = { this.state.TotalMessages }\r\n                              toggleTotalMessages = { this.toggleTotalMessages }\r\n                          /> }\r\n                    />\r\n                  </div>\r\n\r\n                </form>\r\n              </div>\r\n              <div className = \"col-md-4\">\r\n                <label htmlFor = \"comment\"><h4>Announcements:</h4></label>\r\n\r\n                <div className = \"menu-box-tab menu-text\" id = \"EditAnns\">\r\n                  { this.state.announcements.sort(\r\n                      function(a, b) {\r\n                        return b.ANNOUNCEMENT_ID\r\n                               - a.ANNOUNCEMENT_ID;\r\n                      }).map((ann, index) => {\r\n                    return <Button className = \"nav-link menu-box-tab menu-text\"\r\n                                   onClick = { this.toggleAnnouncementsData.bind(\r\n                                       this) } id = { index + 100 }\r\n                                   key = { index }\r\n                    ><i style = { {marginRight: 10 + 'px'} }\r\n                        className = \"scnd-font-color fa fa-tasks\"\r\n                    />\r\n                      { ann.Title }{ <p> (</p> }{ ann.TIMESTAMP[0] }\r\n                      { ann.TIMESTAMP[1] }{ ann.TIMESTAMP[2] }{ ann.TIMESTAMP[3] }{ ann.TIMESTAMP[4] }{ ann.TIMESTAMP[5] }\r\n                      { ann.TIMESTAMP[6] }{ ann.TIMESTAMP[7] } { ann.TIMESTAMP[8] }{ ann.TIMESTAMP[9] }{\r\n                        <p\r\n                            id = \"extra\"\r\n                        >)</p> }\r\n                    </Button>;\r\n                  }) }\r\n\r\n                </div>\r\n                <Button id = \"addAnn\"\r\n                        className = { ' edit nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleAnnouncements2 }\r\n                >\r\n                  <i style = { {marginRight: 10 + 'px'} }\r\n                     className = \"scnd-font-color fa fa-tasks\"\r\n                  /> Add Announcement\r\n                </Button>\r\n\r\n                {/*<AnnouncementModal onSubmit = { this.onAnnouncementSubmit }*/ }\r\n                {/*                   toggle = { this.toggleAnnouncements }*/ }\r\n                {/*                   modal = { this.state.modalAnnouncements }*/ }\r\n                {/*                   announcements = { this.state.announcements }*/ }\r\n                {/*                   title = { this.state.modalTitle }*/ }\r\n                {/*                   message = { this.state.modalMessage }*/ }\r\n                {/*                   announcement_id = { this.state.modalAnnId }*/ }\r\n                {/*/>*/ }\r\n                <AnnouncementsPrivateModal\r\n                    onSubmit = { this.onAnnouncementSubmit2 }\r\n                    toggle = { this.toggleAnnouncements2 }\r\n                    modal = { this.state.modalAnnouncements2 }\r\n                    resetOnSubmit = { true }\r\n                />\r\n                <AnnouncementModal onSubmit = { this.onAnnouncementSubmit }\r\n                                   DeleteAnn = { this.onAnnouncementDelete }\r\n                                   toggle = { this.toggleAnnouncements }\r\n                                   modal = { this.state.modalAnnouncements }\r\n                                   announcements = { this.state.announcements }\r\n                                   title = { this.state.modalTitle }\r\n                                   message = { this.state.modalMessage }\r\n                                   announcement_id = { this.state.modalAnnId }\r\n                                   isPrivate = { true }\r\n                />\r\n\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div className = \"row\">\r\n              <div id = \"timeTableHeading\">Create Personal Training Schedule\r\n              </div>\r\n              <div className = \"col-md-8\">\r\n                <Timetable day = { this.state.day }\r\n                           time = { this.state.time }\r\n                           flag = { this.state.flag }\r\n                           coachID = { this.state.Coach_ID }\r\n                           userID = { this.state.User_ID }\r\n                           coachIDret = {this.retrievedCoach}\r\n                />\r\n              </div>\r\n              <div className = \"col-md-4\">\r\n                <Box toogle = { this.handleDayTimeChange }\r\n                     coaches = { this.state.selectedCoaches }\r\n                     coachID = {this.state.coachIDRet}\r\n                     userID = { this.state.User_ID }\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default ProfileAdmin;","import React, {Component} from 'react';\r\nimport '../assets/styles/BookDropdown.css'\r\n\r\nclass SelectionPT extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            day: '',\r\n            time: '',\r\n            flag: false,\r\n            Coach_ID: '',\r\n            coaches: []\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onSubmit2 = this.onSubmit2.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.clearOptions = this.clearOptions.bind(this);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value});\r\n    };\r\n\r\n\r\n    onSubmit = () => {\r\n        this.setState({flag: true},\r\n            () => {\r\n                this.props.toogle(this.state.day, this.state.time, this.state.flag, this.state.Coach_ID);\r\n            });\r\n    };\r\n\r\n    onSubmit2 = () => {\r\n        this.setState({flag: false},\r\n            () => {\r\n                this.props.toogle(this.state.day, this.state.time, this.state.flag, this.state.Coach_ID);\r\n            });\r\n    };\r\n\r\n    clearOptions() {\r\n        const timeNode = document.getElementById('TimePers');\r\n        timeNode.value = 0;\r\n        const dayNode = document.getElementById('DayPers');\r\n        dayNode.value = 0;\r\n        const coachNode = document.getElementById('CoachPers');\r\n        coachNode.value = 0;\r\n    }\r\n\r\n    // noinspection JSUnusedLocalSymbols\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.coaches !== this.props.coaches || prevProps.coachesRet !== this.props.coachesRet\r\n            || prevProps.coachID !== this.props.coachID\r\n           || prevProps.userID !== this.props.userID) {\r\n            (async () => {\r\n                if (prevProps.userID !== this.props.userID) {\r\n                    await this.clearOptions();\r\n                }\r\n            })();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"form\" id=\"backBox\">\r\n                    <h3 id=\"bmiHeading\"><b>C</b>hoose <b>D</b>ay and <b>T</b>ime</h3>\r\n                    <div className=\"row\" id=\"first-row\">\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <label htmlFor=\"DropDays\">Day:</label>\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"day\" id=\"DayPers\"\r\n                                    onChange={this.handleChange} required>\r\n                                <option value=\"0\" hidden>Day Option</option>\r\n                                <option value=\"1\">Monday</option>\r\n                                <option value=\"2\">Tuesday</option>\r\n                                <option value=\"3\">Wednesday</option>\r\n                                <option value=\"4\">Thursday</option>\r\n                                <option value=\"5\">Friday</option>\r\n                                <option value=\"6\">Saturday</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <label htmlFor=\"DropClass\">Time:</label>\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"time\" id=\"TimePers\"\r\n                                    onChange={this.handleChange} required>\r\n                                <option value=\"0\" hidden>Time Option</option>\r\n                                <option value=\"1\">08:00-09:00</option>\r\n                                <option value=\"2\">09:00-10:00</option>\r\n                                <option value=\"3\">10:00-11:00</option>\r\n                                <option value=\"4\">11:00-12:00</option>\r\n                                <option value=\"5\">12:00-13:00</option>\r\n                                <option value=\"6\">13:00-14:00</option>\r\n                                <option value=\"7\">14:00-15:00</option>\r\n                                <option value=\"8\">15:00-16:00</option>\r\n                                <option value=\"9\">16:00-17:00</option>\r\n                                <option value=\"10\">17:00-18:00</option>\r\n                                <option value=\"11\">18:00-19:00</option>\r\n                                <option value=\"12\">19:00-20:00</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row hidden\">\r\n                        <div className=\"col-md-12 RowBlock\">   {/*justify-content-center*/}\r\n                            <label htmlFor=\"DropClass\">Coach:</label>\r\n\r\n                            <select className=\"form-control selectGroupPersonal\" name=\"Coach_ID\" id=\"CoachPers\"\r\n                                    onChange={this.handleChange} required>\r\n                                <option value=\"0\" hidden>Select a Coach</option>\r\n\r\n                                {this.props.coaches.map((res, index) => {\r\n                                    return <option value={res.Coach_ID} key={index}>\r\n                                        {res.CoachName} {res.Surname}\r\n                                    </option>\r\n                                })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <button type=\"button\" className=\"RowButton\" onClick={this.onSubmit}>Submit</button>\r\n                        </div>\r\n                        <div className=\"col-md-6 RowBlock\">\r\n                            <button type=\"button\" className=\"RowButton\" onClick={this.onSubmit2}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectionPT;","import React, {Component} from 'react';\r\nimport '../assets/styles/PersonalTrainingTimetable.css';\r\nimport {\r\n  insertPT, deletePT, getCoachTraining, getClassSchedule, getPersonalSchedule,\r\n}                         from '../../repository';\r\nimport Swal               from \"sweetalert2\";\r\n\r\nclass PersonalTrainingCreate extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this.state = {\r\n      personalTraining     : [],\r\n      classSchedule        : [],\r\n      trainingScheduleCoach: [],\r\n      Coach_ID             : '',\r\n      User_ID              : '',\r\n      coachBooked          : false,\r\n      userBooked           : false,\r\n      incorrectCoach       : false,\r\n      classConflict        : false,\r\n      coachName            : '',\r\n    };\r\n\r\n    this.insertDeleteMethodStates = this.insertDeleteMethodStates.bind(this);\r\n    this.fillTable = this.fillTable.bind(this);\r\n  }\r\n\r\n  // Modals for error messages in case of wrong input.\r\n  toggleModalCoachBooked = () => {\r\n    Swal.fire(\r\n        'The coach has another scheduled client at this time.',\r\n        '',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalClassConflict = () => {\r\n    Swal.fire(\r\n        'The user has a registered class at that time.',\r\n        '',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalUserBooked = () => {\r\n    Swal.fire(\r\n        'The user has another class or personal training at this time.',\r\n        '',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  toggleModalIncorrectCoach = () => {\r\n    Swal.fire(\r\n        'The coach registered for personal training to this user is ' + this.state.coachName + '.',\r\n        'Please log in and try again...',\r\n        'error',\r\n    ).then();\r\n  };\r\n\r\n  //method responsible for displaying the enrolled classes and personal\r\n  // training according to the user data from the database\r\n  fillTable(refIDs, classesRefIDs, cNames, coaches) {\r\n    let node;\r\n    for (let i = 1; i <= 6; i++) {\r\n      for (let x = 1; x <= 12; x++) {\r\n        let refID = '';\r\n        if (x < 10) {\r\n          refID = i + '.0' + x;\r\n        } else {\r\n          refID = i + '.' + x;\r\n        }\r\n        if (refIDs.includes(refID)) {\r\n          node = document.getElementById(refID);\r\n          node.className = 'blackBackSelected';\r\n        } else {\r\n          if (classesRefIDs.includes(refID)) {\r\n            node = document.getElementById(refID);\r\n            node.className = 'classesBackground';\r\n          } else {\r\n            if (coaches.includes(refID)) {\r\n              node = document.getElementById(refID);\r\n              node.className = 'coachBooked';\r\n            } else {\r\n              node = document.getElementById(refID);\r\n              node.className = '';\r\n              node.textContent = '';\r\n            }\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  insertDeleteMethodStates() {\r\n    this.setState({\r\n      // refIDs: x,\r\n      User_ID : this.props.userID,\r\n      Coach_ID: this.props.coachID,\r\n      time    : this.props.time,\r\n      day     : this.props.day,\r\n    }, () => {\r\n      if (this.props.flag === true) {\r\n        insertPT(this.state).then();\r\n      } else {\r\n        deletePT(this.state).then();\r\n      }\r\n    });\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.day !== this.props.day || prevProps.time !== this.props.time\r\n        || prevProps.flag !== this.props.flag\r\n        || prevProps.coachID !== this.props.coachID || prevProps.userID\r\n        !== this.props.userID) {\r\n      console.clear();\r\n      (async() => {\r\n        let refID = '';\r\n\r\n        // ************************* Clearing the arrays\r\n        // ***************************\r\n        let personalTraining = [];\r\n        let classSchedule = [];\r\n\r\n        if (this.props.userID !== '') {\r\n          await getPersonalSchedule(this.props.userID).then(response => {\r\n            personalTraining = response;\r\n          });\r\n          await getClassSchedule(this.props.userID).then(response => {\r\n            classSchedule = response;\r\n\r\n          });\r\n        }\r\n\r\n        // ************************* Filling the arrays\r\n        // *************************** ------------------------- Class Schedule\r\n        // -------------------------------\r\n        let ret = [...classSchedule];\r\n        let classRefIDs = [];\r\n        let cNames = [];\r\n        // for loop for traversing fetched data for ClassSchedule and filling\r\n        // tables accordingly\r\n        ret.forEach((item) => {\r\n              if (item.TimeCode < 10) {\r\n                refID = item.DayCode + '.0' + item.TimeCode;\r\n              } else {\r\n                refID = item.DayCode + '.' + item.TimeCode;\r\n              }\r\n              if (!classRefIDs.includes(refID)) {\r\n                classRefIDs.push(refID);\r\n                cNames.push(item.Name);\r\n              }\r\n\r\n            },\r\n        );\r\n\r\n        // ------------------------ Personal Training --------------------------\r\n        ret = [...personalTraining];\r\n        refID = '';\r\n        let coachID = '';\r\n        let refIDs = [];\r\n        let coachName = '';\r\n        ret.forEach((item) => {\r\n              if (item.Time < 10) {\r\n                refID = item.Day + '.0' + item.Time;\r\n              } else {\r\n                refID = item.Day + '.' + item.Time;\r\n              }\r\n              // Create a new array based on current state:\r\n              coachID = item.Coach_ID;\r\n              coachName = item.CoachName + ' ' + item.Surname;\r\n              if (!refIDs.includes(refID)) {\r\n                refIDs.push(refID);\r\n              }\r\n            },\r\n        );\r\n\r\n        this.setState({coachName: coachName});\r\n        // this.setState({Coach_ID: coachID});\r\n        this.props.coachIDret(coachID);\r\n\r\n\r\n        // -------------- Filling the CoachRefIDs ----------------------------\r\n        // This will be used to prevent coach from having two personal training\r\n        // sessions at the same time\r\n        let trainingScheduleCoach = [];\r\n        // trainingScheduleCoach =  await this.fetchingCoachSchedule(coachID);\r\n\r\n        await getCoachTraining(coachID).then(response => {\r\n          trainingScheduleCoach = response;\r\n        });\r\n\r\n        let retCoach = [...trainingScheduleCoach];\r\n\r\n        refID = '';\r\n        let refIDsCoach = [];\r\n\r\n        retCoach.forEach((coach) => {\r\n              if (coach.Time < 10) {\r\n                refID = coach.Day + '.0' + coach.Time;\r\n              } else {\r\n                refID = coach.Day + '.' + coach.Time;\r\n              }\r\n              // Create a new array based on current state:\r\n              if (!refIDsCoach.includes(refID)) {\r\n                refIDsCoach.push(refID);\r\n              }\r\n            },\r\n        );\r\n\r\n        // ************ Printing the filled tables on the site **************\r\n\r\n        let time = this.props.time;\r\n        let day = this.props.day;\r\n\r\n        // ********************** Getting day and time from box selection\r\n        // *********************\r\n        if (this.props.time < 10) {\r\n          refID = day + '.0' + time;\r\n        } else {\r\n          refID = day + '.' + time;\r\n        }\r\n        if (prevProps.userID !== this.props.userID || (prevProps.day\r\n                                                       === this.props.day\r\n                                                       && prevProps.time\r\n                                                       === this.props.time\r\n                                                       && prevProps.coachID\r\n                                                       === this.props.coachID\r\n                                                       && prevProps.flag\r\n                                                       === this.props.flag)) {\r\n          refID = '';\r\n        }\r\n\r\n        if (!refIDs.includes(refID) && !refIDsCoach.includes(refID)\r\n            && this.props.flag === true && String(this.props.coachID) !== ''\r\n            && (String(coachID) === String(this.props.coachID) || String(\r\n                coachID) === '') && refID !== '' && !classRefIDs.includes(\r\n                refID)) {\r\n          refIDs.push(refID);\r\n          refIDsCoach.push(coachID);\r\n          await this.insertDeleteMethodStates(String(coachID),\r\n              String(this.props.coachID));\r\n        } else {\r\n          let pos = refIDs.indexOf(refID);\r\n          let posCoach = refIDsCoach.indexOf(refID);\r\n          if (refIDs.includes(refID) && this.props.flag === false && String(\r\n              this.props.coachID) !== ''\r\n              && (String(coachID) === String(this.props.coachID) || String(\r\n                  coachID) === '') && refID !== '') {\r\n\r\n            refIDs.splice(pos, 1);\r\n            refIDsCoach.splice(posCoach, 1);\r\n            await this.insertDeleteMethodStates(String(coachID),\r\n                String(this.props.coachID));\r\n          } else {\r\n\r\n            if ((refIDs.includes(refID) || classRefIDs.includes(refID))\r\n                && this.props.flag === true) {\r\n              this.toggleModalUserBooked();\r\n              coachID = '';\r\n            }\r\n\r\n            if (classRefIDs.includes(refID) && this.props.flag === false) {\r\n              this.toggleModalClassConflict();\r\n              coachID = '';\r\n            }\r\n            if (refIDsCoach.includes(refID) && !refIDs.includes(refID)\r\n                && this.props.flag === true && String(coachID)\r\n                === this.props.coachID) {\r\n              this.toggleModalCoachBooked();\r\n            }\r\n\r\n            if (String(coachID) !== String(this.props.coachID) && String(\r\n                coachID) !== '' && prevProps.userID === this.props.userID) { //\r\n              this.toggleModalIncorrectCoach();\r\n            }\r\n          }\r\n\r\n        }\r\n        await this.fillTable(refIDs, classRefIDs, cNames, refIDsCoach);\r\n\r\n      })();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = { 'container' }>\r\n          <div className = \"row\">\r\n            <div className = \"timetable\">\r\n              <div className = \"week-names\">\r\n                <div>monday</div>\r\n                <div>tuesday</div>\r\n                <div>w/day</div>\r\n                <div>thursday</div>\r\n                <div>friday</div>\r\n                <div>saturday</div>\r\n                <div className = \"weekend\">sunday</div>\r\n              </div>\r\n              <div className = \"time-interval\">\r\n                <div>8:00 - 09:00</div>\r\n                <div>09:00 - 10:00</div>\r\n                <div>10:00 - 11:00</div>\r\n                <div>11:00 - 12:00</div>\r\n                <div>12:00 - 13:00</div>\r\n                <div>13:00 - 14:00</div>\r\n                <div>14:00 - 15:00</div>\r\n                <div>15:00 - 16:00</div>\r\n                <div>16:00 - 17:00</div>\r\n                <div>17:00 - 18:00</div>\r\n                <div>18:00 - 19:00</div>\r\n                <div>19:00 - 20:00</div>\r\n              </div>\r\n              <div className = \"content\">\r\n                { [...Array(6).keys()].map(x => (x + 1.01).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.02).toFixed(2))\r\n                    .map((x, index) =>\r\n                        // <div className={classes.join(' ')} key={index}\r\n                        // id={x}/>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.03).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.04).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.05).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.06).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.07).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.08).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.09).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.10).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.11).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n                { [...Array(6).keys()].map(x => (x + 1.12).toFixed(2))\r\n                    .map((x, index) =>\r\n                        <div\r\n                            key = { index } id = { x }\r\n                        />,\r\n                    ) }\r\n                <div className = \"weekend\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*<div> <span><small>&emsp;*The personal training sessions registered are represented by: </small></span><p className='smallCellBox'></p></div>*/ }\r\n          <br />\r\n          <div className = { 'row' }>\r\n            <div className = 'col-sm-12 col-md-9 legendsBoxPT'>\r\n              <div className = \"sameRow\">\r\n                <div className = 'smallCellBox' />\r\n                {/*<div className='smallCellBox'></div>*/ }\r\n                <small>&emsp;User Booked</small>\r\n                <div className = 'coachBookedSmall' />\r\n                <small>&emsp;Coach Booked</small>\r\n                <div className = 'classBookedSmall' />\r\n                <small>&emsp;Class Enrolled</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PersonalTrainingCreate;","import React, {Component} from 'react';\r\nimport './assets/styles/Spinner.css';\r\n\r\nclass Spinner extends Component {\r\n  render() {\r\n    return (\r\n        <div id = \"wrapper\"\r\n             style = { this.props.style || {\r\n               'height'         : '100vh',\r\n               'backgroundColor': '#252830',\r\n             } }\r\n        >\r\n          <div className = { !this.props.secondaryStyle\r\n              ? 'profile-main-loader'\r\n              : 'profile-secondary-loader' }\r\n          >\r\n            <div className = \"loader\">\r\n              <svg className = \"circular-loader\"\r\n                   viewBox = \"25 25 50 50\"\r\n              >\r\n                <circle className = \"loader-path\"\r\n                        cx = \"50\"\r\n                        cy = \"50\"\r\n                        r = \"20\"\r\n                        fill = \"none\"\r\n                        stroke = \"#D90429\"\r\n                        strokeWidth = \"2\"\r\n                />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spinner;","import React                                                  from 'react';\r\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\n\r\nexport default class ToggleModal extends React.Component {\r\n    render() {\r\n        let Comp = this.props.modalBody;\r\n        // noinspection JSUnresolvedVariable\r\n      return (\r\n            <div>\r\n                <Modal isOpen = { this.props.modal } toggle = { this.props.toggle }\r\n                       size = { this.props.modalSize || 'lg' }\r\n                       aria-labelledby = \"contained-modal-title-vcenter\"\r\n                       centered\r\n                >\r\n                    {!(navigator.userAgent.match(/Android/i)) || this.props.modalHeader !==  'Login Form'\r\n                        &&\r\n                    <ModalHeader toggle={this.props.toggle}>{this.props.modalHeader}</ModalHeader>\r\n                    }\r\n                    <ModalBody>\r\n                        { React.cloneElement(Comp, {\r\n                            ...this.props\r\n                        }) }\r\n                    </ModalBody>\r\n                    {!(navigator.userAgent.match(/Android/i)) &&\r\n                    <ModalFooter>\r\n                        <Button onClick={this.props.toggle}>{this.props.btnCancel || 'Cancel'}</Button>\r\n                    </ModalFooter>\r\n                    }\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React            from 'react';\r\nimport {ValidatorForm}  from 'react-material-ui-form-validator';\r\nimport TextField        from '@material-ui/core/TextField';\r\nimport Radio            from '@material-ui/core/Radio';\r\nimport RadioGroup       from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl      from '@material-ui/core/FormControl';\r\nimport Recaptcha        from 'react-recaptcha';\r\nimport Swal             from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport '../assets/styles/SignInUp.css';\r\nimport {signUp}         from '../../repository';\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formData  : {\r\n        fname           : '',\r\n        lname           : '',\r\n        username        : '',\r\n        email           : '',\r\n        password        : '',\r\n        confirm_password: '',\r\n        bdate           : '',\r\n        gender          : '',\r\n        age             : '',\r\n      },\r\n      isVerified: false,\r\n      submitted : false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.rotate = this.rotate.bind(this);\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    this.calcDate = this.calcDate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    // noinspection JSUnresolvedFunction\r\n    ValidatorForm.addValidationRule('isPasswordMatch', value => {\r\n      const {formData} = this.state;\r\n      return value === formData.password;\r\n    });\r\n  }\r\n\r\n  handleChange = event => {\r\n    const {formData} = this.state;\r\n    formData[event.target.name] = event.target.value;\r\n    this.setState({formData});\r\n\r\n    if (event.target.name === 'bdate') {\r\n      this.calcDate(event);\r\n    }\r\n\r\n    if (\r\n        event.target.name === 'password' &&\r\n        !event.target.value.match(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/)\r\n    ) {\r\n      event.target.setCustomValidity(\r\n          'Enter a combination of at least 8 numbers, lower and uppercase letters.',\r\n      );\r\n    } else if (\r\n        event.target.name === 'confirm_password' &&\r\n        event.target.value !== this.state.formData.password\r\n    ) {\r\n      event.target.setCustomValidity('Passwords don\\'t match.');\r\n    } else {\r\n      event.target.setCustomValidity('');\r\n    }\r\n  };\r\n\r\n  verifyCallback = response => {\r\n    if (response) {\r\n      this.setState({isVerified: true});\r\n    }\r\n  };\r\n\r\n  rotate = () => {\r\n    this.setState({\r\n      formData  : {\r\n        fname           : '',\r\n        lname           : '',\r\n        username        : '',\r\n        email           : '',\r\n        password        : '',\r\n        confirm_password: '',\r\n        bdate           : '',\r\n        gender          : '',\r\n      },\r\n      isVerified: false,\r\n      submitted : false,\r\n    });\r\n    this.props.rotate();\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n        !this.state.formData.fname ||\r\n        !this.state.formData.lname ||\r\n        !this.state.formData.username ||\r\n        !this.state.formData.bdate ||\r\n        !this.state.formData.gender ||\r\n        !this.state.formData.email.match(\r\n            /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\r\n        ) ||\r\n        !this.state.formData.password.match(\r\n            /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/,\r\n        ) ||\r\n        this.state.formData.confirm_password !== this.state.formData.password\r\n    ) {\r\n      return;\r\n    }\r\n    if (!this.state.isVerified) {\r\n      Swal.fire(\r\n          'Please verify that you are not a robot 🤖!!!',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return;\r\n    }\r\n    // Create output query\r\n    const crypto = require('crypto');\r\n    const newToken = crypto.randomBytes(10).toString('hex');\r\n\r\n    const Crypto = require('cryptr');\r\n    const cryptr = new Crypto('ffn_private_key_!!!!');\r\n\r\n    const encryptedString = cryptr.encrypt(this.state.formData.password);\r\n\r\n    const dataSign = {\r\n      username: this.state.formData.username,\r\n      password: encryptedString,\r\n      fname   : this.state.formData.fname,\r\n      lname   : this.state.formData.lname,\r\n      email   : this.state.formData.email,\r\n      age     : this.state.formData.age,\r\n      gender  : this.state.formData.gender === 'male' ? 1 : 2,\r\n      level   : this.state.formData.level,\r\n      bDate   : this.state.formData.bdate,\r\n      verify  : 0,\r\n      hash    : newToken,\r\n    };\r\n    // Call for query\r\n    signUp(dataSign)\r\n        .then(() => {\r\n          Swal.fire(\r\n              'Successful sign up',\r\n              'Please proceed to your email, so you can verify your account.',\r\n              'success',\r\n          ).then(() => {\r\n            // Reset\r\n            this.setState({\r\n              formData  : {\r\n                fname           : '',\r\n                lname           : '',\r\n                username        : '',\r\n                email           : '',\r\n                password        : '',\r\n                confirm_password: '',\r\n                bdate           : '',\r\n                gender          : '',\r\n              },\r\n              isVerified: false,\r\n              submitted : false,\r\n            }, () => this.props.toggleModal());\r\n          });\r\n        }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ));\r\n  };\r\n\r\n  calcDate = (dDate) => {\r\n    let thenD = dDate.target.value;\r\n    let str = thenD.split('-');\r\n    let now = new Date();\r\n    let ageDif = now.getFullYear() - str[0];\r\n\r\n    const {formData} = this.state;\r\n    formData.age = ageDif;\r\n    this.setState({formData});\r\n  };\r\n\r\n  render() {\r\n    // noinspection JSUnresolvedVariable\r\n    return (\r\n        <form id = \"signup\"\r\n              onSubmit = { this.handleSubmit }\r\n              autoComplete = \"off\"\r\n        >\r\n          <h1>Sign up</h1>\r\n          <input\r\n              placeholder = \"First Name\"\r\n              name = \"fname\"\r\n              type = \"text\"\r\n              value = { this.state.formData.fname }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Last Name\"\r\n              name = \"lname\"\r\n              type = \"text\"\r\n              value = { this.state.formData.lname }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Email Address\"\r\n              name = \"email\"\r\n              type = \"email\"\r\n              value = { this.state.formData.email }\r\n              onChange = { this.handleChange }\r\n              pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n              required\r\n          />\r\n          <input\r\n              placeholder = \"Username\"\r\n              name = \"username\"\r\n              type = \"text\"\r\n              value = { this.state.formData.username }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Password\"\r\n              name = \"password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.password }\r\n              required\r\n              pattern = \"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Confirm Password\"\r\n              name = \"confirm_password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.confirm_password }\r\n              required\r\n              pattern = \"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <TextField\r\n              placeholder = \"Birthday\"\r\n              name = \"bdate\"\r\n              type = \"date\"\r\n              value = { this.state.formData.bday }\r\n              InputLabelProps = { {\r\n                shrink: true,\r\n              } }\r\n              onChange = { this.handleChange }\r\n              required\r\n          />\r\n          <br />\r\n          <FormControl component = \"fieldset\">\r\n            {/* <FormLabel component=\"legend\">Gender</FormLabel> */ }\r\n            <RadioGroup\r\n                aria-label = \"gender\"\r\n                name = \"gender\"\r\n                value = { this.state.formData.gender }\r\n                onChange = { this.handleChange }\r\n                className = { 'gender-radio' }\r\n            >\r\n              <FormControlLabel\r\n                  value = \"male\"\r\n                  control = { <Radio required /> }\r\n                  label = \"Male\"\r\n              />\r\n              <FormControlLabel\r\n                  value = \"female\"\r\n                  control = { <Radio required /> }\r\n                  label = \"Female\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Recaptcha\r\n              elementID = { 'g-recaptcha' }\r\n              sitekey = \"6Lf0od8UAAAAAFoog9iFIpVd8rcPxBwHpUKpnCua\"\r\n              size = \"normal\"\r\n              render = \"explicit\"\r\n              theme = \"dark\"\r\n              verifyCallback = { this.verifyCallback }\r\n          />\r\n          <button>Sign up</button>\r\n          <br />\r\n          <span className = \"login rotateForms\" onClick = { this.rotate }>\r\n            <i className = \"fa fa-sign-in\" />\r\n            Sign In\r\n          </span>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React   from 'react';\r\nimport '../assets/styles/SignInUp.css';\r\nimport Swal    from 'sweetalert2';\r\nimport history from '../../history';\r\nimport {logIn} from '../../repository';\r\n\r\nclass Signup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formData: {\r\n        username: '',\r\n        password: '',\r\n      },\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.rotate = this.rotate.bind(this);\r\n  }\r\n\r\n  handleChange = event => {\r\n    const {formData} = this.state;\r\n    formData[event.target.name] = event.target.value;\r\n    this.setState({formData});\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const crypto = require('crypto');\r\n    // noinspection JSUnusedLocalSymbols\r\n    const newToken = crypto.randomBytes(10).toString('hex');\r\n\r\n    const Crypto = require('cryptr');\r\n    const cryptr = new Crypto('ffn_private_key_!!!!');\r\n\r\n    const encryptedString = cryptr.encrypt(this.state.formData.password);\r\n\r\n    const dataLogIn = {\r\n      username: this.state.formData.username,\r\n      password: encryptedString,\r\n    };\r\n\r\n\r\n    // Call for query\r\n    logIn(dataLogIn)\r\n        .then(data => {\r\n          // Error\r\n          if (!data.level) {\r\n            throw Error;\r\n          }\r\n          // Success\r\n          this.setState({\r\n            formData: {\r\n              username: '',\r\n              password: '',\r\n            },\r\n          }, () => {\r\n            this.props.toggleModal();\r\n            this.props.setUserLevel(data.level);\r\n            history.push('/' + data.level + '/profile');\r\n          });\r\n        }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ));\r\n  };\r\n\r\n  rotate = () => {\r\n    this.setState({\r\n      formData : {\r\n        username: '',\r\n        password: '',\r\n      },\r\n      submitted: false,\r\n    });\r\n    this.props.rotate();\r\n  };\r\n\r\n  forgotPassword = () => {\r\n    history.push('/forgotPassword');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <form id = \"login\"\r\n              onSubmit = { this.handleSubmit }\r\n              autoComplete = \"off\"\r\n        >\r\n          <h1>Sign in</h1>\r\n          <input\r\n              placeholder = \"Username\"\r\n              name = \"username\"\r\n              type = \"text\"\r\n              value = { this.state.formData.username }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Password\"\r\n              name = \"password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.password }\r\n              required\r\n              // pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <p className = { 'forgot-passsword' }\r\n             onClick = { this.forgotPassword }\r\n          >Forgot your password?</p>\r\n          <button>Sign in</button>\r\n          <br />\r\n          <span className = \"login rotateForms\" onClick = { this.rotate }>\r\n            <i className = \"fa fa-user-plus\" />\r\n            Sign up\r\n          </span>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","import React  from 'react';\r\nimport $      from 'jquery';\r\nimport Modal  from 'react-bootstrap/Modal';\r\nimport Signup from './SignUp';\r\nimport LogIn  from './LogIn';\r\nimport '../assets/styles/SignInUpModal.css';\r\n\r\nclass SignInUpModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showModal: false,\r\n    };\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({showModal: !this.state.showModal});\r\n  };\r\n\r\n  rotate = () => {\r\n    // noinspection JSJQueryEfficiency\r\n    if ($('.flipper').css('transform') === 'none') {\r\n      $('.flipper').css('transform', 'rotateY(180deg)');\r\n    } else {\r\n      $('.flipper').css('transform', '');\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <button className = { 'nav-link login btn btn-secondary' }\r\n                  onClick = { this.toggleModal }\r\n          >\r\n            Login/Register\r\n          </button>\r\n\r\n          <Modal show = { this.state.showModal }\r\n                 onHide = { this.toggleModal }\r\n                 className = { 'sign-in-up-modal' }\r\n                 size = { 'md' }\r\n                 centered\r\n          >\r\n            {/*<Modal.Header closeButton>*/ }\r\n            {/*  <Modal.Title>Modal heading</Modal.Title>*/ }\r\n            {/*</Modal.Header>*/ }\r\n            <Modal.Body>\r\n              <div className = \"flip-container\">\r\n                <div className = \"flipper\">\r\n                  <div className = \"front\">\r\n                    {/* <!-- front content --> */ }\r\n                    <div className = \"card\">\r\n                      <LogIn rotate = { this.rotate }\r\n                             toggleModal = { this.toggleModal }\r\n                             setUserLevel = { this.props.setUserLevel }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className = \"back\">\r\n                    {/* <!-- back content --> */ }\r\n                    <div className = \"card\">\r\n                      <Signup rotate = { this.rotate }\r\n                              toggleModal = { this.toggleModal }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n            {/*<Modal.Footer>*/ }\r\n            {/*  <Button variant = \"secondary\" onClick = { this.toggleModal }>*/ }\r\n            {/*    Close*/ }\r\n            {/*  </Button>*/ }\r\n            {/*  <Button variant = \"primary\" onClick = { this.toggleModal }>*/ }\r\n            {/*    Save Changes*/ }\r\n            {/*  </Button>*/ }\r\n            {/*</Modal.Footer>*/ }\r\n          </Modal>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignInUpModal;\r\n","import React, {Component} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n// import ToggleModal                 from './ToggleModal';\r\n// import LoginModal                  from './LoginModal';\r\n// import { Button }                  from 'reactstrap';\r\nimport {isAuthenticated, logOut} from '../../repository';\r\nimport logo_img from '../assets/img/logos/ffLogoTransparent.png';\r\nimport history from '../../history';\r\nimport SignInUpModal from './SignInUpModal';\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  };\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    localStorage.setItem('path', history.location.pathname);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  onLogOut = () => {\r\n    this.setState({userLevel: undefined, modal: false});\r\n    logOut();\r\n    // window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        // Navigation\r\n        <nav className = \"navbar navbar-expand-lg navbar-dark fixed-top\"\r\n             id = \"mainNav\"\r\n        >\r\n          <div className = \"container-fluid mx-auto\">\r\n            <NavLink className = \"navbar-brand\" to = \"/\" exact = { true }>\r\n              <span className = \"gym-name\">Fitness Factory Nicosia&nbsp;</span>\r\n              <img id = { 'logo' }\r\n                   src = { logo_img }\r\n                   alt = 'Logo'\r\n                   height = { 64 }\r\n                   width = { 64 }\r\n              />\r\n            </NavLink>\r\n            <button className = \"navbar-toggler navbar-toggler-right\"\r\n                    type = \"button\"\r\n                    data-toggle = \"collapse\"\r\n                    data-target = \"#navbarResponsive\"\r\n                    aria-controls = \"navbarResponsive\"\r\n                    aria-expanded = \"false\"\r\n                    aria-label = \"Toggle navigation\"\r\n            >\r\n              Menu&nbsp;<i className = \"fa fa-bars\" />\r\n            </button>\r\n            <div className = \"collapse navbar-collapse\" id = \"navbarResponsive\">\r\n              <ul className = \"navbar-nav text-uppercase ml-auto\">\r\n                <li className = \"nav-item\">\r\n                  <NavLink className = \"nav-link\"\r\n                           to = \"/\"\r\n                           exact = { true }\r\n                  >Home</NavLink>\r\n                </li>\r\n                <li className = \"nav-item\">\r\n                  <NavLink className = \"nav-link\"\r\n                           to = \"/classes\"\r\n                  >Classes</NavLink>\r\n                </li>\r\n                { isAuthenticated() &&\r\n                  <>\r\n                    { this.props.userLevel === 'user' &&\r\n                      <li className = \"nav-item\">\r\n                        <NavLink className = \"nav-link\"\r\n                                 to = \"/user/profile\"\r\n                        >Profile</NavLink>\r\n                      </li> }\r\n\r\n                    { this.props.userLevel === 'coach' &&\r\n                      <li className = \"nav-item\">\r\n                        <NavLink className = \"nav-link\"\r\n                                 to = \"/coach/profile\"\r\n                        >Profile</NavLink>\r\n                      </li> }\r\n\r\n                    { this.props.userLevel === 'admin' &&\r\n                      <li className = \"nav-item\">\r\n                        <NavLink className = \"nav-link\"\r\n                                 to = \"/admin/profile\"\r\n                        >Profile</NavLink>\r\n                      </li> }\r\n\r\n                    { this.props.userLevel === 'admin' &&\r\n                      <li className = \"nav-item\">\r\n                        <NavLink className = \"nav-link\"\r\n                                 to = \"/admin/dashboard\"\r\n                        >Dashboard</NavLink>\r\n                      </li> }\r\n                  </>\r\n                }\r\n                <li className = \"nav-item\">\r\n                  <NavLink className = \"nav-link\" to = \"/about\">About\r\n                                                                Us</NavLink>\r\n                </li>\r\n                {\r\n                  (\r\n                      isAuthenticated()) ?\r\n                      <li className = \"nav-item\">\r\n                        <NavLink to = \"/\"\r\n                                 className = { 'nav-link logout btn btn-secondary' }\r\n                                 onClick = { this.onLogOut }\r\n                        >\r\n                          Logout <i className = \"fas fa-sign-out-alt\" />\r\n                        </NavLink>\r\n                      </li>\r\n                      :\r\n                      <li className = \"nav-item\">\r\n                        {/*<Button className = { 'nav-link login btn btn-secondary' }*/ }\r\n                        {/*        onClick = { this.toggle }*/ }\r\n                        {/*>*/ }\r\n                        {/*    Login/Register <i className = \"fas fa-sign-in-alt\" />*/ }\r\n                        {/*</Button>*/ }\r\n                        {/*<ToggleModal*/ }\r\n                        {/*    modal = { this.state.modal }*/ }\r\n                        {/*    toggle = { this.toggle }*/ }\r\n                        {/*    modalSize = { 'md' }*/ }\r\n                        {/*    modalHeader = { 'Login Form' }*/ }\r\n                        {/*    modalBody = { <LoginModal /> }*/ }\r\n                        {/*    setUserLevel = { this.props.setUserLevel }*/ }\r\n                        {/*/>*/ }\r\n                        <SignInUpModal setUserLevel = { this.props.setUserLevel } />\r\n                      </li>\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;","import React, {Component} from 'react';\r\nimport {NavLink}          from 'react-router-dom';\r\nimport '../assets/styles/homePage.css';\r\nimport * as Icons         from '@fortawesome/fontawesome-free-solid';\r\nimport {FontAwesomeIcon}  from '@fortawesome/react-fontawesome';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    // noinspection HtmlUnknownTarget\r\n    return (\r\n        // Footer\r\n        <footer>\r\n          <div id = \"footer\" className = \"information container-fluid\">\r\n            <div className = \"row justify-content-center\">\r\n              <div id = \"socials-footer\"\r\n                   className = \"col-lg-3 col-md-12 col-sm-12\"\r\n              >\r\n                <h2>Get Social</h2>\r\n                <p>{ this.props.stylesheetData['social']['text'] }</p>\r\n                <br/>\r\n                <p>\r\n                  <a href = { this.props.stylesheetData['social']['facebook'] }>\r\n                    <i className = \"fa fa-facebook footer-icon\" />\r\n                  </a>\r\n                  <a href = { this.props.stylesheetData['social']['instagram'] }>\r\n                    <i className = \"fa fa-instagram footer-icon footer-icon-centered\" />\r\n                  </a>\r\n                </p>\r\n              </div>\r\n              <div id = \"about-footer\"\r\n                   className = \"col-lg-3 col-md-12 col-sm-12\"\r\n              >\r\n                <h2>About Us</h2>\r\n                <p>\r\n                  <i className = \"fa fa-map-marker footer-icon\" /> Address:\r\n                  <span className = \"about-footer-text\"> { this.props.stylesheetData['about-us']['address'] }</span>\r\n                </p>\r\n                <br/>\r\n                <p>\r\n                  <i className = \"fa fa-envelope footer-icon\" /> Questions?\r\n                  <span className = \"about-footer-text\"> { this.props.stylesheetData['about-us']['email'] }</span>\r\n                </p>\r\n              </div>\r\n              <div id = \"help-footer\"\r\n                   className = \"col-lg-3 col-md-12 col-sm-12\"\r\n              >\r\n                <h2>Get Help</h2>\r\n                <div>\r\n                  <p><i className = \"fa fa-home footer-icon\" /> <NavLink\r\n                      className = \"Nav_link\"\r\n                      to = \"/\"\r\n                  >Home Page</NavLink></p>\r\n                </div>\r\n                <div>\r\n                  <p><i className = \"fa fa-phone footer-icon\" /> <NavLink\r\n                      className = \"Nav_link\"\r\n                      to = \"/about\"\r\n                  >Contact Us</NavLink></p>\r\n                </div>\r\n                <div>\r\n                  <p><i className = \"fa fa-info footer-icon\" /> <NavLink\r\n                      className = \"Nav_link\"\r\n                      to = \"/classes\"\r\n                  >See the classes</NavLink></p>\r\n                </div>\r\n              </div>\r\n              <div id = \"about-footer\"\r\n                   className = \"col-lg-3 col-md-12 col-sm-12\"\r\n              >\r\n                <h2>About The Club</h2>\r\n                { this.props.stylesheetData['about-club'].map((v, i) => {\r\n                  return (\r\n                      <div key = { i } style = { {padding: 0} }>\r\n                        <p>{ v }</p>\r\n                      </div>\r\n                  );\r\n                }) }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div id = \"copyrights\" className = \"container-fluid\">\r\n            <div className = \"row justify-content-center\">\r\n              <p><FontAwesomeIcon icon = { Icons.faCopyright }\r\n                                  size = \"sm\"\r\n              /> Copyrights Fitness Factory Nicosia</p>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport $ from 'jquery';\r\nimport Navigation from './common/Navigation';\r\nimport Footer from './common/Footer';\r\n\r\nclass PageWrapper extends Component {\r\n\r\n    componentDidMount() {\r\n        this.handleClick();\r\n    }\r\n\r\n    handleClick = () => {\r\n        // Scroll to top\r\n        $('#to-top').on('click', function () {\r\n            let hash = $(this).data('hash');\r\n            if (hash) {\r\n                $('html, body').animate({\r\n                    scrollTop: $(document.getElementById(hash)).offset().top,\r\n                }, 800, function () {\r\n                    window.location.hash = hash;\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        // noinspection JSCheckFunctionSignatures\r\n        const childrenWithProps = React.Children.map(this.props.children, child =>\r\n            React.cloneElement(child, {userLevel: this.props.userLevel}),\r\n        );\r\n        return (\r\n\r\n            <div id=\"top-of-page\">\r\n                {!(navigator.userAgent.match(/Android/i)) &&\r\n                <Navigation userLevel={this.props.userLevel}\r\n                            setUserLevel={this.props.setUserLevel}\r\n                />\r\n                }\r\n\r\n                {childrenWithProps}\r\n\r\n                {!(navigator.userAgent.match(/Android/i)) &&\r\n                <Footer stylesheetData={this.props.stylesheetData['Footer']}/>\r\n                }\r\n\r\n                {/* Back To Top Button */}\r\n                <button data-hash=\"top-of-page\"\r\n                        id=\"to-top\"\r\n                        className=\"button\"\r\n                        type=\"button\"\r\n                >Top\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageWrapper;","import React, {Component} from 'react';\r\nimport {Carousel}         from 'react-bootstrap';\r\nimport {validURL}         from '../../repository';\r\n// Images\r\n\r\nclass ControlledCarousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      index    : 0,\r\n      direction: null,\r\n    };\r\n\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n  }\r\n\r\n  handleSelect = (selectedIndex, e) => {\r\n    this.setState({index: selectedIndex, direction: e.direction});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <Carousel activeIndex = { this.state.index }\r\n                  direction = { this.state.direction }\r\n                  onSelect = { this.handleSelect }\r\n                  pauseOnHover = { true }\r\n                  touch = { true }\r\n        >\r\n          { this.props.stylesheetData['Home']['carousel'].map((item, index) => {\r\n            return (\r\n                <Carousel.Item key = { index }>\r\n                  <img\r\n                      className = \"d-block img-responsive fit-image\"\r\n                      src = { validURL(item.src) ? item.src : process.env.PUBLIC_URL + item.src }\r\n                      alt = { item.label }\r\n                  />\r\n                  <Carousel.Caption>\r\n                    <h3>{ item.label }</h3>\r\n                    <p>{ item.text }</p>\r\n                  </Carousel.Caption>\r\n                </Carousel.Item>\r\n            );\r\n          }) }\r\n        </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\nclass CarouselHp extends Component {\r\n  render() {\r\n    return (\r\n        <ControlledCarousel stylesheetData = { this.props.stylesheetData } />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CarouselHp;","import React, {Component}    from 'react';\r\nimport '../assets/styles/homePage.css';\r\nimport * as Icons            from '@fortawesome/fontawesome-free-solid';\r\nimport {FontAwesomeIcon}     from '@fortawesome/react-fontawesome';\r\nimport {faMedal, faWeightHanging} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass ServiceGoal extends Component {\r\n  render() {\r\n    return (\r\n        <div className = { 'col-xl-3 col-lg-6 col-md-6' }>\r\n          <div className = { 'service-box' }>\r\n            <div className = { 'service-box-icon' }>\r\n              {/*<FontAwesome*/ }\r\n              {/*    name={this.props.icon}*/ }\r\n              {/*    size=\"2x\"*/ }\r\n              {/*/>*/ }\r\n              {\r\n                this.props.icon === 'medal' ?\r\n                    <FontAwesomeIcon icon = { faMedal } size = \"2x\" />\r\n                    :\r\n                    this.props.icon === 'weight' ?\r\n                        <FontAwesomeIcon icon = { faWeightHanging } size = \"2x\" />\r\n                        :\r\n                        <FontAwesomeIcon icon = { Icons['fa'\r\n                                                        + this.props.icon.charAt(\r\n                            0).toUpperCase() + this.props.icon.slice(1)] }\r\n                                         size = \"2x\"\r\n                        />\r\n              }\r\n            </div>\r\n            <div className = { 'service-box-content' }>\r\n              <h1 className = { 'service-box-title' }>{ this.props.title }</h1>\r\n              <p>{ this.props.message }</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServiceGoal;","import React, {Component} from 'react';\r\nimport '../assets/styles/homePage.css';\r\nimport ServiceGoal        from './ServiceGoal';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\nimport bgImage            from '../assets/img/logos/ffLogoTransparent.png';\r\n\r\nclass Services extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      services: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({services: this.props.stylesheetData['Home']['services']});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div id = { 'our-services' }>\r\n          <div className = \"container\">\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12\">\r\n                <div className = \"service-title text-center padding-bottom-35\">\r\n                  <p className = \"subtitle\">Service we provide</p>\r\n                  <h1 className = \"title\">Our Services</h1>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          { this.state.services.length === 6 &&\r\n            <div className = { 'service-area' }>\r\n              <div className = { 'container' }>\r\n                <div className = { 'row' }>\r\n                  <AnimatedOnScroll animationInDelay = { 500 }\r\n                                    animationIn = \"zoomInRight\"\r\n                                    style = { {\r\n                                      position : 'absolute',\r\n                                      height   : 650,\r\n                                      width    : 650,\r\n                                      top      : '50%',\r\n                                      left     : '50%',\r\n                                      transform: 'translate(-50%, -50%)',\r\n                                    } }\r\n                  >\r\n                    <img className = { 'bgImage' }\r\n                         src = { bgImage }\r\n                         alt = { 'Background' }\r\n                    />\r\n                  </AnimatedOnScroll>\r\n\r\n                  <AnimatedOnScroll animationIn = \"fadeInLeft\">\r\n                    <div className = { 'col-lg-12' }>\r\n                      <div className = { 'row d-flex justify-content-between' }>\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[0].icon }\r\n                            title = { this.state.services[0].title }\r\n                            message = { this.state.services[0].message }\r\n                        />\r\n\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[1].icon }\r\n                            title = { this.state.services[1].title }\r\n                            message = { this.state.services[1].message }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </AnimatedOnScroll>\r\n\r\n                  <AnimatedOnScroll animationIn = \"fadeInRight\">\r\n                    <div className = { 'col-lg-12' }>\r\n                      <div className = { 'row d-flex justify-content-between' }>\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[2].icon }\r\n                            title = { this.state.services[2].title }\r\n                            message = { this.state.services[2].message }\r\n                        />\r\n\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[3].icon }\r\n                            title = { this.state.services[3].title }\r\n                            message = { this.state.services[3].message }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </AnimatedOnScroll>\r\n\r\n                  <AnimatedOnScroll animationIn = \"fadeInLeft\">\r\n                    <div className = { 'col-lg-12' }>\r\n                      <div className = { 'row d-flex justify-content-between' }>\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[4].icon }\r\n                            title = { this.state.services[4].title }\r\n                            message = { this.state.services[4].message }\r\n                        />\r\n\r\n                        <ServiceGoal\r\n                            icon = { this.state.services[5].icon }\r\n                            title = { this.state.services[5].title }\r\n                            message = { this.state.services[5].message }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </AnimatedOnScroll>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Services;","import React, {Component} from 'react';\r\nimport '../assets/styles/Announcement.css'\r\n\r\nclass Announcement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {hover: false};\r\n        this.toggleHover = this.toggleHover.bind(this);\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState({hover: !this.state.hover});\r\n    };\r\n\r\n    onSlickRemove = () => {\r\n        if (this.props.level !== -1)\r\n            this.props.slickRemove(this.props.id);\r\n    };\r\n\r\n    render() {\r\n        let dataStyle;\r\n        let imgStyle;\r\n        if (this.props.level <= 1) {\r\n            dataStyle = {display: 'block'};\r\n            imgStyle = {display: 'none'};\r\n        }\r\n        return (\r\n            !this.props.isAdder ?\r\n                (\r\n                    <div className={'ann-card'}\r\n                         onClick={this.onSlickRemove}\r\n                         onMouseOver={this.toggleHover}\r\n                         onMouseOut={this.toggleHover}\r\n                    >\r\n                        <div className=\"ann-data\" style={dataStyle}>\r\n                            <h5 className=\"card-title\">\r\n                                {this.props.title}\r\n                            </h5>\r\n                            <p className=\"card-text\">\r\n                                {this.props.message}\r\n                            </p>\r\n                        </div>\r\n                        {this.props.level >= 2\r\n                        &&\r\n                        <i className=\"fa fa-minus-circle ann-img\"\r\n                           style={imgStyle}\r\n                        />}\r\n                    </div>)\r\n                :\r\n                (\r\n                    this.props.level <= 1 ?\r\n                        <div className=\"ann-card-prompt\"/>\r\n                        :\r\n                        <div className=\"ann-card\"\r\n                             onClick={this.props.slickAdd}\r\n                        >\r\n                            <i className=\"fa fa-plus-circle ann-img-plus\"/>\r\n                        </div>\r\n                )\r\n        );\r\n    }\r\n}\r\n\r\nexport default Announcement;","import React, {Component} from 'react';\r\nimport Slider             from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport '../assets/styles/AnnouncementsPublic.css';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\nimport Announcement       from './Announcement';\r\nimport AnnouncementModal  from './AnnouncementModal';\r\nimport Swal               from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport {\r\n  getPublicAnnouncements,\r\n  isAuthenticated,\r\n  removeAnnouncement,\r\n  addAnnouncement,\r\n}                         from '../../repository';\r\n\r\nclass AnnouncementsPublic extends Component {\r\n  _isMounted = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      announcements: [],\r\n      modal        : false,\r\n      level        : 0,\r\n    };\r\n    this.slickAdd = this.slickAdd.bind(this);\r\n    this.slickRemove = this.slickRemove.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  // need to see\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    let l = 0;\r\n    if (isAuthenticated()) {\r\n      const level = this.props.userLevel;\r\n      if (level === 'user') {\r\n        l = 1;\r\n      } else if (level === 'coach') {\r\n        l = 2;\r\n      } else if (level === 'admin') {\r\n        l = 3;\r\n      }\r\n    }\r\n    this.setState({level: l});\r\n\r\n    getPublicAnnouncements().then(response => {\r\n      if (this._isMounted) {\r\n        this.setState(\r\n            {announcements: response.data.announcements});\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  toggle = () => {\r\n    if (this.state.level <= 1) {\r\n      return;\r\n    }\r\n\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  slickAdd = async(Title, Message) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    if (Title === '' || Message === '') {\r\n      Swal.fire(\r\n          'Please fill in all boxes',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return false;\r\n    }\r\n\r\n    let prev = this.state.announcements.length;\r\n    await addAnnouncement(Title, Message).then(response => {\r\n      let prevAnn = this.state.announcements.slice(0);\r\n      prevAnn.push(\r\n          {\r\n            ANNOUNCEMENT_ID: response.data.ANNOUNCEMENT_ID,\r\n            Title          : Title,\r\n            Message        : Message,\r\n          });\r\n      this.setState({announcements: prevAnn});\r\n    }).then(() => {\r\n      Swal.fire(\r\n          'Public Announcement added successfully',\r\n          '',\r\n          'success',\r\n      );\r\n      this.toggle();\r\n    }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ));\r\n    return (prev === (this.state.announcements.length - 1));\r\n  };\r\n\r\n  slickRemove = (ANNOUNCEMENT_ID) => {\r\n    if (this.state.level <= 1) {\r\n      Swal.fire(\r\n          'You are not authorized to do this!',\r\n          'Please log in and try again...',\r\n          'error',\r\n      ).then();\r\n      return;\r\n    }\r\n\r\n    Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        removeAnnouncement(ANNOUNCEMENT_ID).then(() => {\r\n          this.setState({\r\n            announcements: this.state.announcements.filter(\r\n                ann => ann.ANNOUNCEMENT_ID\r\n                       !== ANNOUNCEMENT_ID),\r\n          }, () => Swal.fire(\r\n              'Public Announcement deleted successfully',\r\n              '',\r\n              'success',\r\n          ));\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Public Announcement is safe :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const settings = {\r\n      dots          : true,\r\n      infinite      : false,\r\n      speed         : 300,\r\n      slidesToShow  : 4,\r\n      slidesToScroll: 4,\r\n      centerPadding : 0,\r\n      centerMode    : false,\r\n      responsive    : [\r\n        {\r\n          breakpoint: 1024,\r\n          settings  : {\r\n            slidesToShow  : 3,\r\n            slidesToScroll: 3,\r\n            infinite      : true,\r\n            dots          : true,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 800,\r\n          settings  : {\r\n            slidesToShow  : 2,\r\n            slidesToScroll: 2,\r\n          },\r\n        },\r\n        {\r\n          breakpoint: 600,\r\n          settings  : {\r\n            slidesToShow  : 1,\r\n            slidesToScroll: 1,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    return (\r\n        <div id = 'AnnouncementsPub'>\r\n          <AnimatedOnScroll animationIn = \"fadeInLeft\">\r\n            <div id = \"ann-container\"\r\n                 className = \"container-fluid mt-2\"\r\n            >\r\n              <h1 className = \"ann-title\">Announcements</h1>\r\n              <div className = \"row\">\r\n                <div className = \"col-lg-12\">\r\n                  <div className = \"ann-cards\">\r\n                    <Slider { ...settings }>\r\n                      {/*//need to see for public*/ }\r\n                      { this.state.announcements.sort(\r\n                          function(a, b) {\r\n                            return b.ANNOUNCEMENT_ID\r\n                                   - a.ANNOUNCEMENT_ID;\r\n                          }).map(ann => {\r\n                        return <Announcement key = { ann.ANNOUNCEMENT_ID }\r\n                                             isAdder = { false }\r\n                                             id = { ann.ANNOUNCEMENT_ID }\r\n                                             title = { ann.Title }\r\n                                             message = { ann.Message }\r\n                                             slickRemove = { this.slickRemove }\r\n                                             level = { this.state.level }\r\n                        />;\r\n                      }) }\r\n                      { this.state.announcements.length === 0\r\n                        &&\r\n                        <Announcement isAdder = { true }\r\n                                      id = { 0 }\r\n                                      slickAdd = { this.toggle }\r\n                                      level = { this.state.level }\r\n                        /> }\r\n                      { this.state.announcements.length <= 1\r\n                        &&\r\n                        <Announcement isAdder = { true }\r\n                                      id = { 0 }\r\n                                      slickAdd = { this.toggle }\r\n                                      level = { this.state.level }\r\n                        /> }\r\n                      { this.state.announcements.length <= 2\r\n                        &&\r\n                        <Announcement\r\n                            isAdder = { true }\r\n                            id = { 0 }\r\n                            slickAdd = { this.toggle }\r\n                            level = { this.state.level }\r\n                        /> }\r\n                      { this.state.level <= 1\r\n                        &&\r\n                        this.state.announcements.length <= 3\r\n                        &&\r\n                        <Announcement\r\n                            isAdder = { true }\r\n                            id = { 0 }\r\n                            slickAdd = { this.toggle }\r\n                            level = { this.state.level }\r\n                        /> }\r\n                      { this.state.level >= 2\r\n                        &&\r\n                        <Announcement isAdder = { true }\r\n                                      id = { 0 }\r\n                                      slickAdd = { this.toggle }\r\n                                      level = { this.state.level }\r\n                        /> }\r\n                    </Slider>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </AnimatedOnScroll>\r\n\r\n          <AnnouncementModal onSubmit = { this.slickAdd }\r\n                             toggle = { this.toggle }\r\n                             modal = { this.state.modal }\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnnouncementsPublic;","import React, {Component}                   from 'react';\r\n// Re-usable components\r\nimport CarouselHp                           from '../common/CarouselHP';\r\nimport Services                             from '../common/Services';\r\nimport logo_img\r\n                                            from '../assets/img/logos/fitnessFactoryLogo.png';\r\nimport AnnouncementsPublic\r\n                                            from '../common/AnnouncementsPublic';\r\nimport {loggedInVisit, updateHomePageVisit} from '../../repository';\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    loggedInVisit().then();\r\n    updateHomePageVisit().then();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <CarouselHp stylesheetData = { this.props.stylesheetData } />\r\n\r\n          <div id = \"author\">\r\n            <img src = { logo_img } alt = { 'author' } />\r\n          </div>\r\n\r\n          <Services stylesheetData = { this.props.stylesheetData } />\r\n\r\n          <AnnouncementsPublic userLevel = { this.props.userLevel } />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport '../assets/styles/About.css';\r\nimport {sendEmail}        from '../../repository';\r\nimport ButtonLoader       from './ButtonLoader';\r\nimport Swal               from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\n\r\nclass ContactUs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name   : '',\r\n      email  : '',\r\n      phone  : '',\r\n      message: '',\r\n      loading: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    if (e.target.value.match() != null) {\r\n      this.setState({[e.target.name]: e.target.value.trim()});\r\n    }\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!(\r\n        this.state.name.match('[a-zA-Z ]+') &&\r\n        this.state.email.match('[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$') &&\r\n        this.state.phone.match('^ *[0-9]+.*') &&\r\n        this.state.message.match('^ *[a-zA-Z0-9]+.*'))) {\r\n      return;\r\n    }\r\n\r\n    this.setState({loading: true}, () => {\r\n      sendEmail(this.state)\r\n          .then((response) => {\r\n            if (response.status === 'success') {\r\n              Swal.fire(\r\n                  'Message sent successfully',\r\n                  'Check your email inbox for a confirmation.',\r\n                  'success',\r\n              ).then(() => window.location.reload());\r\n            } else {\r\n              Swal.fire(\r\n                  'Something went wrong',\r\n                  'Please try again...',\r\n                  'error',\r\n              ).then();\r\n            }\r\n          })\r\n          .then(() => this.setState({loading: false}))\r\n          .catch(() => Swal.fire(\r\n              'Something went wrong',\r\n              'Please try again...',\r\n              'error',\r\n              ).then(),\r\n          );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <section className = \"page-section\" id = \"contact\">\r\n          <div className = \"container-fluid\">\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12 text-center col-md-12 col-sm-12\">\r\n                <h1 className = \"section-heading\">\r\n                  Let's keep in touch\r\n                </h1>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-3\">\r\n                <h2>Contact Us</h2>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12 col-md-12 col-sm-12 text-center\">\r\n                <form\r\n                    className = \" needs-validation\"\r\n                    id = \"contactForm\"\r\n                    name = \"sentMessage\"\r\n                    // noValidate = \"novalidate\"\r\n                    onSubmit = { this.onSubmit }\r\n                >\r\n                  <div className = \"row mb-4\">\r\n                    <div className = \"col-md-6\">\r\n                      <div className = \"form-group\">\r\n                        <input\r\n                            className = \"form-control\"\r\n                            id = \"name\"\r\n                            name = \"name\"\r\n                            type = \"text\"\r\n                            placeholder = \"Name\"\r\n                            required = \"required\"\r\n                            pattern = \"[a-zA-Z ]+\"\r\n                            onChange = { this.handleChange }\r\n                        />\r\n                        <p className = \"help-block text-danger\" />\r\n                        <div\r\n                            className = \"colored invalid-feedback\"\r\n                        >\r\n                          Please enter your name!\r\n                        </div>\r\n                      </div>\r\n                      <div className = \"form-group\">\r\n                        <input\r\n                            className = \"form-control\"\r\n                            id = \"email\"\r\n                            name = \"email\"\r\n                            type = \"email\"\r\n                            placeholder = \"Email\"\r\n                            required = \"required\"\r\n                            pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                            onChange = { this.handleChange }\r\n                        />\r\n                        <p className = \"help-block text-danger\" />\r\n                        <div className = \"colored invalid-feedback\">\r\n                          Please enter a correct email!\r\n                        </div>\r\n                      </div>\r\n                      <div className = \"form-group\">\r\n                        <input\r\n                            className = \"form-control\"\r\n                            id = \"phone\"\r\n                            name = \"phone\"\r\n                            type = \"tel\"\r\n                            placeholder = \"Phone\"\r\n                            required = \"required\"\r\n                            pattern = \"^ *[0-9]+.*\"\r\n                            onChange = { this.handleChange }\r\n                        />\r\n                        <p className = \"help-block text-danger\" />\r\n                        <div className = \"colored invalid-feedback\">\r\n                          Please enter your phone!\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className = \"col-md-6\">\r\n                      <div className = \"form-group\">\r\n                                            <textarea\r\n                                                className = \"form-control\"\r\n                                                id = \"message\"\r\n                                                name = \"message\"\r\n                                                placeholder = \"Message\"\r\n                                                required = \"required\"\r\n                                                pattern = \"^ *[a-zA-Z0-9]+.*\"\r\n                                                onChange = { this.handleChange }\r\n                                            />\r\n                        <p className = \"help-block text-danger\" />\r\n                        <div\r\n                            className = \"colored invalid-feedback\"\r\n                        >\r\n                          Please enter your message!\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className = \"clearfix\" />\r\n                    <div className = \"col-lg-3 \">\r\n                      <div id = \"success\" />\r\n                      <ButtonLoader loading = { this.state.loading }\r\n                                    text = { 'Submit Message' }\r\n                                    loadingText = { 'Sending Message...' }\r\n                                    type = { 'submit' }\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-6 col-md-12 col-sm-12\">\r\n                <h2>Contact Information</h2>\r\n                <p>\r\n                  { ' ' }\r\n                  Address: { this.props.contact.address }\r\n                  <br />\r\n                  Phone: { this.props.contact.phone }\r\n                  <br />\r\n                  Email: { this.props.contact.email }\r\n                  <br />\r\n                </p>\r\n                <br />\r\n                <p>\r\n                  <a href = { this.props.contact.facebook }>\r\n                    <i className = \"fa fa-facebook\" />\r\n                  </a>\r\n                  <a href = { this.props.contact.instagram }>\r\n                    <i className = \"fa fa-instagram\" />\r\n                  </a>\r\n                </p>\r\n              </div>\r\n              <div className = \"col-lg-6 col-md-12 col-sm-12 text-center\">\r\n                <div className = \"mapouter\">\r\n                  <div className = \"gmap_canvas\">\r\n                    <iframe\r\n                        title = \"gmap_canvas\"\r\n                        width = \"550\"\r\n                        height = \"400\"\r\n                        id = \"gmap_canvas\"\r\n                        src = \"https://maps.google.com/maps?q=fitness%20factory%20nicosia&t=&z=13&ie=UTF8&iwloc=&output=embed\"\r\n                        frameBorder = \"0\"\r\n                        scrolling = \"no\"\r\n                        marginHeight = \"0\"\r\n                        marginWidth = \"0\"\r\n                    />\r\n                    <a href = \"https://www.embedgooglemap.net/blog/divi-discount-code-elegant-themes-coupon/\">\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p />\r\n          </div>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactUs;\r\n","import React, {Component} from 'react';\r\nimport {validURL}         from '../../repository';\r\n\r\nclass TeamMember extends Component {\r\n  render() {\r\n    return (\r\n        <li className = { this.props.className }>\r\n          <div className = \"timeline-image\">\r\n            <img className = \"rounded-circle img-fluid\"\r\n                 src = { validURL(this.props.src)\r\n                     ? this.props.src\r\n                     : process.env.PUBLIC_URL + this.props.src }\r\n                 alt = \"\"\r\n            />\r\n          </div>\r\n          <div className = \"timeline-panel\">\r\n            <div className = \"timeline-heading\">\r\n              <h4>{ this.props.name }</h4>\r\n            </div>\r\n            <div className = \"timeline-body\">\r\n              <p className = \"text-muted\">{ this.props.text }</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamMember;","import React, {Component}   from 'react';\r\nimport '../assets/styles/coaches.css';\r\nimport TeamMember           from './TeamMember';\r\nimport {updateClassesVisit} from '../../repository';\r\n\r\nclass Team extends Component {\r\n  componentDidMount() {\r\n    updateClassesVisit().then();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <section className = \"page-section\" id = \"about\">\r\n          <div className = \"container-fluid\">\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12 text-center\">\r\n                <h2 id = \"test\" className = \"section-heading text-uppercase\">\r\n                  Our trainers\r\n                </h2>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-lg-12\">\r\n                <ul className = \"timeline\">\r\n\r\n                  { this.props.coaches.map((coach, index) => {\r\n                    return (<TeamMember\r\n                        key = { index }\r\n                        { ...coach }\r\n                    />);\r\n                  }) }\r\n\r\n                  <li className = \"timeline-inverted\">\r\n                    <div className = \"timeline-image\">\r\n                      <h4>Start\r\n                        <br />Your Journey\r\n                        <br />Now!</h4>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Team;","import React, {Component}                  from 'react';\r\n\r\nimport {loggedInVisit} from '../../repository';\r\nimport '../assets/styles/privacy.css'\r\n\r\nclass PrivacyPolicy extends Component {\r\n\r\n    componentDidMount() {\r\n        loggedInVisit().then();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id = { 'privacy-policy' }>\r\n                <h1>Privacy Policy of Fitness Factory Nicosia</h1>\r\n\r\n                <p>Fitness Factory Nicosia operates the <a href=\"http://cproject.in.cs.ucy.ac.cy/ffn_webapp/\">http://cproject.in.cs.ucy.ac.cy/ffn_webapp/</a> website.</p>\r\n\r\n                <p>This page is used to inform website visitors regarding our policies with the collection, use, and disclosure of Personal Information if anyone decided to use our Service, the Fitness Factory Nicosia website.</p>\r\n\r\n                <p>If you choose to use our Service, then you agree to the collection and use of information in relation with this policy. The Personal Information that we collect are used for providing and improving the Service. We will not use or share your information with anyone except as described in this Privacy Policy.</p>\r\n\r\n                <p>The terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, which is accessible at http://cproject.in.cs.ucy.ac.cy/ffn_webapp/, unless otherwise defined in this Privacy Policy. Our Privacy Policy was created with the help of the <a href=\"https://www.privacypolicytemplate.net\">Privacy Policy Template</a> and the <a href=\"https://www.privacy-policy-template.com/\">Online Privacy Policy Template</a>.</p>\r\n\r\n                <h2>Information Collection and Use</h2>\r\n\r\n                <p>For a better experience while using our Service, we may require you to provide us with certain personally identifiable information, including but not limited to your name, phone number, and postal address. The information that we collect will be used to contact or identify you.</p>\r\n\r\n                <h2>Log Data</h2>\r\n\r\n                <p>We want to inform you that whenever you visit our Service, we collect information that your browser sends to us that is called Log Data. This Log Data may include information such as your computer’s Internet Protocol (\"IP\") address, browser version, pages of our Service that you visit, the time and date of your visit, the time spent on those pages, and other statistics.</p>\r\n\r\n                <h2>Cookies</h2>\r\n\r\n                <p>Cookies are files with small amount of data that is commonly used an anonymous unique identifier. These are sent to your browser from the website that you visit and are stored on your computer’s hard drive.</p>\r\n\r\n                <p>Our website uses these \"cookies\" to collection information and to improve our Service. You have the option to either accept or refuse these cookies, and know when a cookie is being sent to your computer. If you choose to refuse our cookies, you may not be able to use some portions of our Service.</p>\r\n\r\n                <p>For more general information on cookies, please read <a href=\"https://www.cookieconsent.com/what-are-cookies/\">\"What Are Cookies\"</a>.</p>\r\n\r\n                <h2>Service Providers</h2>\r\n\r\n                <p>We may employ third-party companies and individuals due to the following reasons:</p>\r\n\r\n                <ul>\r\n                    <li>To facilitate our Service;</li>\r\n                    <li>To provide the Service on our behalf;</li>\r\n                    <li>To perform Service-related services; or</li>\r\n                    <li>To assist us in analyzing how our Service is used.</li>\r\n                </ul>\r\n\r\n                <p>We want to inform our Service users that these third parties have access to your Personal Information. The reason is to perform the tasks assigned to them on our behalf. However, they are obligated not to disclose or use the information for any other purpose.</p>\r\n\r\n                <h2>Security</h2>\r\n\r\n                <p>We value your trust in providing us your Personal Information, thus we are striving to use commercially acceptable means of protecting it. But remember that no method of transmission over the internet, or method of electronic storage is 100% secure and reliable, and we cannot guarantee its absolute security.</p>\r\n\r\n                <h2>Links to Other Sites</h2>\r\n\r\n                <p>Our Service may contain links to other sites. If you click on a third-party link, you will be directed to that site. Note that these external sites are not operated by us. Therefore, we strongly advise you to review the Privacy Policy of these websites. We have no control over, and assume no responsibility for the content, privacy policies, or practices of any third-party sites or services.</p>\r\n\r\n                <h2>Children's Privacy</h2>\r\n\r\n                <p>Our Services do not address anyone under the age of 13. We do not knowingly collect personal identifiable information from children under 13. In the case we discover that a child under 13 has provided us with personal information, we immediately delete this from our servers. If you are a parent or guardian and you are aware that your child has provided us with personal information, please contact us so that we will be able to do necessary actions.</p>\r\n\r\n                <h2>Changes to This Privacy Policy</h2>\r\n\r\n                <p>We may update our Privacy Policy from time to time. Thus, we advise you to review this page periodically for any changes. We will notify you of any changes by posting the new Privacy Policy on this page. These changes are effective immediately, after they are posted on this page.</p>\r\n\r\n                <h2>Contact Us</h2>\r\n\r\n                <p>If you have any questions or suggestions about our Privacy Policy, do not hesitate to contact us.</p>\r\n                <p/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PrivacyPolicy;\r\n","import React, {Component}                  from 'react';\r\nimport ContactUs                           from '../common/ContactUs';\r\nimport Team                                from '../common/Team';\r\nimport {loggedInVisit, updateAboutUsVisit} from '../../repository';\r\nimport PrivacyPolicy                                from './PrivacyPolicy';\r\n\r\nclass AboutUs extends Component {\r\n    componentDidMount() {\r\n        loggedInVisit().then();\r\n        updateAboutUsVisit().then();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id = { 'about-us' }>\r\n                <Team coaches = { this.props.stylesheetData['About']['coach'] } />\r\n                <ContactUs contact = { this.props.stylesheetData['About']['contact'] } />\r\n                <PrivacyPolicy/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutUs;\r\n","import React, {Component} from 'react';\r\nimport '../assets/styles/PaymentStyle.css'\r\nimport jccLogo from '../assets/img/logos/jccLogo.svg';\r\nimport paypalLogo from '../assets/img/logos/paypalLogo.svg';\r\n\r\nclass PaymentModal extends Component {\r\n    onChange(value) {\r\n        console.log(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={'payment-modal'} className={'text-center'}>\r\n\r\n                <div id={'subscription-options'}>\r\n                    <h4>Subscription Options</h4>\r\n                    <div className=\"option-group\">\r\n                        <div className=\"option-container\">\r\n\r\n                            <input className=\"option-input\" id=\"option-1\" type=\"radio\" name=\"options\" defaultChecked/>\r\n                            <input className=\"option-input\" id=\"option-2\" type=\"radio\" name=\"options\"/>\r\n\r\n                            <label className=\"option\" htmlFor=\"option-1\">\r\n                                <span className=\"option__indicator\"/>\r\n                                <span className=\"option__label\">&euro;65<sub>per month</sub></span>\r\n                            </label>\r\n\r\n                            <label className=\"option\" htmlFor=\"option-2\">\r\n                                <span className=\"option__indicator\"/>\r\n                                <span className=\"option__label\">&euro;170<sub>/ 3 months</sub></span>\r\n                            </label>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"option-group\">\r\n                        <div className=\"option-container\">\r\n\r\n                            <input className=\"option-input\" id=\"option-3\" type=\"radio\" name=\"options\"/>\r\n                            <input className=\"option-input\" id=\"option-4\" type=\"radio\" name=\"options\"/>\r\n\r\n                            <label className=\"option\" htmlFor=\"option-3\">\r\n                                <span className=\"option__indicator\"/>\r\n                                <span className=\"option__label\">&euro;300<sub>/ 6 months</sub></span>\r\n                            </label>\r\n\r\n                            <label className=\"option\" htmlFor=\"option-4\">\r\n                                <span className=\"option__indicator\"/>\r\n                                <span className=\"option__label\">&euro;565<sub>per year</sub></span>\r\n                            </label>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id={'payment-options'}>\r\n                    <h4>Payment Options</h4>\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row radio-tile-group justify-content-center\">\r\n\r\n                            <div className=\"input-container\">\r\n                                <input id=\"walk\" className=\"radio-button\" type=\"radio\" name=\"radio\" defaultChecked/>\r\n                                <div className=\"radio-tile\">\r\n                                    <div className=\"icon walk-icon\">\r\n                                        <img src={jccLogo} alt={'JCC Logo'}/>\r\n                                    </div>\r\n                                    <label htmlFor=\"walk\" className=\"radio-tile-label\"/>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"input-container\">\r\n                                <input id=\"bike\" className=\"radio-button\" type=\"radio\" name=\"radio\"/>\r\n                                <div className=\"radio-tile\">\r\n                                    <div className=\"icon bike-icon\">\r\n                                        <img src={paypalLogo} alt={'PayPal Logo'}/>\r\n                                    </div>\r\n                                    <label htmlFor=\"bike\" className=\"radio-tile-label\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button id=\"CheckoutButton\" className=\"btn btn-primary\"\r\n                        type=\"submit\"><i className=\"fa fa-lock\" disabled={true}/> CHECKOUT\r\n                </button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentModal;","import React, {Component} from 'react';\r\n\r\nclass Event extends Component {\r\n  render() {\r\n    return (\r\n        <div className = \"event_item\">\r\n          <div className = { 'ei_Dot ' + (this.props.active\r\n                                          && 'dot_active') }\r\n          />\r\n          <div className = \"ei_Title\">\r\n            { this.props.timeStart } { this.props.timeStart.split(':')[0] < 12\r\n              ? 'am' : 'pm' }\r\n          </div>\r\n          <div className = \"ei_Copy\">{ this.props.event } </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, {Component} from 'react';\r\nimport '../assets/styles/EventsModal.css';\r\nimport Event              from './Event';\r\nimport {getEvents}        from '../../repository';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\nimport Spinner            from '../Spinner';\r\n\r\nclass EventsModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      events : [],\r\n      date   : '',\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const options = {\r\n      weekday: 'long',\r\n      year   : 'numeric',\r\n      month  : 'long',\r\n      day    : 'numeric',\r\n    };\r\n    const dateTimeFormat = new Intl.DateTimeFormat('en-GB', options);\r\n    this.setState({date: dateTimeFormat.format(new Date())});\r\n\r\n    getEvents().then(response => {\r\n      this.setState({events: response.events});\r\n    }).then(() => {\r\n      this.setState({loading: false});\r\n    }).catch();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div id = { 'EventsModal' }>\r\n          { this.state.loading ?\r\n              <Spinner style = { {\r\n                'height'         : '250px',\r\n                'backgroundColor': 'transparent',\r\n              } }\r\n              />\r\n              :\r\n              <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                <div className = \"container\">\r\n                  <div className = \"calendar dark\">\r\n                    <div className = \"calendar_header\">\r\n                      <h1 className = \"header_title\">Welcome Back</h1>\r\n                      <p className = \"header_copy\"> Calendar Plan</p>\r\n                    </div>\r\n                    <div className = \"calendar_plan\">\r\n                      <div className = \"cl_plan\">\r\n                        <div className = \"cl_title\">Today</div>\r\n                        <div className = \"cl_copy\">{ this.state.date }</div>\r\n                        {/*<div class = \"cl_add\">*/ }\r\n                        {/*  <i class = \"fas fa-plus\"/>*/ }\r\n                        {/*</div>*/ }\r\n                      </div>\r\n                    </div>\r\n                    <div className = \"calendar_events\">\r\n                      <p className = \"ce_title\">Upcoming Events</p>\r\n                      { this.state.events.length === 0 ?\r\n                          <div style = { {'textAlign': 'center'} }>\r\n                            You have no training planned today.<br />\r\n                            Take the day off, you deserve it!\r\n                          </div>\r\n                          :\r\n                          this.state.events.map((event, index) => {\r\n                            const startSplit = event.timeStart.split(':');\r\n                            const start = parseInt(startSplit[0]) * 60\r\n                                          + parseInt(startSplit[1]);\r\n                            const now = new Date().getHours() * 60\r\n                                        + new Date().getMinutes();\r\n                            const end = start + 60;\r\n                            let active = false;\r\n                            if (start <= now && now <= end) {\r\n                              active = true;\r\n                            }\r\n                            return <Event key = { index } { ...event }\r\n                                          active = { active }\r\n                            />;\r\n                          })\r\n                      }\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </AnimatedOnScroll>\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventsModal;","import React, {Component} from 'react';\r\nimport '../assets/styles/AnnouncmentsPrivate.css'\r\n\r\nclass AnnouncementCompPub extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {hover: false};\r\n        this.toggleHover = this.toggleHover.bind(this);\r\n    }\r\n\r\n    toggleHover = () => {\r\n        this.setState({hover: !this.state.hover});\r\n    };\r\n\r\n\r\n    render() {\r\n        let dataStyle;\r\n        let imgStyle;\r\n        if (this.props.level <= 1) {\r\n            dataStyle = {display: 'block'};\r\n            imgStyle = {display: 'none'};\r\n        }\r\n        return (\r\n                    <div className={'ann-card'}\r\n                         onMouseOver={this.toggleHover}\r\n                         onMouseOut={this.toggleHover}\r\n                    >\r\n                        <div className=\"ann-data\" style={dataStyle}>\r\n                            <h5 className=\"card-title\">\r\n                                {this.props.title}\r\n                            </h5>\r\n                            <p className=\"card-text\">\r\n                                {this.props.message}\r\n                            </p>\r\n                        </div>\r\n                        {this.props.level >= 2\r\n                        &&\r\n                        <i className=\"fa fa-minus-circle ann-img\"\r\n                           style={imgStyle}\r\n                        />}\r\n                    </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AnnouncementCompPub;","import React, {Component}        from 'react';\r\nimport {AnimatedOnScroll}        from 'react-animated-css-onscroll';\r\nimport '../assets/styles/AnnouncmentsPrivate.css';\r\nimport AnnouncementCompPub       from './AnnouncementCompPub';\r\nimport {getPrivateAnnouncements} from '../../repository';\r\nimport Spinner                   from '../Spinner';\r\n\r\nclass AnnouncementsPrivate extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      announcements: [],\r\n      level        : -1,\r\n      loading      : true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.setState({level: -1});\r\n\r\n    getPrivateAnnouncements().then(response => {\r\n      this.setState(\r\n          {announcements: response.data.announcements});\r\n    }).then(() => this.setState({loading: false}));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = \"Announcements\" id = \"AnnounceModal\">\r\n          { this.state.loading ?\r\n              <Spinner style = { {\r\n                'height'         : '250px',\r\n                'backgroundColor': 'transparent',\r\n              } }\r\n              /> :\r\n              <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                <div id = \"ann\" className = \"container mt-2\">\r\n                  { this.state.announcements.sort(\r\n                      function(a, b) {\r\n                        return b.ANNOUNCEMENT_ID\r\n                               - a.ANNOUNCEMENT_ID;\r\n                      }).map(ann => {\r\n                    return <AnnouncementCompPub key = { ann.ANNOUNCEMENT_ID }\r\n                                                id = { ann.ANNOUNCEMENT_ID }\r\n                                                title = { ann.Title }\r\n                                                message = { ann.Message }\r\n                                                level = { this.state.level }\r\n                    />;\r\n                  }) }\r\n                </div>\r\n              </AnimatedOnScroll>\r\n          }\r\n        </div>\r\n    )\r\n        ;\r\n  }\r\n}\r\n\r\nexport default AnnouncementsPrivate;","import React, {Component} from 'react';\r\nimport '../assets/styles/MessagesModal.css';\r\nimport Message            from './Message';\r\nimport {\r\n  createNewMessage,\r\n  getMessages,\r\n  makeMessagesRead, userData,\r\n}                         from '../../repository';\r\nimport MessageNewModal    from './MessageNewModal';\r\nimport Swal               from 'sweetalert2';\r\nimport Spinner            from '../Spinner';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\n\r\nclass MessagesModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      newModal: false,\r\n      loading : [true, true],\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onMessageSubmit = this.onMessageSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getMessages().then(response => {\r\n      this.setState({\r\n        messages: response.messages[0].sort(\r\n            function(a, b) {\r\n              // noinspection JSUnresolvedVariable\r\n              return b.Message_ID\r\n                     - a.Message_ID;\r\n            }),\r\n      });\r\n    }).then(() => {\r\n      let loading = this.state.loading;\r\n      loading[0] = false;\r\n      this.setState({loading});\r\n    }).catch(err => alert(err));\r\n\r\n    userData().then(response => {\r\n      this.setState({image: response.image});\r\n    }).then(() => {\r\n      let loading = this.state.loading;\r\n      loading[1] = false;\r\n      this.setState({loading});\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.TotalMessages > 0) {\r\n      // noinspection JSUnresolvedVariable\r\n      const newMessages = this.state.messages.slice(0,\r\n          this.props.TotalMessages).map(msg => msg.Message_ID);\r\n      makeMessagesRead(newMessages).then(() => {\r\n        this.props.toggleTotalMessages();\r\n      }).catch(err => alert(err));\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({newModal: !this.state.newModal});\r\n  };\r\n\r\n  onMessageSubmit = (e, title, message, contact) => {\r\n    e.preventDefault();\r\n    createNewMessage({title, message, contact}).then(response => {\r\n      this.toggle();\r\n      let newArr = this.state.messages.slice(0);\r\n      newArr.unshift(response[0]);\r\n      this.setState({messages: newArr});\r\n      console.log(response);\r\n      if (response[0]) {\r\n        Swal.fire(\r\n            'Message sent successfully',\r\n            '',\r\n            'success',\r\n        ).then();\r\n      } else {\r\n        Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ).then();\r\n      }\r\n    }).catch(() => Swal.fire(\r\n        'Something went wrong',\r\n        'Please try again...',\r\n        'error',\r\n    ).then());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div id = { 'MessagesModal' }>\r\n          { this.state.loading.includes(true) ?\r\n              <Spinner style = { {\r\n                'height'         : '250px',\r\n                'backgroundColor': 'transparent',\r\n              } }\r\n              />\r\n              :\r\n              <>\r\n                <button className = { 'new-msg-btn btn btn-primary btn-xl text-uppercase' }\r\n                        onClick = { this.toggle }\r\n                >\r\n                  New Message\r\n                </button>\r\n                <div id = \"message-container\"\r\n                     className = \"container-fluid mt-2\"\r\n                >\r\n                  <AnimatedOnScroll animationIn = \"slideInDown\">\r\n                    { this.state.messages.map(\r\n                        (msg, index) => {\r\n                          // noinspection JSUnresolvedVariable\r\n                          const outgoing = this.props.userLevel\r\n                                           === msg.From_level;\r\n                          // noinspection JSUnresolvedVariable\r\n                          const toContact = `${ msg.To_Name } ${ msg.To_Surname } - ${ msg.To_level.toUpperCase() }`;\r\n                          // noinspection JSUnresolvedVariable\r\n                          const fromContact = `${ msg.From_Name } ${ msg.From_Surname } - ${ msg.From_level.toUpperCase() }`;\r\n                          const timestamp = msg.Timestamp.split(/[T.]+/)[0]\r\n                                            + ' '\r\n                                            + msg.Timestamp.split(/[T.]+/)[1];\r\n                          // noinspection JSUnresolvedVariable\r\n                          return (\r\n                              <div className = { 'messageDiv' } key = { index }>\r\n                                { this.props.TotalMessages > 0 &&\r\n                                  this.props.TotalMessages === index &&\r\n                                  < div className = 'new-msg-line'>\r\n                                    New Messages Above\r\n                                  </div> }\r\n                                <Message\r\n                                    key = { msg.Message_ID }\r\n                                    title = { msg.Title }\r\n                                    message = { msg.Message }\r\n                                    toContact = { toContact }\r\n                                    fromContact = { fromContact }\r\n                                    outgoing = { outgoing }\r\n                                    timestamp = { timestamp }\r\n                                    hasSeen = { msg.hasSeen }\r\n                                    image = { this.state.image }\r\n                                />\r\n                              </div>\r\n                          );\r\n                        })\r\n                    }\r\n                  </AnimatedOnScroll>\r\n                </div>\r\n              </>\r\n          }\r\n\r\n          <MessageNewModal onSubmit = { this.onMessageSubmit }\r\n                           toggle = { this.toggle }\r\n                           modal = { this.state.newModal }\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessagesModal;","import React, {Component} from 'react';\r\nimport ToggleModal        from './ToggleModal';\r\nimport PaymentModal       from './PaymentModal';\r\nimport EventsModal        from './EventsModal';\r\nimport {Button}           from 'reactstrap';\r\nimport AnnouncementsPrivate\r\n                          from './AnnouncementsPrivate';\r\nimport EditAccount        from './EditAccount';\r\nimport MessagesModal      from './MessagesModal';\r\nimport {\r\n  getEventsTotal,\r\n  // getSevenDaysRemaining,\r\n  getTotalMessages,\r\n  getTotalPrivateAnnouncements,\r\n}                         from '../../repository';\r\n\r\nclass SettingsProfile extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      modalPayment       : false,\r\n      modalAnnouncements : false,\r\n      modalAnnouncements2: false,\r\n      modalMessages      : false,\r\n      modalEditAccount   : false,\r\n      modalEvents        : false,\r\n      TotalMessages      : 0,\r\n      TotalAnnouncement  : 0,\r\n      TotalEvents        : 0,\r\n      sevenDaysLeft      : 0,\r\n      open               : false,\r\n      classes            : [],\r\n      dataPT             : [],\r\n    };\r\n    this.togglePayment = this.togglePayment.bind(this);\r\n    this.toggleAnnouncements = this.toggleAnnouncements.bind(this);\r\n    this.toggleAnnouncements2 = this.toggleAnnouncements2.bind(this);\r\n    this.toggleTotalMessages = this.toggleTotalMessages.bind(this);\r\n    this.toggleEvents = this.toggleEvents.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.toggleTotalEvents = this.toggleTotalEvents.bind(this);\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({open: !this.state.open});\r\n  };\r\n  togglePayment = () => {\r\n    this.setState({modalPayment: !this.state.modalPayment});\r\n  };\r\n  toggleEvents = () => {\r\n    this.setState({modalEvents: !this.state.modalEvents});\r\n  };\r\n  toggleTotalMessages = () => {\r\n    this.setState({TotalMessages: 0});\r\n  };\r\n  toggleTotalEvents = () => {\r\n    this.setState({TotalEvents: 0});\r\n  };\r\n  toggleAnnouncements = () => {\r\n    this.setState({modalAnnouncements: !this.state.modalAnnouncements});\r\n  };\r\n  toggleAnnouncements2 = () => {\r\n    this.setState({modalAnnouncements2: !this.state.modalAnnouncements2});\r\n  };\r\n  toggleEditAccount = () => {\r\n    this.setState({modalEditAccount: !this.state.modalEditAccount});\r\n  };\r\n  toggleMessages = () => {\r\n    this.setState({modalMessages: !this.state.modalMessages});\r\n  };\r\n\r\n  componentDidMount() {\r\n    getTotalPrivateAnnouncements().then(response => {\r\n      // noinspection JSUnresolvedVariable\r\n      this.setState(\r\n          {TotalAnnouncement: response.TotalAnnouncement.Count});\r\n    });\r\n\r\n    getTotalMessages().then(response => {\r\n      this.setState(\r\n          {TotalMessages: response.TotalMessages});\r\n    });\r\n\r\n    getEventsTotal().then(response => {\r\n      this.setState({TotalEvents: response.total});\r\n    }).catch();\r\n\r\n  }\r\n\r\n  //Testing\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.classes !== this.props.classes || prevProps.dataPT\r\n        !== this.props.dataPT) {\r\n      (async() => {\r\n        await this.setState(\r\n            {dataPT: this.props.dataPT, classes: this.props.classes});\r\n      })();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        /**  <>\r\n         <Popup\r\n         open = { this.state.open }\r\n         closeOnDocumentClick\r\n         onClose = { this.toggleModal }\r\n         modal\r\n         >\r\n         <div style={{backgroundColor: 'red'}}>\r\n         Your active subscription expires in less than 7 days.\r\n         <br />\r\n         If you would like to renew your subscription please click here.\r\n         </div>\r\n         </Popup>**/\r\n        <div className = \"col-lg-4 col-md-12 col-sm-12\">\r\n          <div className = \"menu-box block\" id = \"leftBlock\">\r\n            <div className = \"titular\">Settings</div>\r\n            <ul className = \"menu-box-menu\">\r\n              {/* Remember to add onClick to new modals on buttons */ }\r\n              <li>\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleMessages }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-envelope\" /> Messages\r\n                  { this.state.TotalMessages > 0 &&\r\n                    <div className = \"menu-box-number\">{ this.state.TotalMessages }</div> }\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalMessages }\r\n                    toggle = { this.toggleMessages }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Messages' }\r\n                    modalBody = {\r\n                      <MessagesModal userLevel = { this.props.userLevel }\r\n                                     TotalMessages = { this.state.TotalMessages }\r\n                                     toggleTotalMessages = { this.toggleTotalMessages }\r\n                      /> }\r\n                />\r\n              </li>\r\n              <li>\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.togglePayment }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-credit-card\"><span\r\n                      style = { {color: 'white'} }\r\n                  >Membership</span></i>\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalPayment }\r\n                    toggle = { this.togglePayment }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Payment' }\r\n                    modalBody = { <PaymentModal /> }\r\n                />\r\n              </li>\r\n              <li>\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleEvents }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-calendar\" /> Events\r\n                  { this.state.TotalEvents > 0 &&\r\n                    <div className = \"menu-box-number\">{ this.state.TotalEvents }</div> }\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalEvents }\r\n                    toggle = { this.toggleEvents }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Events' }\r\n                    modalBody = {\r\n                      <EventsModal userLevel = { this.props.userLevel }\r\n                                   TotalEvents = { this.state.TotalEvents }\r\n                      /> }\r\n                />\r\n              </li>\r\n              <li>\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleAnnouncements }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-tasks\" /> Announcements\r\n                  <div className = \"menu-box-number\">{ this.state.TotalAnnouncement }</div>\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalAnnouncements }\r\n                    toggle = { this.toggleAnnouncements }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Announcements' }\r\n                    modalBody = { <AnnouncementsPrivate /> }\r\n                />\r\n              </li>\r\n              <li id = \"editAccount\">\r\n                <Button className = { 'nav-link menu-box-tab menu-text ' }\r\n                        onClick = { this.toggleEditAccount }\r\n                        style = { {width: '100%'} }\r\n                >\r\n                  <i className = \"scnd-font-color fa fa-user\" /> Edit Account\r\n                </Button>\r\n                <ToggleModal\r\n                    modal = { this.state.modalEditAccount }\r\n                    toggle = { this.toggleEditAccount }\r\n                    modalSize = { 'md' }\r\n                    modalHeader = { 'Edit Account' }\r\n                    modalBody = { <EditAccount dataPT = { this.state.dataPT }\r\n                                               classes = { this.state.classes }\r\n                    /> }\r\n                />\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        /**  </>**/\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default SettingsProfile;","import React, {Component} from 'react';\r\n\r\nclass GeneralScheduleModalBody extends Component {\r\n  render() {\r\n    return (\r\n        <img src = { process.env.PUBLIC_URL + '/img/classes/timetable-new.png' }\r\n             alt = \"timetable\"\r\n             width = \"100%\"\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GeneralScheduleModalBody;","import React, {Component}       from 'react';\r\nimport '../assets/styles/BookDropdown.css';\r\nimport {getClasses}             from '../../repository';\r\nimport {getClassDay}            from '../../repository';\r\nimport {getClassTime}           from '../../repository';\r\nimport {getClassCoach}          from '../../repository';\r\nimport {getClassID}             from '../../repository';\r\nimport {getUserID}              from '../../repository';\r\nimport {preventDefault}         from 'leaflet/src/dom/DomEvent';\r\nimport ToggleModal              from './ToggleModal';\r\nimport GeneralScheduleModalBody from './GeneralScheduleModalBody';\r\nimport Swal                     from \"sweetalert2\";\r\n\r\nclass BookClass extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      User_ID      : '',\r\n      Name         : [],\r\n      Day          : [],\r\n      Time         : [],\r\n      CoachName    : [],\r\n      SelectedClass: 'Select...',\r\n      SelectedDay  : 'Select...',\r\n      SelectedTime : 'Select...',\r\n      SelectedCoach: 'Select...',\r\n      ClassID      : '',\r\n      DayCode      : '',\r\n      TimeCode     : '',\r\n      flag         : false,\r\n      invalid      : true,\r\n      classSchedule: [],\r\n      modalGeneral : false,\r\n    };\r\n    this.handleClass = this.handleClass.bind(this);\r\n    this.handleDay = this.handleDay.bind(this);\r\n    this.handleTime = this.handleTime.bind(this);\r\n    this.handleCoach = this.handleCoach.bind(this);\r\n    this.toggleModalGeneral = this.toggleModalGeneral.bind(this);\r\n\r\n  }\r\n\r\n  toggleModalGeneral = (e) => {\r\n    preventDefault(e);\r\n    this.setState({modalGeneral: !this.state.modalGeneral});\r\n  };\r\n\r\n  handleClass = (e) => {\r\n    this.setState(\r\n      {[e.target.name]: e.target.value === 'Select...' ? '' : e.target.value},\r\n      () => {\r\n        this.setState({Day: this.state.Day !== null ? [] : this.state.Day},\r\n          () => {\r\n            this.setState(\r\n              {Time: this.state.Time !== null ? [] : this.state.Time},\r\n              () => {\r\n                this.setState({\r\n                  CoachName: this.state.CoachName !== null\r\n                      ? []\r\n                      : this.state.CoachName,\r\n                }, () => {\r\n                  getClassDay(this.state.SelectedClass).then(response => {\r\n                    this.setState({Day: response}, () => {\r\n                      console.clear();\r\n                    });\r\n                  });\r\n                });\r\n              });\r\n          });\r\n      });\r\n  };\r\n\r\n  handleDay = (e) => {\r\n    this.setState(\r\n        {[e.target.name]: e.target.value === 'Select...' ? '' : e.target.value},\r\n        () => {\r\n          this.setState({Time: []}, () => {\r\n            this.setState({CoachName: []}, () => {\r\n              getClassTime(this.state.SelectedClass, this.state.SelectedDay)\r\n                  .then(response => {\r\n                    this.setState({Time: response}, () => {\r\n                      if (this.state.SelectedDay === 'Monday') {\r\n                        this.setState({DayCode: 1});\r\n                      } else if (this.state.SelectedDay === 'Tuesday') {\r\n                        this.setState({DayCode: 2});\r\n                      } else if (this.state.SelectedDay === 'Wednesday') {\r\n                        this.setState({DayCode: 3});\r\n                      } else if (this.state.SelectedDay === 'Thursday') {\r\n                        this.setState({DayCode: 4});\r\n                      } else if (this.state.SelectedDay === 'Friday') {\r\n                        this.setState({DayCode: 5});\r\n                      } else if (this.state.SelectedDay === 'Saturday') {\r\n                        this.setState({DayCode: 6});\r\n                      } else if (this.state.SelectedDay === 'Sunday') {\r\n                        this.setState({DayCode: 7});\r\n                      }\r\n                    });\r\n                  });\r\n            });\r\n          });\r\n        });\r\n  };\r\n\r\n  handleTime = (e) => {\r\n    this.setState(\r\n        {[e.target.name]: e.target.value === 'Select...' ? '' : e.target.value},\r\n        () => {\r\n          this.setState({CoachName: []}, () => {\r\n            getClassCoach(this.state.SelectedClass, this.state.SelectedDay,\r\n                this.state.SelectedTime).then(response => {\r\n              this.setState({CoachName: response}, () => {\r\n                if (this.state.SelectedTime === '08:00:00') {\r\n                  this.setState({TimeCode: 1});\r\n                } else if (this.state.SelectedTime === '09:00:00') {\r\n                  this.setState({TimeCode: 2});\r\n                } else if (this.state.SelectedTime === '10:00:00') {\r\n                  this.setState({TimeCode: 3});\r\n                } else if (this.state.SelectedTime === '11:00:00') {\r\n                  this.setState({TimeCode: 4});\r\n                } else if (this.state.SelectedTime === '12:00:00') {\r\n                  this.setState({TimeCode: 5});\r\n                } else if (this.state.SelectedTime === '13:00:00') {\r\n                  this.setState({TimeCode: 6});\r\n                } else if (this.state.SelectedTime === '14:00:00') {\r\n                  this.setState({TimeCode: 7});\r\n                } else if (this.state.SelectedTime === '15:00:00') {\r\n                  this.setState({TimeCode: 8});\r\n                } else if (this.state.SelectedTime === '16:00:00') {\r\n                  this.setState({TimeCode: 9});\r\n                } else if (this.state.SelectedTime === '17:00:00') {\r\n                  this.setState({TimeCode: 10});\r\n                } else if (this.state.SelectedTime === '18:00:00') {\r\n                  this.setState({TimeCode: 11});\r\n                } else if (this.state.SelectedTime === '19:00:00') {\r\n                  this.setState({TimeCode: 12});\r\n                }\r\n              });\r\n            });\r\n          });\r\n        });\r\n  };\r\n\r\n  handleCoach = (e) => {\r\n    this.setState(\r\n        {[e.target.name]: e.target.value === 'Select...' ? '' : e.target.value},\r\n        () => {\r\n          getClassID(this.state.SelectedClass, this.state.SelectedDay,\r\n              this.state.SelectedTime, this.state.SelectedCoach)\r\n              .then(response => {\r\n                this.setState({ClassID: response.data.ClassID.ClassID}, () => {\r\n                });\r\n              });\r\n        });\r\n\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    preventDefault(e);\r\n    if (this.state.Day.length === 0 ||\r\n        this.state.Name.length === 0 ||\r\n        this.state.Time.length === 0 ||\r\n        this.state.CoachName.length === 0 ){\r\n      Swal.fire(\r\n          'Required selections are empty',\r\n          'Make sure that you have filled every selection first!',\r\n          'error',\r\n      ).then();\r\n    }else {\r\n      this.setState({flag: true, invalid : false}, () => {\r\n        this.props.getSelections(\r\n            this.state.DayCode,\r\n            this.state.TimeCode,\r\n            true,\r\n            this.state.ClassID,\r\n            this.state.SelectedClass,\r\n            false\r\n        );\r\n      });\r\n    }\r\n    this.setState({Name: []}, () => {\r\n      this.setState({Day: []}, () => {\r\n        this.setState({Time: []}, () => {\r\n          this.setState({CoachName: []}, () => {\r\n            getClasses().then(response => {\r\n              this.setState({Name: response});\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  onDelete = (e) => {\r\n    preventDefault(e);\r\n    if (this.state.Day.length === 0 ||\r\n        this.state.Name.length === 0 ||\r\n        this.state.Time.length === 0 ||\r\n        this.state.CoachName.length === 0 ){\r\n      Swal.fire(\r\n          'Required selections are empty',\r\n          'Make sure that you have filled every selection first!',\r\n          'error',\r\n      ).then();\r\n    }else {\r\n      this.setState({flag: false, invalid : false}, () => {\r\n        this.props.getSelections(\r\n            this.state.DayCode,\r\n            this.state.TimeCode,\r\n            false,\r\n            this.state.ClassID,\r\n            this.state.SelectedClass,\r\n            false\r\n        );\r\n      });\r\n    }\r\n    this.setState({Name: []}, () => {\r\n      this.setState({Day: []}, () => {\r\n        this.setState({Time: []}, () => {\r\n          this.setState({CoachName: []}, () => {\r\n            getClasses().then(response => {\r\n              this.setState({Name: response});\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  //\r\n  componentDidMount() {\r\n    getUserID()\r\n        .then(response => {\r\n          this.setState(\r\n              {User_ID: response.User_ID}, () => {\r\n              });\r\n          getClasses().then(response => {\r\n            this.setState({Name: response});\r\n          });\r\n        });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = \"col-lg-4 col-md-12 col-sm-12\">\r\n          <form className = \"form\" id = \"backBox\">\r\n            <h3 id = \"bmiHeading\"><b>E</b>nroll <b>T</b>o <b>C</b>lass</h3>\r\n\r\n            <div className = \"row\" id = \"first-row\">\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <label htmlFor = \"DropClass\">Class:</label>\r\n                <select className = \"form-control\"\r\n                        id = \"DropDays\"\r\n                        name = \"SelectedClass\"\r\n                        onChange = { this.handleClass }\r\n                >\r\n                  <option>Select...</option>\r\n                  { this.state.Name.map((res, index) => {\r\n                    return <option value = { res.Name } key = { index }>\r\n                      { res.Name }\r\n                    </option>;\r\n                  })\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <label htmlFor = \"DropDays\">Day:</label>\r\n                <select className = \"form-control\"\r\n                        id = \"DropDays\"\r\n                        name = \"SelectedDay\"\r\n                        onChange = { this.handleDay }\r\n                >\r\n                  <option>Select...</option>\r\n                  { this.state.Day.map((res, index) => {\r\n                    return <option value = { res.Day } key = { index }>\r\n                      { res.Day }\r\n                    </option>;\r\n                  })\r\n                  }\r\n                </select>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className = \"row\" id = \"first-row\">\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <label htmlFor = \"DropDays\">Time:</label>\r\n                <select className = \"form-control\"\r\n                        id = \"DropDays\"\r\n                        name = \"SelectedTime\"\r\n                        onChange = { this.handleTime }\r\n                >\r\n                  <option>Select...</option>\r\n                  { this.state.Time.map((res, index) => {\r\n                    return <option value = { res.Time } key = { index }>\r\n                      { res.Time }\r\n                    </option>;\r\n                  })\r\n                  }\r\n                </select>\r\n              </div>\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <label htmlFor = \"DropClass\">Coach:</label>\r\n                <select className = \"form-control\"\r\n                        id = \"DropDays\"\r\n                        name = \"SelectedCoach\"\r\n                        onChange = { this.handleCoach }\r\n                >\r\n                  <option>Select...</option>\r\n                  { this.state.CoachName.map((res, index) => {\r\n                    return <option value = { res.CoachName } key = { index }>\r\n                      { res.CoachName }\r\n                    </option>;\r\n                  })\r\n                  }\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <button type = \"\"\r\n                        className = \"RowButton\"\r\n                        onClick = { this.onSubmit }\r\n                >Enroll\r\n                </button>\r\n              </div>\r\n              <div className = \"col-md-6 RowBlock\">\r\n                <button type = \"button-important\"\r\n                        className = \"RowButton\"\r\n                        onClick = { this.onDelete }\r\n                >Unenroll\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className = \"row\">\r\n              <div className = \"col-md-12 RowBlock\"\r\n                   style = { {'paddingBottom': '0px'} }\r\n              >\r\n                <button type = \"button-important\"\r\n                        className = \"RowButton\"\r\n                        onClick = { this.toggleModalGeneral }\r\n                >View General Schedule\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n            <ToggleModal\r\n                modal = { this.state.modalGeneral }\r\n                toggle = { this.toggleModalGeneral }\r\n                modalSize = { 'lg' }\r\n                modalHeader = { 'General Gym Schedule' }\r\n                modalBody = { <GeneralScheduleModalBody /> }\r\n            />\r\n          </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookClass;","import React, {Component} from 'react';\r\nimport '../assets/styles/PersonalTrainingTimetable.css';\r\nimport {\r\n    // getClasses,\r\n    // getPersonalTraining,\r\n    getUserID,\r\n    // insertPT,\r\n    // postuserData,\r\n    getClassSchedule,\r\n    // getClassName,\r\n    getPersonalSchedule,\r\n    enrollUser,\r\n    unenrollUser\r\n} from '../../repository';\r\nimport Swal from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\n\r\nclass EnrolledClassSchedule extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n        this.state = {\r\n            refID: '',\r\n            refIDs: [],\r\n            ptIDs: [],\r\n            trainingScheduleRet: [],\r\n            flag: false,\r\n            Coach_ID: '',\r\n            User_ID: '',\r\n            classSchedule: [],\r\n            personalSchedule: [],\r\n            cIDs: [],\r\n            pIDs: [],\r\n            cNames: [],\r\n            pNames: [],\r\n            ClassID: '',\r\n            Name: '',\r\n            ClassColors: [\r\n                '#812029',\r\n                '#1A63D9',\r\n                '#CF1B1B',\r\n                '#FFAD1F',\r\n                '#704585',\r\n                '#53878C',\r\n                '#C97200',\r\n                '#489655',\r\n                '#158CA3',\r\n                '#9E134B',\r\n            ],\r\n\r\n        };\r\n        this.StateSetter = this.StateSetter.bind(this);\r\n        this.StateSetterPT = this.StateSetterPT.bind(this);\r\n        this.ColorLuminance = this.ColorLuminance.bind(this);\r\n    }\r\n\r\n    ColorLuminance = (hex, lum) => {\r\n\r\n        // validate hex string\r\n        hex = String(hex).replace(/[^0-9a-f]/gi, '');\r\n        if (hex.length < 6) {\r\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n        }\r\n        lum = lum || 0;\r\n\r\n        // convert to decimal and change luminosity\r\n        let rgb = '#', c, i;\r\n        for (i = 0; i < 3; i++) {\r\n            c = parseInt(hex.substr(i * 2, 2), 16);\r\n            c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n            rgb += ('00' + c).substr(c.length);\r\n        }\r\n        return rgb;\r\n    };\r\n\r\n    StateSetter(x, y, z) {\r\n        this.setState({refIDs: x}, () => {\r\n            this.setState({cIDs: y}, () => {\r\n                this.setState({cNames: z}, () => {\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    StateSetterPT(x, y, z) {\r\n        this.setState({ptIDs: x}, () => {\r\n            this.setState({pIDs: y}, () => {\r\n                this.setState({pNames: z}, () => {\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let dataClasses = [];\r\n        let dataPT = [];\r\n        getUserID().then(response => {\r\n            this.setState(\r\n                {User_ID: response.User_ID}, () => {\r\n\r\n                    // Gets the Class Name, ID, TimeCode and DayCode Based on the user's ID\r\n                    //\r\n                    // console.clear();\r\n                    getClassSchedule(this.state.User_ID).then(response => {\r\n                        this.setState({classSchedule: response}, () => {\r\n                            dataClasses = [...this.state.classSchedule];\r\n                            let ret = this.state.classSchedule.slice(0);\r\n                            let refID;\r\n\r\n                            (async () => {\r\n                                let x = this.state.refIDs;\r\n                                let y = this.state.cIDs;\r\n                                let z = this.state.cNames;\r\n                                ret.forEach((item) => {\r\n                                        if (item.TimeCode < 10) {\r\n                                            this.setState(\r\n                                                {refID: item.DayCode + '.0' + item.TimeCode});\r\n                                            refID = item.DayCode + '.0' + item.TimeCode;\r\n                                        } else {\r\n                                            this.setState(\r\n                                                {refID: item.DayCode + '.' + item.TimeCode});\r\n                                            refID = item.DayCode + '.' + item.TimeCode;\r\n                                        }\r\n                                        if (!x.includes(refID)) {\r\n                                            x.push(refID);\r\n                                            y.push(item.ClassID);\r\n                                            z.push(item.Name);\r\n                                            const node = document.getElementById(refID);\r\n                                            node.className = 'BusySlot';\r\n                                            // node.textContent = item.Name;\r\n                                            node.childNodes[0].textContent = item.Name;\r\n                                            if (z.includes(item.Name)) {\r\n                                                node.style.backgroundImage =\r\n                                                    'linear-gradient(to bottom right,'\r\n                                                    + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                                                    item.Name)] % 9] + ','\r\n                                                    + this.ColorLuminance(\r\n                                                    this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                                        item.Name)]) % 9], -0.5) + ')';\r\n                                            } else {\r\n                                                node.style.backgroundImage =\r\n                                                    'linear-gradient(to bottom right,'\r\n                                                    + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                                                    item.Name)] % 9] + ','\r\n                                                    + this.ColorLuminance(\r\n                                                    this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                                        item.Name)]) % 9], -0.5) + ')';\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                );\r\n                                await this.StateSetter(x, y, z);\r\n                            })();\r\n                        });\r\n                    });\r\n\r\n                    getPersonalSchedule(this.state.User_ID).then(response => {\r\n                        this.setState({personalSchedule: response}, () => {\r\n                            dataPT = [...this.state.personalSchedule];\r\n                            this.props.userSchedule(dataClasses, dataPT);\r\n                            let retPer = this.state.personalSchedule.slice(0);\r\n                            let refID;\r\n\r\n                            (async () => {\r\n                                let x = this.state.ptIDs;\r\n                                let y = this.state.pIDs;\r\n                                let z = this.state.pNames;\r\n                                retPer.forEach((item) => {\r\n                                        if (item.Time < 10) {\r\n                                            this.setState({refID: item.Day + '.0' + item.Time});\r\n                                            refID = item.Day + '.0' + item.Time;\r\n                                        } else {\r\n                                            this.setState({refID: item.Day + '.' + item.Time});\r\n                                            refID = item.Day + '.' + item.Time;\r\n                                        }\r\n                                        if (!x.includes(refID)) {\r\n                                            x.push(refID);\r\n                                            y.push(item.Coach_ID);\r\n                                            z.push(item.CoachName);\r\n                                            const node = document.getElementById(refID);\r\n                                            node.className = 'PTSlot';\r\n                                            node.childNodes[0].textContent = item.CoachName;\r\n                                            node.style.backgroundImage = 'radial-gradient( #4c4c4c,'\r\n                                                + this.ColorLuminance(\r\n                                                    '#4C4C4C', -0.7) + ')';\r\n                                        }\r\n                                    },\r\n                                );\r\n                                await this.StateSetterPT(x, y, z);\r\n                            })();\r\n                        });\r\n                    });\r\n\r\n                });\r\n        }).finally(() => this.props.toggleLoading());\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (\r\n            prevProps.DayCode !== this.props.DayCode\r\n            || prevProps.TimeCode !== this.props.TimeCode\r\n            || prevProps.flag !== this.props.flag\r\n        ) {\r\n\r\n            let refID;\r\n            if (this.props.TimeCode < 10) {\r\n                this.setState({refID: this.props.DayCode + '.0' + this.props.TimeCode});\r\n                refID = this.props.DayCode + '.0' + this.props.TimeCode;\r\n            } else {\r\n                this.setState({refID: this.props.DayCode + '.' + this.props.TimeCode});\r\n                refID = this.props.DayCode + '.' + this.props.TimeCode;\r\n            }\r\n\r\n            this.setState({flag: this.props.flag});\r\n            // Create a new array based on current state:\r\n            let x = this.state.refIDs.slice(0);\r\n            let y = this.state.cIDs.slice(0);\r\n            let z = this.state.cNames.slice(0);\r\n            let p = this.state.ptIDs.slice(0);\r\n\r\n            //Checks if the user wants to enroll or unenroll. Flag is true for enroll\r\n            // and false otherwise.\r\n            if (this.props.flag === true) {\r\n                if (this.props.invalid === true){\r\n                    Swal.fire(\r\n                        'Please select a user first!',\r\n                        '',\r\n                        'error',\r\n                    ).then();\r\n                }else {\r\n                    //Checks if there is not any personal training or class scehduled for\r\n                    // the user at that specific time\r\n                    if (!p.includes(refID) && !x.includes(refID)) {\r\n                        (async () => {\r\n\r\n                            //Copies the tables for the Class timetable entries, Class ID's and\r\n                            // Class names into temporary ones.\r\n                            x.push(refID);\r\n                            y.push(this.props.ClassID);\r\n                            z.push(this.props.Name);\r\n\r\n                            //waiting to copy all the tables before proceeding\r\n                            await this.StateSetter(x, y, z);\r\n\r\n                            //node is the div element containing the specified Class enrollment\r\n                            const node = document.getElementById(refID);\r\n\r\n                            //Sets that timetable entry as \"enrolled\"\r\n                            node.className = 'BusySlot';\r\n                            node.childNodes[0].textContent = this.props.Name;\r\n                            if (z.includes(this.props.Name)) {\r\n                                // node.style.backgroundColor =\r\n                                // this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(item.Name)]];\r\n                                node.style.backgroundImage = 'linear-gradient(to bottom right,'\r\n                                    + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                                        this.props.Name)] % 9] + ','\r\n                                    + this.ColorLuminance(\r\n                                        this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                            this.props.Name)]) % 9], -0.5) + ')';\r\n                            } else {\r\n                                // node.style.backgroundColor =\r\n                                // this.state.ClassColors[item.ClassID];\r\n                                node.style.backgroundImage = 'linear-gradient(to bottom right,'\r\n                                    + this.state.ClassColors[this.state.cIDs[this.state.cNames.indexOf(\r\n                                        this.props.Name)] % 9] + ','\r\n                                    + this.ColorLuminance(\r\n                                        this.state.ClassColors[(this.state.cIDs[this.state.cNames.indexOf(\r\n                                            this.props.Name)]) % 9], -0.5) + ')';\r\n                            }\r\n                            enrollUser(this.state.cIDs[this.state.refIDs.indexOf(refID)],\r\n                                this.state.User_ID).then();\r\n                        })();\r\n\r\n                        // })();\r\n                    } else {\r\n                        Swal.fire(\r\n                            'You have something else scheduled for that time',\r\n                            '',\r\n                            'error',\r\n                        ).then();\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                if (this.props.flag === false) {\r\n                    if (!p.includes(refID)) {\r\n                        if (x.includes(refID)) {\r\n                            if (this.props.ClassID\r\n                                === this.state.cIDs[this.state.refIDs.indexOf(refID)]) {\r\n                                // console.clear();\r\n                                (async () => {\r\n\r\n                                    //wait to unenroll first and then remove the entries from the\r\n                                    // arrays\r\n                                    await unenrollUser(\r\n                                        this.state.cIDs[this.state.refIDs.indexOf(refID)],\r\n                                        this.state.User_ID,\r\n                                    ).then();\r\n\r\n                                    //Copy of timetable Class entry array\r\n                                    const newList = this.state.refIDs.slice(0);\r\n                                    newList.splice(this.state.refIDs.indexOf(refID), 1);\r\n\r\n                                    //Copy of Class ID's array\r\n                                    const newList2 = this.state.cIDs.slice(0);\r\n                                    newList2.splice(this.state.refIDs.indexOf(refID), 1);\r\n\r\n                                    //Copy of Class's Names array\r\n                                    const newList3 = this.state.cNames.slice(0);\r\n                                    newList3.splice(this.state.refIDs.indexOf(refID), 1);\r\n\r\n                                    this.StateSetter(newList, newList2, newList3);\r\n                                    const node = document.getElementById(refID);\r\n                                    node.className = '';\r\n                                    node.childNodes[0].textContent = '';\r\n                                    node.style.backgroundImage = '';\r\n\r\n                                })();\r\n                            } else {\r\n                                Swal.fire(\r\n                                    'You are enrolled to another class at that time',\r\n                                    '',\r\n                                    'error',\r\n                                ).then();\r\n                            }\r\n                        } else {\r\n                            Swal.fire(\r\n                                'There is no class to unenroll from',\r\n                                '',\r\n                                'error',\r\n                            ).then();\r\n                        }\r\n                    } else {\r\n                        Swal.fire(\r\n                            'You should speak with your coach in order to cancel a Personal Training session',\r\n                            '',\r\n                            'error',\r\n                        ).then();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"timetable\">\r\n                        <div className=\"week-names\">\r\n                            <div>monday</div>\r\n                            <div>tuesday</div>\r\n                            <div>w/day</div>\r\n                            <div>thursday</div>\r\n                            <div>friday</div>\r\n                            <div>saturday</div>\r\n                            <div className=\"weekend\">sunday</div>\r\n                        </div>\r\n                        <div className=\"time-interval\">\r\n                            <div>8:00 - 09:00</div>\r\n                            <div>09:00 - 10:00</div>\r\n                            <div>10:00 - 11:00</div>\r\n                            <div>11:00 - 12:00</div>\r\n                            <div>12:00 - 13:00</div>\r\n                            <div>13:00 - 14:00</div>\r\n                            <div>14:00 - 15:00</div>\r\n                            <div>15:00 - 16:00</div>\r\n                            <div>16:00 - 17:00</div>\r\n                            <div>17:00 - 18:00</div>\r\n                            <div>18:00 - 19:00</div>\r\n                            <div>19:00 - 20:00</div>\r\n                        </div>\r\n                        <div className=\"content\" ref={this.myRef}>\r\n                            {[...Array(6).keys()].map(x => (x + 1.01).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div\r\n                                        key={index}\r\n                                        id={x}\r\n                                    >\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.02).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div\r\n                                        key={index}\r\n                                        id={x}\r\n                                    >\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.03).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div\r\n                                        key={index}\r\n                                        id={x}\r\n                                    >\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.04).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div\r\n                                        key={index}\r\n                                        id={x}\r\n                                    >\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.05).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div\r\n                                        key={index}\r\n                                        id={x}\r\n                                    >\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.06).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div\r\n                                        key={index}\r\n                                        id={x}\r\n                                    >\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.07).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div\r\n                                        key={index}\r\n                                        id={x}\r\n                                    >\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.08).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div\r\n                                        key={index}\r\n                                        id={x}\r\n                                    >\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.09).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div\r\n                                        key={index}\r\n                                        id={x}\r\n                                    >\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.10).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div\r\n                                        key={index}\r\n                                        id={x}\r\n                                    >\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.11).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div\r\n                                        key={index}\r\n                                        id={x}\r\n                                    >\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n\r\n                            <div className=\"weekend\"/>\r\n                            {[...Array(6).keys()].map(x => (x + 1.12).toFixed(2))\r\n                                .map((x, index) =>\r\n                                    <div\r\n                                        key={index}\r\n                                        id={x}\r\n                                    >\r\n                                        <p/>\r\n                                    </div>,\r\n                                )}\r\n                            <div className=\"weekend\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default EnrolledClassSchedule;","import React, {Component} from 'react';\r\nimport '../assets/styles/profile.css';\r\nimport '../assets/styles/timetable.css';\r\nimport SettingsProfile from '../common/SettingsProfile';\r\nimport ProfileInfo from '../common/ProfileInfo';\r\nimport BookClass from '../common/BookClass';\r\nimport Timetable\r\n    from '../common/EnrolledClassSchedule';\r\n// noinspection ES6CheckImport\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {isAuthenticated, loggedInVisit, updateProfileVisit} from '../../repository';\r\nimport {Modal} from \"reactstrap\";\r\n\r\nclass ProfileUser extends Component {\r\n    componentDidMount() {\r\n        loggedInVisit().then();\r\n        updateProfileVisit().then();\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ClassID: '',\r\n            DayCode: '',\r\n            TimeCode: '',\r\n            CoachID: '',\r\n            User_ID: '',\r\n            EnrollID: '',\r\n            flag: '',\r\n            classSchedule: [],\r\n            Name: '',\r\n            dataPT: [],\r\n            dataClasses: [],\r\n            loadingInfo: 2,\r\n            invalid: ''\r\n        };\r\n        this.handleSelections = this.handleSelections.bind(this);\r\n        this.toggleLoading = this.toggleLoading.bind(this);\r\n        this.handlePTClass = this.handlePTClass.bind(this);\r\n    }\r\n\r\n    handleSelections = (DayCode, TimeCode, flag, ClassID, Name, invalid) => {\r\n        this.setState({\r\n            DayCode,\r\n            TimeCode,\r\n            flag,\r\n            ClassID,\r\n            Name,\r\n            invalid\r\n        }, () => {\r\n\r\n        });\r\n\r\n    };\r\n\r\n    toggleLoading = () => {\r\n        this.setState({loadingInfo: this.state.loadingInfo - 1});\r\n    };\r\n    handlePTClass = (dataClasses, dataPT) => {\r\n        this.setState({dataPT, dataClasses}, () => {\r\n            // console.clear();\r\n            console.log(\"The tables have been retrieved!\");\r\n            console.log(this.state.dataPT);\r\n            console.log(this.state.dataClasses);\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div id='profile' className=\"main-container container-fluid\">\r\n                {(navigator.userAgent.match(/Android/i)) &&\r\n                <NavLink to=\"/\"\r\n                         className={'logout btn btn-danger text-uppercase d-flex justify-content-center'}\r\n                         onClick={this.onLogOut}\r\n                >\r\n                    Logout <i className=\"fas fa-sign-out-alt\"/>\r\n                </NavLink>\r\n                }\r\n                {(this.props.userLevel === 'user') ? '' :\r\n                    <Redirect to=\"/\"/>}\r\n\r\n                <div className=\"container-fluid mb-4\">\r\n                    <div className=\"row \">\r\n                        <SettingsProfile dataPT={this.state.dataPT} classes={this.state.dataClasses}\r\n                                         userLevel={this.props.userLevel}/>\r\n                        <ProfileInfo loadingInfo={this.state.loadingInfo}\r\n                                     toggleLoading={this.toggleLoading}\r\n                        />\r\n                        <BookClass getSelections={this.handleSelections}/>\r\n                    </div>\r\n                </div>\r\n                <Timetable DayCode={this.state.DayCode}\r\n                           TimeCode={this.state.TimeCode}\r\n                           flag={this.state.flag}\r\n                           ClassID={this.state.ClassID}\r\n                           Name={this.state.Name}\r\n                           invalid={this.state.invalid}\r\n                           userSchedule={this.handlePTClass}\r\n                           toggleLoading={this.toggleLoading}\r\n                />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileUser;","import React, {Component}             from 'react';\r\nimport '../assets/styles/classes.css';\r\nimport {AnimatedOnScroll}             from 'react-animated-css-onscroll';\r\nimport {updateClassesVisit, validURL} from '../../repository';\r\n\r\nclass Classes extends Component {\r\n\r\n  componentDidMount() {\r\n    updateClassesVisit().then();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <section className = \"classes-section\" id = \"classes\">\r\n          <div className = \"container\">\r\n            <div className = \"page-title\">\r\n              <h1>Our Classes</h1>\r\n            </div>\r\n            <div className = \"row\">\r\n              { this.props.stylesheetData['Class']['classes'].map((c, i) => {\r\n                return (\r\n                    <div key = { i } className = \"col-md-4 col-sm-6\">\r\n                      <div className = \"single-classes\">\r\n                        <div className = \"classes-img\">\r\n                          <img src = { validURL(c.src)\r\n                              ? c.src\r\n                              : process.env.PUBLIC_URL + c.src }\r\n                               className = \"rounded-corners\"\r\n                               alt = \"\"\r\n                          />\r\n                        </div>\r\n                        <div className = \"classes-text\">\r\n                          <h5>{ c.title }</h5>\r\n                          <p>{ c.text }</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                );\r\n              }) }\r\n            </div>\r\n          </div>\r\n          <AnimatedOnScroll animationIn = \"zoomInUp\">\r\n            <div className = 'container'>\r\n              <div className = 'full-width-image'>\r\n                <img src = { validURL(\r\n                    this.props.stylesheetData['Class']['timetable'].src)\r\n                    ? this.props.stylesheetData['Class']['timetable'].src\r\n                    : process.env.PUBLIC_URL\r\n                      + this.props.stylesheetData['Class']['timetable'].src }\r\n                     alt = \"timetable\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </AnimatedOnScroll>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Classes;","import { useEffect } from \"react\";\r\n// noinspection ES6CheckImport\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = () => {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    // noinspection JSConstructorReturnsPrimitive\r\n    return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React               from 'react';\r\n// noinspection ES6CheckImport\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isAuthenticated } from '../repository';\r\n\r\nconst PrivateRoute = ({ component: Component, userLevel: UserLevel, ...rest }) => (\r\n    <Route\r\n        { ...rest }\r\n        render = { props =>\r\n            isAuthenticated() ? (\r\n                <Component userLevel = { UserLevel } { ...props } />\r\n            ) : (\r\n                <Redirect to = { '/' } />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React, {Component} from 'react';\r\nimport '../assets/styles/forgotPassword.css'\r\nimport {newPassword} from \"../../repository\";\r\n\r\nclass forgotPassword extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            email:'',\r\n            username:'',\r\n            messageFromServer:'',\r\n            showError:false,\r\n            sendingEmail: false,\r\n            confirming: true,\r\n        };\r\n        this.onMailChange = this.onMailChange.bind(this);\r\n        this.sendEmailPass = this.sendEmailPass.bind(this);\r\n\r\n    }\r\n\r\n    onMailChange = (e) =>{\r\n        this.setState({email: e.target.value});\r\n    };\r\n\r\n    sendEmailPass=() =>{\r\n      if(this.state.email ===''){\r\n          this.setState({\r\n              messageFromServer:'',\r\n          });\r\n      }else{\r\n            const input ={\r\n                email: this.state.email,\r\n            };\r\n            newPassword(input)\r\n                .then(()=>{\r\n                    alert(\"done.\");\r\n                })\r\n                .catch(error =>{\r\n                    alert(\"not done.\"+error);\r\n                })\r\n                // .then(response =>{\r\n                //     if(response.data ==='email not in db'){\r\n                //         this.setState({\r\n                //             showError: true,\r\n                //             messageFromServer:'',\r\n                //         });\r\n                //     }else if(response.data ==='recovery email sent'){\r\n                //         this.setState({\r\n                //             showError: false,\r\n                //             messageFromServer: 'recovery email sent',\r\n                //         });\r\n                //     }\r\n                // })\r\n                // .catch(error=>{\r\n                // });\r\n      }\r\n    };\r\n    render() {\r\n        return(\r\n            <div id={\"ForgotPassword\"}>\r\n                <div className={\"PasswordContainer\"}>\r\n                    <div className={\"PageHeader\"}>\r\n                        <h1>Forgot your password?</h1>\r\n                    </div>\r\n                    <p>Enter your email.</p>\r\n                    <form className={\"passwordForm\"}>\r\n                        <input type={\"email\"} className={\"emailText\"} onChange={this.onMailChange}/>\r\n                        <input type={\"submit\"} className={\"emailSubmit\"} value={\"Submit\"} onClick={this.sendEmailPass}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default forgotPassword;\r\n","import React, {Component} from \"react\";\r\nimport '../assets/styles/VerifyEmail.css';\r\nimport {lastVerify} from \"../../repository\";\r\n\r\nclass VerifyEmail extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            // token:'',\r\n            confirm:false,\r\n        };\r\n    }\r\n\r\n   componentDidMount() {\r\n       const { id } = this.props.match.params;\r\n       const data = {\r\n           secret: id,\r\n       };\r\n       lastVerify(data)\r\n           .then(()=>{\r\n               // alert(\"Account is verified! Please Proceed to Login!.\");\r\n               this.setState({confirm: true});\r\n           })\r\n   }\r\n\r\n    render() {\r\n        return (\r\n            <div id={\"VerifyEmail\"}>\r\n                <div className={\"PasswordContainer\"}>\r\n                    <div className={\"PageHeader\"}>\r\n                        <h1>Verify Email</h1>\r\n                    </div>\r\n                    <div>\r\n                        {this.state.confirm ?(\r\n                            <div>\r\n                                <h1>Your account was successfully verified!.</h1>\r\n                            </div>\r\n                        ):(\r\n                            <h1>There was an error!</h1>\r\n                        )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default VerifyEmail;\r\n","import React, {Component} from \"react\";\r\n\r\n// export const ResetPassword = ({ match }) => ( <div> <h3>ID: {match.params.id}</h3> </div> );\r\n\r\nimport '../assets/styles/resetPassword.css';\r\nimport {resetPass} from \"../../repository\";\r\n\r\nclass ResetPassword extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            username:'',\r\n            password:'',\r\n            confirmPassword:'',\r\n            confirm:false,\r\n            isLoading: false,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange =(e)=>{\r\n        this.setState({[e.target.name]: e.target.value})\r\n    };\r\n\r\n    getID =()=>{\r\n        const { id } = this.props.match.params;\r\n        this.setState({confirm: false});\r\n        if(this.state.password !== this.state.confirmPassword){\r\n            alert(\"Passwords don't match\");\r\n        }\r\n        const data ={\r\n            token: id,\r\n            username:this.state.username,\r\n            password: this.state.password,\r\n        };\r\n        //ResetPassword is working, but i need to fix the submit button\r\n        //so it can goes to home. However, it must shows if it was success or not.\r\n        //Last, users creds are at URL not sure why.\r\n        //Today, i need to fix Verification!!!.\r\n        this.setState({isLoading: true});\r\n        resetPass(data)\r\n            .then(() => {\r\n                alert(\"Error.\")\r\n            })\r\n            // .then((response) => {\r\n            //         if(response.data ==='Success reset.'){\r\n            //             alert(\"Password changed successfully. Proceed to log in. \")\r\n            //         }else if(response.data ==='Failed to reset.'){\r\n            //             alert(\"There was an error! Please check your credentials.\")\r\n            //         }\r\n            // })\r\n            // .catch((error)=>{\r\n            // })\r\n    };\r\n    render() {\r\n        return(\r\n            <div id={\"ResetPassword\"}>\r\n                <div className={\"newPassword\"}>\r\n                    <div className={\"newHeading\"}>\r\n                        <h1>Reset Your Password</h1>\r\n                    </div>\r\n                    <p>Please fill the boxes below to reset your <i>password</i>.</p>\r\n                    <form className={\"newPassword\"}>\r\n                        <input type={\"text\"} placeholder={\"Username\"} name={\"username\"} onChange={this.handleChange} required/>\r\n                        <input type={\"password\"} placeholder={\"New Password\"} name={\"password\"} onChange={this.handleChange} required/>\r\n                        <input type={\"password\"} placeholder={\"Confirm Password\"} name={\"confirmPassword\"} onChange={this.handleChange} required/>\r\n                        <input type={\"submit\"} value={\"Submit\"} onClick={this.getID}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ResetPassword;","import React, {Component} from 'react';\r\nimport Chart              from 'chart.js';\r\n\r\nclass LineChart extends Component {\r\n  _isMounted = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lineChart        : {\r\n        data  : [],\r\n        labels: 10,\r\n      },\r\n      percentChange    : 0,\r\n      percentComparison: 'Up',\r\n      lastNumber       : '0',\r\n    };\r\n\r\n    this.getChartData = this.getChartData.bind(this);\r\n    this.createChart = this.createChart.bind(this);\r\n    this.updateChart = this.updateChart.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    const self = this;\r\n    if (this._isMounted) {\r\n      self.getChartData();\r\n      self.createChart();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n    clearInterval(this.state.newNumber);\r\n  }\r\n\r\n  getChartData() {\r\n    let randomData = [];\r\n    for (let x = 0; x < this.state.lineChart.labels; x++) {\r\n      this.setState({\r\n        lineChart: {\r\n          data: this.state.lineChart.data.push(0),\r\n        },\r\n      });\r\n      randomData.push(0);\r\n    }\r\n\r\n    this.setState({\r\n      lineChart: {\r\n        data: randomData,\r\n      },\r\n    });\r\n  }\r\n\r\n  createChart() {\r\n    const ctx = document.getElementById(this.props.id);\r\n    ctx.height = 125;\r\n    const data = {\r\n      labels  : [...Array(this.state.lineChart.labels).keys()],\r\n      datasets: [\r\n        {\r\n          backgroundColor : 'rgba(255,255,255,0.5)',\r\n          strokeColor     : 'rgba(255,255,255,1)',\r\n          pointColor      : 'rgba(255,255,255,1)',\r\n          borderColor     : 'rgba(255,255,255,1)',\r\n          pointStrokeColor: '#FFFFFF',\r\n          data            : this.state.lineChart.data,\r\n        },\r\n      ],\r\n    };\r\n\r\n    Chart.defaults.LineWithLine = Chart.defaults.line;\r\n    Chart.controllers.LineWithLine = Chart.controllers.line.extend({\r\n      draw: function(ease) {\r\n        // noinspection JSPotentiallyInvalidConstructorUsage\r\n        Chart.controllers.line.prototype.draw.call(this, ease);\r\n\r\n        if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\r\n          let activePoint = this.chart.tooltip._active[0],\r\n              ctx         = this.chart.ctx,\r\n              x           = activePoint.tooltipPosition().x,\r\n              topY        = this.chart.legend.bottom,\r\n              bottomY     = this.chart.chartArea.bottom;\r\n\r\n          // draw line\r\n          ctx.save();\r\n          ctx.beginPath();\r\n          ctx.moveTo(x, topY);\r\n          ctx.lineTo(x, bottomY);\r\n          ctx.lineWidth = 2;\r\n          ctx.strokeStyle = '#FFFFFF';\r\n          ctx.stroke();\r\n          ctx.restore();\r\n        }\r\n      },\r\n    });\r\n\r\n    const myLineChart = new Chart(ctx, {\r\n      type               : 'LineWithLine',\r\n      responsive         : true,\r\n      maintainAspectRatio: false,\r\n      data               : data,\r\n      options            : {\r\n        responsive: true,\r\n        legend    : {\r\n          display: false,\r\n        },\r\n        tooltips  : {\r\n          enabled          : true,\r\n          intersect        : false,\r\n          mode             : 'nearest',\r\n          titleFontSize    : 0,\r\n          titleSpacing     : 0,\r\n          titleMarginBottom: 0,\r\n          displayColors    : false,\r\n        },\r\n        elements  : {point: {radius: 0}},\r\n        scales    : {\r\n          xAxes: [\r\n            {\r\n              display: false,\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              display: false,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n\r\n    const self = this;\r\n    this.setState({\r\n      newNumber: setInterval(function() {\r\n        self.updateChart(myLineChart).then();\r\n      }, this.props.chartSpeed),\r\n    });\r\n  }\r\n\r\n  async updateChart(value) {\r\n    if (!this._isMounted) {\r\n      return;\r\n    }\r\n    let number = await this.props.getData();\r\n    value.data.datasets[0].data.push(number);\r\n    value.data.datasets[0].data.shift(); // Remove first value\r\n    let changeOne = value.data.datasets[0].data[value.data.datasets[0].data.length\r\n                                                - 2];\r\n    let changeTwo = value.data.datasets[0].data[value.data.datasets[0].data.length\r\n                                                - 1];\r\n\r\n    if (changeOne > changeTwo) {\r\n      this.setState({percentComparsion: 'Down'});\r\n    } else {\r\n      this.setState({percentComparsion: 'Up'});\r\n    }\r\n\r\n    let changeNumber = changeOne === changeTwo ? 0 : !changeOne\r\n        ? 100\r\n        : !changeTwo ? -100 : (changeOne / changeTwo) * 10;\r\n    this.setState({\r\n      percentChange: changeNumber.toFixed(2),\r\n      lastNumber   : (\r\n          value.data.datasets[0].data[value.data.datasets[0].data.length - 1]),\r\n    });\r\n    value.update();\r\n  }\r\n\r\n  render() {\r\n    const divStyle = {\r\n      background: this.props.bgColor,\r\n    };\r\n    return (\r\n        <div className = \"col-md-3\">\r\n          <div className = \"line__chart\" style = { divStyle }>\r\n            <div className = \"line__chart-header\">\r\n              <strong>{ this.props.title }</strong>\r\n            </div>\r\n            <div className = \"line__chart-data\">{ this.state.lastNumber }\r\n              <span>{ this.state.percentChange }%</span>\r\n              <span className = { `arrow ${ this.state.percentComparsion }` } />\r\n            </div>\r\n            <canvas id = { this.props.id } width = \"400\" height = \"400\" />\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LineChart;","import React, {Component} from 'react';\r\nimport Chart              from 'chart.js';\r\n\r\nclass PieChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // noinspection JSUnresolvedVariable\r\n    this.state = {\r\n      myChart      : null,\r\n      animationTime: this.props.timeMS || 1000,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createChart();\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.data !== this.props.data) {\r\n      this.state.myChart.destroy();\r\n      this.createChart();\r\n    }\r\n  }\r\n\r\n  createChart() {\r\n    const colors = [\r\n      '#4BC0C0',\r\n      '#FF6384',\r\n      '#FFCD56',\r\n      '#3FC62E',\r\n      '#E55AFF',\r\n      '#CB843F',\r\n      '#F583FF',\r\n      '#49FF60',\r\n      '#4CC6BF',\r\n      '#F3F6FF',\r\n    ];\r\n    const hoverColors = [\r\n      '#287FC0',\r\n      '#FF001C',\r\n      '#F6EC04',\r\n      '#17920F',\r\n      '#9E00FF',\r\n      '#CB5F0B',\r\n      '#EA1DFF',\r\n      '#12D021',\r\n      '#0D9DB4',\r\n      '#343438',\r\n    ];\r\n    let ctx = document.getElementById(this.props.id);\r\n    let data = {\r\n      labels  : this.props.labels,\r\n      datasets: [\r\n        {\r\n          data                : this.props.data,\r\n          backgroundColor     : colors,\r\n          hoverBackgroundColor: hoverColors,\r\n          borderColor         : '#252830',\r\n        },\r\n      ],\r\n    };\r\n    const myChart = new Chart(ctx, {\r\n      type   : 'doughnut',\r\n      data   : data,\r\n      options: {\r\n        cutoutPercentage: 80,\r\n        legend          : {\r\n          display  : true,\r\n          align    : 'center',\r\n          fullWidth: true,\r\n        },\r\n        tooltips        : {\r\n          enabled    : true,\r\n          borderColor: 'white',\r\n        },\r\n        animation       : {\r\n          animateScale: true,\r\n          duration    : this.state.animationTime,\r\n        },\r\n        responsive      : true,\r\n      },\r\n    });\r\n\r\n    this.setState({myChart});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = \"col-md-4\">\r\n          <div className = \"pie__chart\">\r\n            <canvas id = { this.props.id }\r\n                    width = \"400\"\r\n                    height = \"400\"\r\n            />\r\n          </div>\r\n          <div className = \"text-center\">\r\n            <strong>{ this.props.title }</strong>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PieChart;","import React                      from 'react';\r\nimport {ValidatorForm}            from 'react-material-ui-form-validator';\r\nimport TextField                  from '@material-ui/core/TextField';\r\nimport Radio                      from '@material-ui/core/Radio';\r\nimport RadioGroup                 from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel           from '@material-ui/core/FormControlLabel';\r\nimport FormControl                from '@material-ui/core/FormControl';\r\nimport Recaptcha                  from 'react-recaptcha';\r\nimport Swal                       from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport '../assets/styles/SignInUp.css';\r\nimport {insertAdmin, insertCoach} from '../../repository';\r\n\r\nclass CreateStaffMember extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formData  : {\r\n        fname           : '',\r\n        lname           : '',\r\n        username        : '',\r\n        email           : '',\r\n        password        : '',\r\n        confirm_password: '',\r\n        bdate           : '',\r\n        gender          : '',\r\n        age             : '',\r\n      },\r\n      isVerified: false,\r\n      submitted : false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    this.calcDate = this.calcDate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    // noinspection JSUnresolvedFunction\r\n    ValidatorForm.addValidationRule('isPasswordMatch', value => {\r\n      const {formData} = this.state;\r\n      return value === formData.password;\r\n    });\r\n  }\r\n\r\n  handleChange = event => {\r\n    const {formData} = this.state;\r\n    formData[event.target.name] = event.target.value;\r\n    this.setState({formData});\r\n\r\n    if (event.target.name === 'bdate') {\r\n      this.calcDate(event);\r\n    }\r\n\r\n    if (\r\n        event.target.name === 'password' &&\r\n        !event.target.value.match(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/)\r\n    ) {\r\n      event.target.setCustomValidity(\r\n          'Enter a combination of at least 8 numbers, lower and uppercase letters.',\r\n      );\r\n    } else if (\r\n        event.target.name === 'confirm_password' &&\r\n        event.target.value !== this.state.formData.password\r\n    ) {\r\n      event.target.setCustomValidity('Passwords don\\'t match.');\r\n    } else {\r\n      event.target.setCustomValidity('');\r\n    }\r\n  };\r\n\r\n  verifyCallback = response => {\r\n    if (response) {\r\n      this.setState({isVerified: true});\r\n    }\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n        !this.state.formData.fname ||\r\n        !this.state.formData.lname ||\r\n        !this.state.formData.username ||\r\n        !this.state.formData.bdate ||\r\n        !this.state.formData.gender ||\r\n        !this.state.formData.email.match(\r\n            /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\r\n        ) ||\r\n        !this.state.formData.password.match(\r\n            /(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}/,\r\n        ) ||\r\n        this.state.formData.confirm_password !== this.state.formData.password\r\n    ) {\r\n      return;\r\n    }\r\n    if (!this.state.isVerified) {\r\n      Swal.fire(\r\n          'Please verify that you are not a robot 🤖!!!',\r\n          '',\r\n          'error',\r\n      ).then();\r\n      return;\r\n    }\r\n\r\n    const Crypto = require('cryptr');\r\n    const cryptr = new Crypto('ffn_private_key_!!!!');\r\n\r\n    const encryptedString = cryptr.encrypt(this.state.formData.password);\r\n\r\n    // Create output query\r\n    const data = {\r\n      username: this.state.formData.username,\r\n      password: encryptedString,\r\n      fname   : this.state.formData.fname,\r\n      lname   : this.state.formData.lname,\r\n      email   : this.state.formData.email,\r\n      age     : this.state.formData.age,\r\n      gender  : this.state.formData.gender === 'male' ? 1 : 2,\r\n      level   : this.state.formData.level,\r\n      bDate   : this.state.formData.bdate,\r\n    };\r\n    if (this.props.staffType === 'coach') {\r\n      insertCoach(data).then(() => {\r\n        Swal.fire(\r\n            'Coach Created successfully',\r\n            '',\r\n            'success',\r\n        ).then(() => {\r\n          window.location.replace('/');\r\n        });\r\n      }).catch(() => Swal.fire(\r\n          'Something went wrong',\r\n          'Please try again...',\r\n          'error',\r\n      ));\r\n    } else if (this.props.staffType === 'admin') {\r\n      insertAdmin(data).then(() => {\r\n        Swal.fire(\r\n            'Admin Created successfully',\r\n            '',\r\n            'success',\r\n        ).then(() => {\r\n          window.location.replace('/');\r\n        });\r\n      }).catch(() => Swal.fire(\r\n          'Something went wrong',\r\n          'Please try again...',\r\n          'error',\r\n      ));\r\n    }\r\n  };\r\n\r\n  calcDate = (dDate) => {\r\n    let thenD = dDate.target.value;\r\n    let str = thenD.split('-');\r\n    let now = new Date();\r\n    let ageDif = now.getFullYear() - str[0];\r\n\r\n    const {formData} = this.state;\r\n    formData.age = ageDif;\r\n    this.setState({formData});\r\n  };\r\n\r\n  render() {\r\n    // noinspection JSUnresolvedVariable\r\n    return (\r\n        <form id = \"signup\"\r\n              onSubmit = { this.handleSubmit }\r\n              autoComplete = \"off\"\r\n        >\r\n          <input\r\n              placeholder = \"First Name\"\r\n              name = \"fname\"\r\n              type = \"text\"\r\n              value = { this.state.formData.fname }\r\n              required\r\n              onChange = { this.handleChange }\r\n              style = { {marginTop: 0} }\r\n          />\r\n          <input\r\n              placeholder = \"Last Name\"\r\n              name = \"lname\"\r\n              type = \"text\"\r\n              value = { this.state.formData.lname }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Email Address\"\r\n              name = \"email\"\r\n              type = \"email\"\r\n              value = { this.state.formData.email }\r\n              onChange = { this.handleChange }\r\n              pattern = \"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n              required\r\n          />\r\n          <input\r\n              placeholder = \"Username\"\r\n              name = \"username\"\r\n              type = \"text\"\r\n              value = { this.state.formData.username }\r\n              required\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Password\"\r\n              name = \"password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.password }\r\n              required\r\n              pattern = \"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <input\r\n              placeholder = \"Confirm Password\"\r\n              name = \"confirm_password\"\r\n              type = \"password\"\r\n              value = { this.state.formData.confirm_password }\r\n              required\r\n              pattern = \"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n              onChange = { this.handleChange }\r\n          />\r\n          <TextField\r\n              placeholder = \"Birthday\"\r\n              name = \"bdate\"\r\n              type = \"date\"\r\n              value = { this.state.formData.bday }\r\n              InputLabelProps = { {\r\n                shrink: true,\r\n              } }\r\n              onChange = { this.handleChange }\r\n              required\r\n          />\r\n          <br />\r\n          <FormControl component = \"fieldset\">\r\n            {/* <FormLabel component=\"legend\">Gender</FormLabel> */ }\r\n            <RadioGroup\r\n                aria-label = \"gender\"\r\n                name = \"gender\"\r\n                value = { this.state.formData.gender }\r\n                onChange = { this.handleChange }\r\n                className = { 'gender-radio' }\r\n            >\r\n              <FormControlLabel\r\n                  value = \"male\"\r\n                  control = { <Radio required /> }\r\n                  label = \"Male\"\r\n              />\r\n              <FormControlLabel\r\n                  value = \"female\"\r\n                  control = { <Radio required /> }\r\n                  label = \"Female\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Recaptcha\r\n              elementID = { 'g-recaptcha' }\r\n              sitekey = \"6Lf0od8UAAAAAFoog9iFIpVd8rcPxBwHpUKpnCua\"\r\n              size = \"normal\"\r\n              render = \"explicit\"\r\n              theme = \"dark\"\r\n             \r\n              verifyCallback = { this.verifyCallback }\r\n          />\r\n          <button style = { {marginBottom: '15px'} }>Sign up</button>\r\n          <br />\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateStaffMember;","import React, {Component} from 'react';\r\nimport Swal               from 'sweetalert2';\r\nimport '@sweetalert2/theme-dark/dark.css';\r\nimport {\r\n  deleteAdmin,\r\n  getAdmins,\r\n  getCoaches,\r\n  deleteCoach,\r\n  logOut,\r\n  countPT,\r\n  countClasses,\r\n} from '../../repository';\r\nimport adminAvatar\r\n                          from '../assets/img/logos/fitnessFactoryLogo.png';\r\nimport ToggleModal        from './ToggleModal';\r\nimport CreateStaffMember  from './CreateStaffMember';\r\n\r\nclass StaffList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      coaches  : [],\r\n      admins   : [],\r\n      staffType: '',\r\n      modal    : false,\r\n      countTotal  : 0,\r\n    };\r\n    this.DeleteCoach = this.DeleteCoach.bind(this);\r\n    this.DeleteAdmin = this.DeleteAdmin.bind(this);\r\n    this.createAdmin = this.createAdmin.bind(this);\r\n    this.createCoach = this.createCoach.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // TODO get image when done\r\n    getCoaches().then(response => {\r\n      this.setState({\r\n        coaches: response.map(c => {\r\n          Object.defineProperty(c, 'Name',\r\n              Object.getOwnPropertyDescriptor(c, 'CoachName'));\r\n          delete c['CoachName'];\r\n          return c;\r\n        }),\r\n      });\r\n    });\r\n    getAdmins().then(response => this.setState({admins: response}));\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({modal: !this.state.modal});\r\n  };\r\n\r\n  DeleteAdmin(e) {\r\n    // noinspection JSUnresolvedVariable\r\n    const AdminId = e.target.className.split(' ')[3] === 'admin'\r\n        ? this.state.admins[e.target.className.split(' ')[2]].AccountID\r\n        : this.state.coaches[e.target.className.split(' ')[2]].AccountID;\r\n\r\n    Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        deleteAdmin(AdminId).then(() => {\r\n          Swal.fire(\r\n              'Account deleted successfully',\r\n              '',\r\n              'success',\r\n          ).then(() => {\r\n            logOut();\r\n            window.location.replace('/');\r\n          });\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Account is safe :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n  }\r\n\r\n  DeleteCoach(e) {\r\n\r\n    // noinspection JSUnresolvedVariable\r\n    const CoachID = e.target.className.split(' ')[3] === 'admin'\r\n        ? this.state.admins[e.target.className.split(' ')[2]].AccountID\r\n        : this.state.coaches[e.target.className.split(' ')[2]].AccountID;\r\n\r\n    Swal.fire({\r\n      title             : 'Are you sure?',\r\n      text              : 'You won\\'t be able to revert this!',\r\n      icon              : 'warning',\r\n      showCancelButton  : true,\r\n      confirmButtonColor: '#3085D6',\r\n      cancelButtonColor : '#DD3333',\r\n      confirmButtonText : 'Yes, delete it!',\r\n    }).then((result) => {\r\n      countPT(CoachID).then(response => {\r\n        this.setState(\r\n            {countTotal : response.countTotal});\r\n      });\r\n\r\n      countClasses(CoachID).then(response => {\r\n        this.setState(\r\n            {countTotal : this.state.countTotal+response.countTotal});\r\n      });\r\n      if (result.value && this.state.countTotal === 0 ) {\r\n        deleteCoach(CoachID).then(() => {\r\n          Swal.fire(\r\n              'Account deleted successfully',\r\n              '',\r\n              'success',\r\n          ).then(() => {\r\n            logOut();\r\n            window.location.replace('/');\r\n          });\r\n        }).catch(() => Swal.fire(\r\n            'Something went wrong',\r\n            'Please try again...',\r\n            'error',\r\n        ));\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'Your Account is safe :)',\r\n            'error',\r\n        ).then();\r\n      }else if(this.state.countTotal !== 0){\r\n        Swal.fire(\r\n            'Cancelled',\r\n            'You must go and change the classes and the personal training :)',\r\n            'error',\r\n        ).then();\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  createAdmin() {\r\n    this.setState({staffType: 'admin'});\r\n    this.toggleModal();\r\n  }\r\n\r\n  createCoach() {\r\n    this.setState({staffType: 'coach'});\r\n    this.toggleModal();\r\n  }\r\n\r\n  render() {\r\n    // noinspection DuplicatedCode\r\n    return (\r\n        <div className = \"row staff\">\r\n          <div className = \"col-md-6\">\r\n            <div className = \"box\">\r\n              <h3>Admins:</h3>\r\n              <button className = { 'add-admin btn btn-primary btn-xl text-uppercase' }\r\n                      onClick = { this.createAdmin }\r\n              >\r\n                Create New Admin\r\n              </button>\r\n              { this.state.admins.map((admin, index) => {\r\n                const timestamp = admin.Bdate.split(/[T.]+/)[0];\r\n                // noinspection JSUnresolvedVariable\r\n                const gender = admin.Gender === 1 ? 'Male' : 'Female';\r\n                return (\r\n                    <div className = \"admin\" key = { index }>\r\n                      <div className = \"img\">\r\n                        <img className = \"img-responsive\"\r\n                             src = { adminAvatar }\r\n                             alt = \"admin\"\r\n                        />\r\n                      </div>\r\n                      <div className = \"info\">\r\n                        <h3>{ admin.Name } { admin.Surname }</h3>\r\n                        <p>\r\n                          Username: { admin.username }<br />\r\n                          Email: { admin.Email }<br />\r\n                          BDate: { timestamp }<br />\r\n                          Gender: { gender }\r\n                        </p>\r\n                      </div>\r\n                      { admin.username !== 'its.giff' ?\r\n                          <button className = \"delete-admin\"\r\n                          >\r\n                            <i className = { 'fa fa-trash ' + index\r\n                                             + ' admin' }\r\n                               onClick = { this.DeleteAdmin }\r\n                            />\r\n                          </button>\r\n                          :\r\n                          <button className = \"delete-admin\"\r\n                                  style = { {'pointerEvents': 'none'} }\r\n                                  disabled = { true }\r\n                          >\r\n                            <i className = { 'fa fa-trash slash' + index\r\n                                             + ' admin' }\r\n                            />\r\n                          </button>\r\n                      }\r\n                    </div>\r\n                );\r\n              }) }\r\n            </div>\r\n          </div>\r\n          <div className = \"col-md-6\">\r\n            <div className = \"box\">\r\n              <h3>Coaches:</h3>\r\n              <button className = { 'add-admin btn btn-primary btn-xl text-uppercase' }\r\n                      onClick = { this.createCoach }\r\n              >\r\n                Create New Coach\r\n              </button>\r\n              { this.state.coaches.map((coach, index) => {\r\n                const timestamp = coach.Bdate.split(/[T.]+/)[0];\r\n                // noinspection JSUnresolvedVariable\r\n                const gender = coach.Gender === 1 ? 'Male' : 'Female';\r\n                return (\r\n                    <div className = \"admin\" key = { index }>\r\n                      <div className = \"img\">\r\n                        <img className = \"img-responsive\"\r\n                             src = { adminAvatar }\r\n                             alt = \"admin\"\r\n                        />\r\n                      </div>\r\n                      <div className = \"info\">\r\n                        <h3>{ coach.Name } { coach.Surname }</h3>\r\n                        <p>\r\n                          Username: { coach.username }<br />\r\n                          Email: { coach.Email }<br />\r\n                          BDate: { timestamp }<br />\r\n                          Gender: { gender }\r\n                        </p>\r\n                      </div>\r\n                      { (coach.username !== ('headcoach01')) ?\r\n                          <button className = \"delete-admin\"\r\n                          >\r\n                            <i className = { 'fa fa-trash ' + index\r\n                                             + ' coach' }\r\n                               onClick = { this.DeleteCoach }\r\n                            />\r\n                          </button>\r\n                          :\r\n                          <button className = \"delete-admin\"\r\n                                  style = { {'pointerEvents': 'none'} }\r\n                                  disabled = { true }\r\n                          >\r\n                            <i className = { 'fa fa-trash slash' + index\r\n                                             + ' coach' }\r\n                            />\r\n                          </button>\r\n                      }\r\n                    </div>\r\n                );\r\n              }) }\r\n            </div>\r\n          </div>\r\n\r\n          <ToggleModal\r\n              modal = { this.state.modal }\r\n              toggle = { this.toggleModal }\r\n              modalSize = { 'md' }\r\n              modalHeader = { 'Create New Staff' }\r\n              modalBody = {\r\n                <CreateStaffMember staffType = { this.state.staffType } /> }\r\n          />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StaffList;","import React, {Component} from 'react';\r\n\r\nclass Leader extends Component {\r\n  render() {\r\n    return (\r\n        <div className = \"leaderboard__result\">\r\n          { this.props.title } - { this.props.number }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Leader;","import React, {Component} from 'react';\r\nimport Leader             from './Leader';\r\n\r\nclass LeaderBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sortOrder: this.props.sortAsc,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      sortOrder: this.props.sortAsc,\r\n    });\r\n  }\r\n\r\n  numberWithCommas(num) {\r\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  }\r\n\r\n  render() {\r\n    let self = this;\r\n    let dataSort = this.props.dataSort;\r\n    let dataTitle = this.props.dataTitle;\r\n    let sortAsc = this.props.sortAsc;\r\n    let numberComma = this.props.numberComma;\r\n    let sortCustom = this.props.data.sort(function(a, b) {\r\n      if (sortAsc) {\r\n        return parseFloat(b[dataSort]) - parseFloat(a[dataSort]);\r\n      } else {\r\n        return parseFloat(a[dataSort]) - parseFloat(b[dataSort]);\r\n      }\r\n    });\r\n    const leaders = sortCustom.map(function(leader, i) {\r\n      let number = leader[dataSort];\r\n      let title = leader[dataTitle];\r\n      if (numberComma === 'true') {\r\n        number = self.numberWithCommas(number);\r\n      }\r\n      return <Leader key = { i } title = { title } number = { number } />;\r\n    });\r\n\r\n    return (\r\n        <div className = \"col-md-6 panel panel-default\">\r\n          <div className = \"leaderboard__wrapper\">\r\n            <div className = \"leaderboard__title panel-heading\">\r\n              <h5>{ this.props.title }</h5>\r\n            </div>\r\n            <div className = \"leaderboard__results\">\r\n              { leaders }\r\n            </div>\r\n            {/*\r\n             <div className=\"sort-btn\">\r\n             <div href=\"#\">Sort</div>\r\n             <div>{this.state.sortOrder}</div>\r\n             </div>\r\n             */ }\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeaderBoard;","import React, {Component} from 'react';\r\nimport Chart              from 'chart.js';\r\n\r\nclass Graphs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.createGraph = this.createGraph.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createGraph();\r\n  }\r\n\r\n  // noinspection JSUnusedLocalSymbols\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.graphData !== this.props.graphData) {\r\n      this.state.myChart.destroy();\r\n      this.createGraph();\r\n    }\r\n  }\r\n\r\n  createGraph() {\r\n    Chart.defaults.scale.ticks.beginAtZero = true;\r\n    Chart.defaults.scale.gridLines.zeroLineColor = 'rgba(255, 255, 255, 0.1)';\r\n    Chart.defaults.scale.gridLines.color = 'rgba(255, 255, 255, 0.02)';\r\n\r\n    const colors = [\r\n      '#4BC0C0',\r\n      '#FF6384',\r\n      '#FFCD56',\r\n      '#3FC62E',\r\n      '#E55AFF',\r\n      '#CB843F',\r\n      '#F583FF',\r\n      '#49FF60',\r\n      '#4CC6BF',\r\n      '#F3F6FF',\r\n    ];\r\n    const hoverColors = [\r\n      '#287FC0',\r\n      '#FF001C',\r\n      '#F6EC04',\r\n      '#17920F',\r\n      '#9E00FF',\r\n      '#CB5F0B',\r\n      '#EA1DFF',\r\n      '#12D021',\r\n      '#0D9DB4',\r\n      '#343438',\r\n    ];\r\n    const ys = this.props.graphData.ys.map((data, index) => {\r\n      data['fill'] = false;\r\n      data['lineTension'] = .4;\r\n      data['pointBorderColor'] = false;\r\n      this.props.graphData.type === 'bar'\r\n          ? data['borderColor'] = colors\r\n          : data['borderColor'] = colors[index];\r\n      data['borderWidth'] = 2;\r\n      this.props.graphData.type === 'bar'\r\n          ? data['backgroundColor'] = colors\r\n          : data['backgroundColor'] = colors[index];\r\n      data['showLine'] = true;\r\n      return data;\r\n    });\r\n    const chart1 = document.getElementById('myChart').getContext('2d');\r\n    const myChart = new Chart(chart1, {\r\n      type   : this.props.graphData.type,\r\n      data   : {\r\n        labels              : this.props.graphData.xs,\r\n        datasets            : ys,\r\n        hoverBackgroundColor: hoverColors,\r\n        borderColor         : '#252830',\r\n      },\r\n      options: {\r\n        title           : {display: false},\r\n        animation       : {duration: 2000},\r\n        responsive      : true,\r\n        aspectRatio     : 3,\r\n        maintainAspectRatio: true,\r\n        defaultFontColor: '#999999',\r\n        defaultFontSize : 10,\r\n        tooltips        : {\r\n          enabled    : true,\r\n          borderColor: 'white',\r\n        },\r\n        legend          : {\r\n          display  : true,\r\n          align    : 'center',\r\n          fullWidth: true,\r\n        },\r\n      },\r\n    });\r\n    this.setState({myChart});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className = \"charts\">\r\n          <div className = \"container-fluid\">\r\n            <div className = \"row\">\r\n              <div className = \"col-md-12\">\r\n                <div className = \"chart-container\">\r\n                  {/*<h3>{ this.props.graphData.title }</h3>*/ }\r\n                  <canvas id = \"myChart\" style={{height: '200px'}} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graphs;","import React, {Component} from 'react';\r\nimport LineChart          from '../common/LineChart';\r\nimport PieChart           from '../common/PieChart';\r\nimport StaffList          from '../common/StaffList';\r\nimport LeaderBoard        from '../common/LeaderBoard';\r\nimport Graphs             from '../common/Graphs';\r\n// noinspection ES6CheckImport\r\nimport {Redirect}         from 'react-router-dom';\r\nimport '../assets/styles/UIDashboard.css';\r\nimport Spinner            from '../Spinner';\r\nimport {\r\n  allUsersCount,\r\n  allVisitCount,\r\n  loggedInVisit,\r\n  updateDashboardVisit,\r\n  getServerConnections,\r\n  getUserCount,\r\n  getPageVisits,\r\n  getEnrollCount,\r\n  getGenderChart,\r\n  getClassDaysChart,\r\n  getPersonalDaysChart,\r\n  getAgeRange,\r\n  getCoachesDayWork,\r\n  getCoachesPersonalWork,\r\n}                         from '../../repository';\r\nimport {AnimatedOnScroll} from 'react-animated-css-onscroll';\r\n\r\nclass UIDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading         : true,\r\n      // Set to first option of select\r\n      firstGraphLoaded: false,\r\n      selectedGraph   : 0,\r\n      graphData       : [],\r\n      // Donought chats data\r\n      genders         : {id: 'gender', data: [], labels: []},\r\n      enroll          : {id: 'enroll', data: [], labels: []},\r\n      personal        : {id: 'personal', data: [], labels: []},\r\n      // Leaderboards data\r\n      uiDataPageViews : [],\r\n      uiDataUserTypes : [],\r\n    };\r\n\r\n    this.handleChart = this.handleChart.bind(this);\r\n    this.visitCounts = this.visitCounts.bind(this);\r\n    this.userCounts = this.userCounts.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Page Visits\r\n    loggedInVisit().then();\r\n    updateDashboardVisit().then();\r\n    // Leaderboards\r\n    allVisitCount().then(response => this.visitCounts(response));\r\n    allUsersCount().then(response => this.userCounts(response));\r\n    // Pie Charts\r\n    getGenderChart().then(response => this.setState({\r\n      genders: {\r\n        id    : 'gender',\r\n        labels: ['Male', 'Female'],\r\n        data  : response.map(val => val.count),\r\n      },\r\n    }));\r\n    getClassDaysChart().then(response => this.setState({\r\n      enroll: {\r\n        id    : 'enroll',\r\n        labels: response.map(val => val.Day),\r\n        data  : response.map(val => val.count),\r\n      },\r\n    }));\r\n    getPersonalDaysChart().then(response => this.setState({\r\n      personal: {\r\n        id    : 'personal',\r\n        labels: response.map(val => this.indexToDay(val.Day - 1)),\r\n        data  : response.map(val => val.count),\r\n      },\r\n    }));\r\n    // Graphs\r\n    this.getGraphData.then(() => {\r\n      this.setState({loading: false});\r\n    });\r\n  }\r\n\r\n  getGraphData = new Promise((resolve) => {\r\n    getCoachesDayWork().then(response => {\r\n      let graphData = [...this.state.graphData];\r\n      const finalCoachData = [];\r\n      this.groupBy(response, response => response.Coach_ID)\r\n          .forEach(val => {\r\n            const coachData = {\r\n              label: `${ val[0].CoachName } ${ val[0].Surname }`,\r\n              data : [0, 0, 0, 0, 0, 0, 0],\r\n            };\r\n            for (let v of val) {\r\n              const dayIndex = this.dayToIndex(v.Day);\r\n              if (dayIndex === -1) {\r\n                continue;\r\n              }\r\n              // noinspection JSUnresolvedVariable\r\n              coachData.data[dayIndex] += v.Participants;\r\n            }\r\n            finalCoachData.push(coachData);\r\n          });\r\n      graphData.push({\r\n        title: 'Participants in Coaches Classes',\r\n        type : 'line',\r\n        xs   : [\r\n          'Monday',\r\n          'Tuesday',\r\n          'Wednesday',\r\n          'Thursday',\r\n          'Friday',\r\n          'Saturday',\r\n          'Sunday',\r\n        ],\r\n        ys   : finalCoachData,\r\n      });\r\n      this.setState({graphData, firstGraphLoaded: true});\r\n    })\r\n        .then(() => getCoachesPersonalWork().then(response => {\r\n          let graphData = [...this.state.graphData];\r\n          const finalCoachData = [];\r\n          this.groupBy(response, response => response.Coach_ID)\r\n              .forEach(val => {\r\n                const coachData = {\r\n                  label: `${ val[0].CoachName } ${ val[0].Surname }`,\r\n                  data : [0, 0, 0, 0, 0, 0, 0],\r\n                };\r\n                for (let v of val) {\r\n                  const dayIndex = v.Day;\r\n                  if (dayIndex < 0 || dayIndex > 6) {\r\n                    continue;\r\n                  }\r\n                  // noinspection JSUnresolvedVariable\r\n                  coachData.data[dayIndex] += v.Participants;\r\n                }\r\n                finalCoachData.push(coachData);\r\n              });\r\n          graphData.push({\r\n            title: 'Participants in Coaches Personal Classes',\r\n            type : 'line',\r\n            xs   : [\r\n              'Monday',\r\n              'Tuesday',\r\n              'Wednesday',\r\n              'Thursday',\r\n              'Friday',\r\n              'Saturday',\r\n              'Sunday',\r\n            ],\r\n            ys   : finalCoachData,\r\n          });\r\n          this.setState({graphData, firstGraphLoaded: true});\r\n        }))\r\n        .then(() => getAgeRange().then(response => {\r\n          let graphData = [...this.state.graphData];\r\n          graphData.push({\r\n            title: 'Age Range User Count',\r\n            type : 'bar',\r\n            xs   : Object.keys(response),\r\n            ys   : [{label: 'Users', data: Object.values(response)}],\r\n          });\r\n          this.setState({graphData});\r\n        }))\r\n        .then(() => resolve());\r\n  });\r\n\r\n  dayToIndex = (day) => {\r\n    switch (day) {\r\n      case 'Monday':\r\n        return 0;\r\n      case 'Tuesday':\r\n        return 1;\r\n      case 'Wednesday':\r\n        return 2;\r\n      case 'Thursday':\r\n        return 3;\r\n      case 'Friday':\r\n        return 4;\r\n      case 'Saturday':\r\n        return 5;\r\n      case 'Sunday':\r\n        return 6;\r\n      default:\r\n        return -1;\r\n    }\r\n  };\r\n\r\n  indexToDay = (day) => {\r\n    switch (parseInt(day)) {\r\n      case 0:\r\n        return 'Monday';\r\n      case 1:\r\n        return 'Tuesday';\r\n      case 2:\r\n        return 'Wednesday';\r\n      case 3:\r\n        return 'Thursday';\r\n      case 4:\r\n        return 'Friday';\r\n      case 5:\r\n        return 'Saturday';\r\n      case 6:\r\n        return 'Sunday';\r\n      default:\r\n        return 'Undefined';\r\n    }\r\n  };\r\n\r\n  groupBy(list, keyGetter) {\r\n    const map = new Map();\r\n    list.forEach((item) => {\r\n      const key = keyGetter(item);\r\n      const collection = map.get(key);\r\n      if (!collection) {\r\n        map.set(key, [item]);\r\n      } else {\r\n        collection.push(item);\r\n      }\r\n    });\r\n    return map;\r\n  }\r\n\r\n  userCounts(response) {\r\n    let types = [];\r\n    for (let v of response.types) {\r\n      // noinspection JSUnfilteredForInLoop\r\n      types.push({type: v.level, count: v.count});\r\n    }\r\n    this.setState({uiDataUserTypes: types});\r\n  }\r\n\r\n  visitCounts(response) {\r\n    let visits = [];\r\n    for (let v in response.visits[0]) {\r\n      let page = null;\r\n      // noinspection JSUnfilteredForInLoop\r\n      switch (v) {\r\n        case 'HOME_PAGE':\r\n          page = '/classes';\r\n          break;\r\n        case 'CLASSES':\r\n          page = '/ (Logged Out)';\r\n          break;\r\n        case 'ABOUT_US':\r\n          page = '/about';\r\n          break;\r\n        case 'PROFILE_USER':\r\n          page = '/user/profile';\r\n          break;\r\n        case 'PROFILE_COACH':\r\n          page = '/coach/profile';\r\n          break;\r\n        case 'PROFILE_ADMIN':\r\n          page = '/admin/profile';\r\n          break;\r\n        case 'ADMIN_DASHBOARD':\r\n          page = '/admin/profile/dashboard';\r\n          break;\r\n        case 'LOGGED_IN':\r\n          page = '/ (Logged In)';\r\n          break;\r\n        default:\r\n          continue;\r\n      }\r\n      // noinspection JSUnfilteredForInLoop\r\n      visits.push({page: page, views: response.visits[0][v]});\r\n    }\r\n    this.setState({uiDataPageViews: visits});\r\n  };\r\n\r\n  handleChart(e) {\r\n    this.setState({[e.target.name]: Number(e.target.value)});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n          { this.state.loading ?\r\n              <Spinner />\r\n              :\r\n              <div id = \"UIDashboard\">\r\n                <AnimatedOnScroll animationIn = \"fadeIn\">\r\n                  <div className = { 'container' }>\r\n                    { (this.props.userLevel === 'admin') ? '' :\r\n                        <Redirect to = \"/\" /> }\r\n                    <div className = \"row line__chart-wrapper\">\r\n                      <LineChart id = \"server-connections\"\r\n                                 chartSpeed = \"4250\"\r\n                                 bgColor = \"#1BC98E\"\r\n                                 title = \"Server\"\r\n                                 getData = { getServerConnections }\r\n                      />\r\n                      <LineChart id = \"page-visits\"\r\n                                 chartSpeed = \"6100\"\r\n                                 bgColor = \"#E64759\"\r\n                                 title = \"Page Visits\"\r\n                                 getData = { getPageVisits }\r\n                      />\r\n                      <LineChart id = \"user-count\"\r\n                                 chartSpeed = \"4900\"\r\n                                 bgColor = \"#9F86FF\"\r\n                                 title = \"Users\"\r\n                                 getData = { getUserCount }\r\n                      />\r\n                      <LineChart id = \"enrollment-count\"\r\n                                 chartSpeed = \"3200\"\r\n                                 bgColor = \"#E4D836\"\r\n                                 title = \"Enrolled\"\r\n                                 getData = { getEnrollCount }\r\n                      />\r\n                    </div>\r\n                    <div className = \"row pie__chart-wrapper\">\r\n                      <PieChart title = \"Genders\"\r\n                                data = { this.state.genders.data }\r\n                                labels = { this.state.genders.labels }\r\n                                id = { this.state.genders.id }\r\n                      />\r\n                      <PieChart title = \"Enrolled Classes\"\r\n                                data = { this.state.enroll.data }\r\n                                labels = { this.state.enroll.labels }\r\n                                id = { this.state.enroll.id }\r\n                      />\r\n                      <PieChart title = \"Personal Classes\"\r\n                                data = { this.state.personal.data }\r\n                                labels = { this.state.personal.labels }\r\n                                id = { this.state.personal.id }\r\n                      />\r\n                    </div>\r\n                    <div className = \"select-chart\">\r\n                      <select name = \"selectedGraph\"\r\n                              onChange = { this.handleChart }\r\n                      >\r\n                        {/*<option selected disabled>Choose a chart to display</option>*/ }\r\n                        <option value = \"0\">Participants in Coaches Classes\r\n                        </option>\r\n                        <option value = \"1\">Participants in Coaches Personal\r\n                                            Classes\r\n                        </option>\r\n                        <option value = \"2\">Age Range User Count</option>\r\n                      </select>\r\n                    </div>\r\n                    { this.state.firstGraphLoaded &&\r\n                      <Graphs graphData = { this.state.graphData[this.state.selectedGraph] } /> }\r\n                    <StaffList />\r\n                    <div className = \"row leaderboards\">\r\n                      <LeaderBoard data = { this.state.uiDataUserTypes }\r\n                                   sortAsc = { false }\r\n                                   title = \"User Types\"\r\n                                   dataSort = \"count\"\r\n                                   dataTitle = \"type\"\r\n                      />\r\n                      <LeaderBoard data = { this.state.uiDataPageViews }\r\n                                   sortAsc = { true }\r\n                                   title = \"Most Visited Pages\"\r\n                                   dataSort = \"views\"\r\n                                   dataTitle = \"page\"\r\n                                   numberComma = \"true\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </AnimatedOnScroll>\r\n              </div>\r\n          }\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UIDashboard;","import React, {Component} from 'react';\r\nimport {Link}             from 'react-router-dom';\r\nimport '../assets/styles/NotFound.css';\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n        <div id = \"notfound\">\r\n          <div className = \"notfound\">\r\n            <div className = \"notfound-404\">\r\n              <div/>\r\n              <h1>404</h1>\r\n            </div>\r\n            <h2>Page not found</h2>\r\n            <p>The page you are looking for might have been removed had its name\r\n               changed or is temporarily unavailable.</p>\r\n            <Link to = { '/' }>home page</Link>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport default NotFound;","import React, {Component} from 'react';\r\n// import Flippy, { FrontSide, BackSide } from 'react-flippy';\r\nimport '../assets/styles/loginStyle.css';\r\n// import {Link} from 'react-router-dom';\r\nimport 'react-bootstrap/';\r\nimport Recaptcha          from 'react-recaptcha';\r\n\r\nimport {logIn, signUp} from '../../repository';\r\nimport history         from '../../history';\r\n\r\nclass LoginModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fname           : '',\r\n      lname           : '',\r\n      username        : '',\r\n      password        : '',\r\n      repeatedPassword: '',\r\n      email           : '',\r\n      gender          : '',\r\n      med             : null,\r\n      age             : '',\r\n      bDate           : '',\r\n      toggle          : true,\r\n      value           : true,\r\n      isVerified      : false,\r\n      userVerify      : '',\r\n      token           : '',\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onRadioChange = this.onRadioChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    // this.recaptchaLoaded = this.recaptchaLoaded.bind(this);\r\n    this.verifyCallback = this.verifyCallback.bind(this);\r\n    // this.onPassword = this.onPassword.bind(this);\r\n  }\r\n\r\n  verifyCallback = (response) => {\r\n    if (response) {\r\n      this.setState({isVerified: true});\r\n    }\r\n  };\r\n  handleChange = (e) => {\r\n    if (e.target.name === 'bDate') {\r\n      this.setState({[e.target.name]: e.target.value});\r\n      this.calcDate(e);\r\n    } else {\r\n      this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n  };\r\n  onRadioChange = (e) => {\r\n    this.setState({gender: e.target.value});\r\n  };\r\n  changeSign = () => {\r\n    this.setState({toggle: !this.state.toggle});\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const crypto = require('crypto');\r\n    const newToken = crypto.randomBytes(10).toString('hex');\r\n\r\n    const Crypto = require('cryptr');\r\n    const cryptr = new Crypto('ffn_private_key_!!!!');\r\n\r\n    const encryptedString = cryptr.encrypt(this.state.password);\r\n\r\n    const dataLogIn = {\r\n      username: this.state.username,\r\n      password: encryptedString,\r\n    };\r\n    // console.log(this.state.password,  this.state.username);\r\n    logIn(dataLogIn)\r\n        .then(data => {\r\n          if (!data.level) {\r\n            throw Error;\r\n          }\r\n          this.props.toggle();    // Close Modal\r\n          this.props.setUserLevel(data.level);\r\n          history.push('/user/profile');\r\n        })\r\n        .catch(err => alert(err));\r\n  };\r\n  onSignUp = (e) => {\r\n    e.preventDefault();\r\n    const ver = 0;\r\n    if (this.state.password !== this.state.repeatedPassword) {\r\n      alert('Password dont match');\r\n    } else {\r\n      if (this.state.isVerified) {\r\n        const crypto = require('crypto');\r\n        const newToken = crypto.randomBytes(10).toString('hex');\r\n        // Create output query\r\n        const Crypto = require('cryptr');\r\n        const cryptr = new Crypto('ffn_private_key_!!!!');\r\n\r\n        const encryptedString = cryptr.encrypt(this.state.password);\r\n\r\n        const dataSign = {\r\n          username: this.state.username,\r\n          password: encryptedString,\r\n          fname   : this.state.fname,\r\n          lname   : this.state.lname,\r\n          email   : this.state.email,\r\n          age     : this.state.age,\r\n          gender  : this.state.gender,\r\n          level   : this.state.level,\r\n          bDate   : this.state.bDate,\r\n          verify  : ver,\r\n          hash    : newToken,\r\n        };\r\n        signUp(dataSign)\r\n            .then(() => {\r\n                  alert(\r\n                      'Successful sign up.Please proceed to your email, so you can verify your account.');\r\n                  this.props.toggle();\r\n                },\r\n            )\r\n            .catch(err => alert(err));\r\n      } else {\r\n        alert(\r\n            'Please proceed with the recaptcha to verify that you are a human!');\r\n      }\r\n    }\r\n  };\r\n  onClose = () => {\r\n    this.props.toggle();\r\n    history.push('/forgotPassword');\r\n  };\r\n  calcDate = (dDate) => {\r\n    let thenD = dDate.target.value;\r\n    let str = thenD.split('-');\r\n    let now = new Date();\r\n    let ageDif = now.getFullYear() - str[0];\r\n    this.setState({age: ageDif});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n        <div className = { 'wrapper' }\r\n             id = { 'LoginModal' }\r\n             tabIndex = { '-1' }\r\n             role = { 'dialog' }\r\n             aria-labelledby = { 'exampleModalLabel' }\r\n             aria-hidden = { 'true' }\r\n        >\r\n          <input type = { 'checkbox' }\r\n                 name = { 'flipper__checkbox' }\r\n                 id = { 'flipper__checkbox' }\r\n                 className = { 'flipper__checkbox' }\r\n                 hidden\r\n          />\r\n\r\n          <div className = { 'form__container' }>\r\n            { this.state.toggle ?\r\n                <div className = { 'form__login' }>\r\n                  <h1 className = { 'form__header' }>Login</h1>\r\n                  <div className = { 'imgcontainer' }>\r\n                    {/*<div className = { 'cursive' }>*/ }\r\n\r\n                    {/*</div>*/ }\r\n                  </div>\r\n\r\n                  <form id = { 'loginForm' }\r\n                        action = { '#' }\r\n                        method = { 'post' }\r\n                        className = { 'form' }\r\n                  >\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'username' }>\r\n                                    <span className = { 'label__icon fa fa-user coloring' }>\r\n                                    </span>\r\n                      </label>\r\n                      <input id = { 'username' }\r\n                             name = { 'username' }\r\n                             className = { 'form_element' }\r\n                             type = { 'text' }\r\n                             pattern = \"^ *[a-zA-Z0-9]+.*\"\r\n                             placeholder = { 'Username' }\r\n                             required\r\n                             onChange = { this.handleChange }\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = \"password\">\r\n                                    <span className = \"label__icon fa fa-lock coloring\">\r\n                                    </span>\r\n                      </label>\r\n                      <input type = { 'password' }\r\n                             className = { 'form_element' }\r\n                             id = { 'pword' }\r\n                             pattern = { '^ *[a-zA-Z]+.*' }\r\n                             placeholder = { 'Enter Password' }\r\n                             name = { 'password' }\r\n                             required\r\n                             onChange = { this.handleChange }\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <input className = { 'form__button' }\r\n                             type = { 'submit' }\r\n                             value = { 'Login' }\r\n                             onClick = { this.onSubmit }\r\n                      />\r\n                    </fieldset>\r\n\r\n                    <fieldset className = { 'form__group' }\r\n                              style = { {'paddingTop': 0} }\r\n                    >\r\n                      {/*<label htmlFor = { 'checkbox' }>*/ }\r\n                      {/*  <input id = { 'checkbox' }*/ }\r\n                      {/*         name = { 'checkbox' }*/ }\r\n                      {/*         className = { 'checkbox--forget' }*/ }\r\n                      {/*         type = { 'checkbox' }*/ }\r\n                      {/*  />*/ }\r\n                      {/*  <span className = { 'subtitle' }>Remember me</span>*/ }\r\n                      {/*</label>*/ }\r\n                      <small>\r\n                        <button style = { {\r\n                          'backgroundColor': 'transparent',\r\n                          'border'         : 'none',\r\n                          'paddingLeft'    : 0,\r\n                        } }\r\n                                className = { 'form__link' }\r\n                                onClick = { this.onClose }\r\n                        >Forgot your password?\r\n                        </button>\r\n                        <br />\r\n                        {/*<span className = { 'subtitle' }> Not a member yet?</span>*/}\r\n                        {/*<small className = { 'form__link' }*/}\r\n                        {/*       onClick = { this.changeSign }*/}\r\n                        {/*>*/}\r\n                        {/*  Create your account*/}\r\n                        {/*</small>*/}\r\n                        {/*.*/}\r\n                      </small>\r\n                    </fieldset>\r\n                  </form>\r\n                </div>\r\n                :\r\n                <div className = { 'form__signup' }>\r\n                  <h1 className = { 'form__header' }>Sign Up</h1>\r\n                  <form id = { 'signupForm' }\r\n                        method = { 'post' }\r\n                        className = { 'form' }\r\n                  >\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'signUpName' }>\r\n                                        <span className = { 'label__icon fa fa-user coloring' }>\r\n                                        </span>\r\n                      </label>\r\n                      <input name = { 'fname' }\r\n                             className = { 'form_element signUpName' }\r\n                             type = { 'text' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'First Name' }\r\n                             required\r\n                      />\r\n                      <span>\r\n                                           </span>\r\n                      <input name = { 'lname' }\r\n                             className = { 'form_element signUpName' }\r\n                             type = { 'text' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Last Name' }\r\n                             required\r\n                      />\r\n\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'username' }>\r\n                                        <span className = { 'label__icon fa fa-user coloring' }>\r\n                                        </span>\r\n                      </label>\r\n                      <input id = { 'signUpUsername' }\r\n                             name = { 'username' }\r\n                             className = { 'form__element' }\r\n                             type = { 'text' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Username' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'signUpMail' }>\r\n                        <span className = { 'label__icon fa fa-envelope coloring' }>\r\n                        </span>\r\n                      </label>\r\n                      <input id = { 'signUpMail' }\r\n                             name = { 'email' }\r\n                             className = { 'form__element' }\r\n                             type = { 'email' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Email' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'signUpPassword' }>\r\n                        <span className = { 'label__icon fa fa-lock coloring' }>\r\n                        </span>\r\n                      </label>\r\n                      <input id = { 'signUpPassword' }\r\n                             name = { 'password' }\r\n                             className = { 'form__element' }\r\n                             type = { 'password' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Password' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'signUpPasswordRepeat' }>\r\n                        <span className = { 'label__icon fa fa-lock coloring' }>\r\n                        </span>\r\n                      </label>\r\n                      <input id = \"signUpPasswordRepeat\"\r\n                             name = { 'repeatedPassword' }\r\n                             className = { 'form__element' }\r\n                             type = { 'password' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Repeat Password' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <label htmlFor = { 'age' } id = { 'birthday' }>\r\n                        <span className = { 'subtitle' }> Birth Date: </span>\r\n                        <span className = { 'fas fa-birthday-cake' }>\r\n                                        </span>\r\n                      </label>\r\n                      <input id = { 'signUpAge' }\r\n                             name = { 'bDate' }\r\n                             className = { 'form_element' }\r\n                             type = { 'date' }\r\n                             onChange = { this.handleChange }\r\n                             placeholder = { 'Birth Date' }\r\n                             min = { '1900-01-01' }\r\n                             max = { '2010-01-01' }\r\n                             required\r\n                      />\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <div className = { 'form__radio' }>\r\n                        <label className = { 'label__style' }>Male\r\n                          <input type = { 'radio' }\r\n                                 value = { '1' }\r\n                                 checked = { this.state.gender === '1' }\r\n                                 onChange = { this.onRadioChange }\r\n                          />\r\n                          <span className = { 'checkmark' }/>\r\n                        </label>\r\n                        <label className = { 'label__style' }>Female\r\n                          <input type = { 'radio' }\r\n                                 value = { '2' }\r\n                                 checked = { this.state.gender === '2' }\r\n                                 onChange = { this.onRadioChange }\r\n                          />\r\n                          <span className = { 'checkmark' }/>\r\n                        </label>\r\n                      </div>\r\n                    </fieldset>\r\n                    <fieldset className = { 'form__group' }>\r\n                      <input className = { 'form__button' }\r\n                             type = { 'submit' }\r\n                             value = { 'Sign up' }\r\n                             onClick = { this.onSignUp }\r\n                      />\r\n                    </fieldset>\r\n                    <Recaptcha\r\n                        elementID = { 'g-recaptcha' }\r\n                        sitekey = \"6Lf0od8UAAAAAFoog9iFIpVd8rcPxBwHpUKpnCua\"\r\n                        render = \"explicit\"\r\n                        theme = \"dark\"\r\n                        verifyCallback = { this.verifyCallback }\r\n                    />\r\n                    <small>\r\n                      <span className = { 'subtitle' }> Are you already a member?</span>\r\n                      <label htmlFor = { 'flipper__checkbox' }\r\n                             onClick = { this.changeSign }\r\n                             className = { 'form__link' }\r\n                      >\r\n                        Click here to login\r\n                      </label>\r\n                      .\r\n                    </small>\r\n                  </form>\r\n                </div>\r\n            }\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginModal;","import React  from 'react';\r\nimport $      from 'jquery';\r\nimport Modal  from 'react-bootstrap/Modal';\r\nimport Signup from '../common/SignUp';\r\nimport LogIn  from '../common/LogIn';\r\nimport '../assets/styles/SignInUpModal.css';\r\nimport ToggleModal from \"../common/ToggleModal\";\r\nimport MessagesModal from \"../common/MessagesModal\";\r\nimport LoginModal from \"../common/LoginModal\";\r\n\r\nclass LoginAndroid extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: true,\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({showModal: true});\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <ToggleModal\r\n                modal = { this.state.showModal }\r\n                toggle = { this.toggleModal }\r\n                modalSize = { 'md' }\r\n                modalHeader = { 'Login Form' }\r\n                modalBody = { <LoginModal /> }\r\n                setUserLevel = { this.props.setUserLevel }\r\n            />\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginAndroid;\r\n","import React, {Component} from 'react';\r\n// noinspection ES6CheckImport\r\nimport {Route, Router, Switch} from 'react-router-dom';\r\nimport PageWrapper from './components/PageWrapper';\r\nimport Home from './components/pages/Home';\r\nimport AboutUs from './components/pages/AboutUs';\r\nimport ProfileUser from './components/pages/ProfileUser';\r\nimport ProfileCoach from './components/pages/ProfileCoach';\r\nimport ProfileAdmin from './components/pages/ProfileAdmin';\r\nimport Classes from './components/pages/Classes';\r\nimport ScrollToTop from './components/common/ScrollToTop';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport forgotPassword from \"./components/pages/ForgotPassword\";\r\nimport VerifyEmail from \"./components/pages/VerifyEmail\";\r\nimport ResetPassword from \"./components/pages/ResetPassword\";\r\nimport history from './history';\r\nimport {getUserLevel, isAuthenticated} from './repository';\r\nimport UIDashboard from './components/pages/UIDashboard';\r\nimport Tabletop from 'tabletop';\r\nimport Spinner from './components/Spinner';\r\nimport NotFound from './components/common/NotFound';\r\nimport SignInUpModal from \"./components/common/SignInUpModal\";\r\nimport LoginAndroid from \"./components/pages/LoginAndroid\";\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userLevel: undefined,\r\n            stylesheetData: {},\r\n            loading: true,\r\n        };\r\n        this.setUserLevel = this.setUserLevel.bind(this);\r\n    };\r\n\r\n    componentDidMount() {\r\n        // Persist on state\r\n        if (isAuthenticated()) {\r\n            getUserLevel().then(level => this.setUserLevel(level));\r\n        }\r\n\r\n        // noinspection JSUnusedGlobalSymbols\r\n        Tabletop.init({\r\n            key: process.env.REACT_APP_TABLETOP_API_KEY,\r\n            callback: googleData => {\r\n                this.setState({stylesheetData: this.readStylesheetInfo(googleData)},\r\n                    () => {\r\n                        this.setState({loading: false});\r\n                    });\r\n            },\r\n            simpleSheet: false,\r\n        });\r\n    }\r\n\r\n    readStylesheetInfo(data) {\r\n        const home = data['Home'];\r\n        const classes = data['Classes'];\r\n        const about = data['About'];\r\n        const footer = data['Footer'];\r\n        const jsonData = {};\r\n\r\n        // Home\r\n        const jsonHome = {'carousel': [], 'services': []};\r\n        home.columnNames.forEach(col => {\r\n            if (col.includes('carousel')) {\r\n                jsonHome['carousel'].push({\r\n                    'label': home.elements[0][col],\r\n                    'text': home.elements[1][col],\r\n                    'src': home.elements[2][col],\r\n                });\r\n            }\r\n            if (col.includes('services')) {\r\n                jsonHome['services'].push({\r\n                    'title': home.elements[0][col],\r\n                    'message': home.elements[1][col],\r\n                    'icon': home.elements[2][col],\r\n                });\r\n            }\r\n        });\r\n\r\n        // Classes\r\n        const jsonClasses = {'classes': [], 'timetable': {}};\r\n        classes.columnNames.forEach(col => {\r\n            if (col.includes('class')) {\r\n                jsonClasses['classes'].push({\r\n                    'title': classes.elements[0][col],\r\n                    'text': classes.elements[1][col],\r\n                    'src': classes.elements[2][col],\r\n                });\r\n            }\r\n            if (col.includes('timetable')) {\r\n                jsonClasses['timetable'] = {'src': classes.elements[0][col]};\r\n            }\r\n        });\r\n\r\n        // About\r\n        const jsonAbout = {'coach': [], 'contact': {}};\r\n        about.columnNames.forEach(col => {\r\n            if (col.includes('coach')) {\r\n                jsonAbout['coach'].push({\r\n                    'name': about.elements[0][col],\r\n                    'text': about.elements[1][col],\r\n                    'src': about.elements[2][col],\r\n                });\r\n            }\r\n            if (col.includes('contact')) {\r\n                jsonAbout['contact']['address'] = about.elements[0][col];\r\n                jsonAbout['contact']['phone'] = about.elements[1][col];\r\n                jsonAbout['contact']['email'] = about.elements[2][col];\r\n                jsonAbout['contact']['facebook'] = about.elements[3][col];\r\n                jsonAbout['contact']['instagram'] = about.elements[4][col];\r\n            }\r\n        });\r\n\r\n        // Footer\r\n        const jsonFooter = {'social': {}, 'about-us': {}, 'about-club': []};\r\n        footer.columnNames.forEach(col => {\r\n            if (col.includes('social')) {\r\n                jsonFooter['social']['text'] = footer.elements[0][col];\r\n                jsonFooter['social']['facebook'] = footer.elements[1][col];\r\n                jsonFooter['social']['instagram'] = footer.elements[2][col];\r\n            }\r\n            if (col.includes('about-us')) {\r\n                jsonFooter['about-us']['address'] = footer.elements[0][col];\r\n                jsonFooter['about-us']['email'] = footer.elements[1][col];\r\n            }\r\n            if (col.includes('about-club')) {\r\n                for (let index of footer.elements) {\r\n                    if (index['about-club']) {\r\n                        jsonFooter['about-club'].push(index['about-club']);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        jsonData['Home'] = jsonHome;\r\n        jsonData['Class'] = jsonClasses;\r\n        jsonData['About'] = jsonAbout;\r\n        jsonData['Footer'] = jsonFooter;\r\n\r\n        return jsonData;\r\n    }\r\n\r\n    setUserLevel = (userLevel) => {\r\n        this.setState({userLevel});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.loading ?\r\n                        <Spinner/>\r\n                        :\r\n                        <Router history={history}>\r\n                            <PageWrapper userLevel={this.state.userLevel}\r\n                                         setUserLevel={this.setUserLevel}\r\n                                         stylesheetData={this.state.stylesheetData}\r\n                            >\r\n                                <ScrollToTop/>\r\n                                <Switch>\r\n                                    <Route exact\r\n                                           path=\"/\"\r\n                                           component={(props) => <Home {...props}\r\n                                                                       userLevel={this.state.userLevel}\r\n                                                                       stylesheetData={this.state.stylesheetData}\r\n                                           />}\r\n                                    />\r\n                                    <Route path=\"/about\"\r\n                                           component={(props) => <AboutUs {...props}\r\n                                                                          userLevel={this.state.userLevel}\r\n                                                                          stylesheetData={this.state.stylesheetData}\r\n                                           />}\r\n                                    />\r\n                                    <Route path=\"/classes\"\r\n                                           component={(props) => <Classes {...props}\r\n                                                                          userLevel={this.state.userLevel}\r\n                                                                          stylesheetData={this.state.stylesheetData}\r\n                                           />}\r\n                                    />\r\n\r\n                                  <Route exact\r\n                                         path=\"/loginAndroid\"\r\n                                         component={(props) => <LoginAndroid {...props}\r\n                                                                             setUserLevel={this.setUserLevel}\r\n                                                                             userLevel={this.state.userLevel}\r\n                                                                             stylesheetData={this.state.stylesheetData}\r\n                                         />}\r\n                                  />\r\n\r\n                                    <Route exact path=\"/forgotPassword\" component={forgotPassword}/>\r\n                                    <Route exact path=\"/verifyEmail/:id\" component={VerifyEmail}/>\r\n                                    <Route exact path={\"/resetPassword/:id\"} component={ResetPassword}/>\r\n\r\n                                    <PrivateRoute path=\"/user/profile\"\r\n                                                  component={ProfileUser}\r\n                                                  userLevel={this.state.userLevel}\r\n                                    />\r\n                                    <PrivateRoute path=\"/coach/profile\"\r\n                                                  component={ProfileCoach}\r\n                                                  userLevel={this.state.userLevel}\r\n                                    />\r\n                                    <PrivateRoute path=\"/admin/profile\"\r\n                                                  component={ProfileAdmin}\r\n                                                  userLevel={this.state.userLevel}\r\n                                    />\r\n                                    <PrivateRoute path=\"/admin/dashboard\"\r\n                                                  component={UIDashboard}\r\n                                                  userLevel={this.state.userLevel}\r\n                                    />\r\n                                    <Route component={NotFound}/>\r\n                                </Switch>\r\n                            </PageWrapper>\r\n\r\n                        </Router>\r\n\r\n\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister().then();\r\n    });\r\n  }\r\n}\r\n","import React              from 'react';\r\nimport ReactDOM           from 'react-dom';\r\nimport App                from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n      <App />,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/fitnessFactoryLogo.444228d2.png\";"],"sourceRoot":""}